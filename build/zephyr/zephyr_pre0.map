Archive member included to satisfy reference by file (symbol)

app/libapp.a(main.c.obj)      (--whole-archive)
zephyr/libzephyr.a(heap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(printk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sem.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(assert.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(dec.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hex.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rb.c.obj)  (--whole-archive)
zephyr/libzephyr.a(timeutil.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bitarray.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ring_buffer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(configs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_cache.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp32s3-mp.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(loader.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hw_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_encrypt.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_flash_api.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_mmap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_ops.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(memspi_host_driver.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(spi_flash_wrap.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mpu_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_qio_mode.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(console_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mac_addr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_module.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(hw_random.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sleep_modes.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cpu_region_protect.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_cpu_intr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_clk_tree.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_time.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(rtc_sleep.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(systimer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mspi_timing_config.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_mmu_map.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ext_mem_layout.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_crc.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_sys.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_uart.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_efuse.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_gpio.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_systimer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_wdt.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_err.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(system_internal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(reset_reason.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(efuse_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cache_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(mmu_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(systimer_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(clk_tree_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(efuse_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(xt_wdt_hal.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log_noos.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(log.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(cache_utils.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(bootloader_flash.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(flash_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(esp_restart.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(stubs.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_random.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_init.c.obj)
                              (--whole-archive)
zephyr/libzephyr.a(soc_flash_init.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                              (--whole-archive)
zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
                              (--whole-archive)
zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                              (--whole-archive)
zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                              (--whole-archive)
zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
                              (--whole-archive)
zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
                              (--whole-archive)
zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                              (--whole-archive)
zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
zephyr/kernel/libkernel.a(device.c.obj)
                              zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj) (z_impl_device_is_ready)
zephyr/kernel/libkernel.a(errno.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj) (z_impl_z_errno)
zephyr/kernel/libkernel.a(fatal.c.obj)
                              zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
zephyr/kernel/libkernel.a(init.c.obj)
                              zephyr/libzephyr.a(spi_flash_os_func_app.c.obj) (z_sys_post_kernel)
zephyr/kernel/libkernel.a(idle.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (idle)
zephyr/kernel/libkernel.a(msg_q.c.obj)
                              app/libapp.a(main.c.obj) (z_impl_k_msgq_put)
zephyr/kernel/libkernel.a(mutex.c.obj)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj) (z_impl_k_mutex_init)
zephyr/kernel/libkernel.a(sem.c.obj)
                              zephyr/libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
zephyr/kernel/libkernel.a(thread.c.obj)
                              zephyr/libzephyr.a(esp_timer.c.obj) (z_impl_k_thread_name_set)
zephyr/kernel/libkernel.a(sched.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_thread_timeout)
zephyr/kernel/libkernel.a(timeslicing.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
zephyr/kernel/libkernel.a(timeout.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (z_add_timeout)
zephyr/kernel/libkernel.a(mempool.c.obj)
                              zephyr/libzephyr.a(flash_mmap.c.obj) (k_free)
zephyr/kernel/libkernel.a(banner.c.obj)
                              zephyr/kernel/libkernel.a(init.c.obj) (boot_banner)
zephyr/kernel/libkernel.a(kheap.c.obj)
                              zephyr/kernel/libkernel.a(mempool.c.obj) (k_heap_free)
zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                              zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj) (_sw_isr_table)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                              zephyr/libzephyr.a(esp_flash_api.c.obj) (__ashldi3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                              zephyr/libzephyr.a(esp_gpio_reserve.c.obj) (__lshrdi3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                              zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj) (__bswapsi2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                              zephyr/libzephyr.a(spi_flash_chip_generic.c.obj) (__bswapdi2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                              zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj) (__divsf3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                              zephyr/libzephyr.a(spi_flash_hal.c.obj) (__adddf3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__muldf3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdf3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                              zephyr/libzephyr.a(spi_flash_hal.c.obj) (__fixdfsi)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__fixdfdi)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatunsidf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__floatundidf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__truncdfsf2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__extendsfdf2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                              zephyr/libzephyr.a(cpu.c.obj) (__ffsdi2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                              zephyr/libzephyr.a(bitarray.c.obj) (__popcountsi2)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                              zephyr/libzephyr.a(timeutil.c.obj) (__divdi3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__udivdi3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memcpy)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                              zephyr/libzephyr.a(heap.c.obj) (memset)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                              zephyr/libzephyr.a(log.c.obj) (strcmp)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                              zephyr/libzephyr.a(cbprintf_packaged.c.obj) (strlen)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                              zephyr/libzephyr.a(esp_flash_api.c.obj) (memcmp)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                              zephyr/libzephyr.a(cbprintf_complete.c.obj) (strnlen)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fprintf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fputc)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (fputs)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                              zephyr/libzephyr.a(heap_caps_zephyr.c.obj) (printf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
                              zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj) (puts)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                              zephyr/libzephyr.a(esp_mmu_map.c.obj) (snprintf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                              (__l_vfprintf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                              (__l_vfscanf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                              zephyr/libzephyr.a(log.c.obj) (vprintf)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                              /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (strchr)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                              /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (fgetc)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                              /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o) (__file_str_put)
/home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                              /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (ungetc)

Discarded input sections

 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x173 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x21 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 app/libapp.a(main.c.obj)
 .text.get_state_index
                0x0000000000000000        0xa app/libapp.a(main.c.obj)
 .bss.q_table   0x0000000000000000      0x190 app/libapp.a(main.c.obj)
 .rodata.actuator_tid
                0x0000000000000000        0x4 app/libapp.a(main.c.obj)
 .rodata.ai_tid
                0x0000000000000000        0x4 app/libapp.a(main.c.obj)
 .rodata.sensor_tid
                0x0000000000000000        0x4 app/libapp.a(main.c.obj)
 .literal.inplace_realloc$isra$0
                0x0000000000000000       0x38 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_alloc
                0x0000000000000000       0x28 zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_realloc
                0x0000000000000000       0x1c zephyr/libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x1c zephyr/libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap.c.obj)
 .text.inplace_realloc$isra$0
                0x0000000000000000       0xf2 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x26 zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_alloc
                0x0000000000000000       0xfe zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_realloc
                0x0000000000000000       0x6a zephyr/libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000       0x7e zephyr/libzephyr.a(heap.c.obj)
 .literal.cbvprintf_package
                0x0000000000000000       0x1c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbpprintf_external
                0x0000000000000000        0x4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package_convert
                0x0000000000000000       0x2c zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x425 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000       0xbc zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x74 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.is_ptr   0x0000000000000000       0x5e zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_convert
                0x0000000000000000      0x3a4 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x1451 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x4cb zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x1b11 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x278 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000     0x2147 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0x749 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 zephyr/libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 zephyr/libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa zephyr/libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d zephyr/libzephyr.a(printk.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 zephyr/libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 zephyr/libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4cf zephyr/libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x227 zephyr/libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x159 zephyr/libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x47a zephyr/libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x371 zephyr/libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.encode_uint
                0x0000000000000000        0x8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.z_cbvprintf_impl
                0x0000000000000000       0x3c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.encode_uint
                0x0000000000000000       0xb8 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.outs     0x0000000000000000       0x2d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .text.z_cbvprintf_impl
                0x0000000000000000      0x98d zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000000000     0x1097 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000000      0x433 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000000000     0x13fd zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000000      0x150 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000000000     0x1c2c zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x0000000000000000      0x658 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .literal.assert_post_action
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .literal.assert_print
                0x0000000000000000        0x4 zephyr/libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000        0xc zephyr/libzephyr.a(assert.c.obj)
 .text.assert_print
                0x0000000000000000       0x26 zephyr/libzephyr.a(assert.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000000000      0x1ba zephyr/libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000000      0x12d zephyr/libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000000000      0x252 zephyr/libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000000000      0x318 zephyr/libzephyr.a(assert.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(assert.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 zephyr/libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6e zephyr/libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12b zephyr/libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c zephyr/libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x13d zephyr/libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x2c9 zephyr/libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x248 zephyr/libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(dec.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 zephyr/libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc zephyr/libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x4e zephyr/libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2a7 zephyr/libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x119 zephyr/libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x27b zephyr/libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x578 zephyr/libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x24f zephyr/libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hex.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 zephyr/libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x28 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 zephyr/libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 zephyr/libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x4d zephyr/libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x80 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x14b zephyr/libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x343 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa zephyr/libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 zephyr/libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x63 zephyr/libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x23e5 zephyr/libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x491 zephyr/libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x2375 zephyr/libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x548 zephyr/libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x285d zephyr/libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x43f zephyr/libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(rb.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x14 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x20 zephyr/libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x122 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xc6 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xc0 zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe zephyr/libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3e zephyr/libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x887 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1fd zephyr/libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x765 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x68 zephyr/libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xbee zephyr/libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x4f0 zephyr/libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(timeutil.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_popcount_region
                0x0000000000000000       0x10 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_xor
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_find_nth_set
                0x0000000000000000       0x10 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_test_and_set_region
                0x0000000000000000        0x8 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$constprop$0
                0x0000000000000000       0x3f zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 zephyr/libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xba zephyr/libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_popcount_region
                0x0000000000000000       0x9a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_xor
                0x0000000000000000       0xac zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x32 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_find_nth_set
                0x0000000000000000       0xca zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0x6a zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x1f0 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x19f5 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x42f zephyr/libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000     0x1188 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xb8 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000      0x108 zephyr/libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x242d zephyr/libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x5dc zephyr/libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bitarray.c.obj)
 .literal.ring_buf_put_claim
                0x0000000000000000        0x4 zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_get_claim
                0x0000000000000000        0x4 zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_put
                0x0000000000000000        0xc zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_get
                0x0000000000000000        0xc zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_peek
                0x0000000000000000        0xc zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_item_put
                0x0000000000000000       0x10 zephyr/libzephyr.a(ring_buffer.c.obj)
 .literal.ring_buf_item_get
                0x0000000000000000       0x14 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_area_claim
                0x0000000000000000       0x38 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_put_claim
                0x0000000000000000       0x28 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_get_claim
                0x0000000000000000       0x22 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_area_finish
                0x0000000000000000       0x3e zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_put
                0x0000000000000000       0x3e zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_get
                0x0000000000000000       0x3e zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_peek
                0x0000000000000000       0x3e zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_item_put
                0x0000000000000000       0x7a zephyr/libzephyr.a(ring_buffer.c.obj)
 .text.ring_buf_item_get
                0x0000000000000000       0x92 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_frame   0x0000000000000000       0xe8 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_info    0x0000000000000000      0xc9b zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_abbrev  0x0000000000000000      0x2aa zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_loc     0x0000000000000000      0x821 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_aranges
                0x0000000000000000       0x60 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_ranges  0x0000000000000000       0xd8 zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_line    0x0000000000000000      0xd3f zephyr/libzephyr.a(ring_buffer.c.obj)
 .debug_str     0x0000000000000000      0x44c zephyr/libzephyr.a(ring_buffer.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(ring_buffer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(configs.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc.c.obj)
 .iram1.2       0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 zephyr/libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_info    0x0000000000000000       0x79 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_line    0x0000000000000000       0x68 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .debug_str     0x0000000000000000      0x21f zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(loader.c.obj)
 .entry_addr    0x0000000000000000        0x4 zephyr/libzephyr.a(loader.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hw_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_idle_exit
                0x0000000000000000        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_get_flash_encryption_mode
                0x0000000000000000       0x2c zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_init_checks
                0x0000000000000000       0x1c zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_set_release_mode
                0x0000000000000000       0x70 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000       0xf4 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .iram1.0       0x0000000000000000        0xd zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0xe zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_get_flash_encryption_mode
                0x0000000000000000       0x6e zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_init_checks.str1.1
                0x0000000000000000       0x79 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_init_checks
                0x0000000000000000       0x3e zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_set_release_mode.str1.1
                0x0000000000000000       0x75 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_set_release_mode
                0x0000000000000000       0xcb zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_cfg_verify_release_mode.str1.1
                0x0000000000000000      0x3a0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .rodata        0x0000000000000000        0xc zephyr/libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000      0x25b zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_frame   0x0000000000000000       0xa0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_info    0x0000000000000000      0xb57 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_abbrev  0x0000000000000000      0x329 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_loc     0x0000000000000000      0x1d5 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_aranges
                0x0000000000000000       0x48 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_line    0x0000000000000000     0x1259 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .debug_str     0x0000000000000000      0xa80 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_gpio_is_pin_reserved
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .text.esp_gpio_is_pin_reserved
                0x0000000000000000       0x1e zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .literal.spi_flash_hal_setup_auto_resume_mode
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .literal.spi_flash_hal_disable_auto_resume_mode
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_setup_auto_resume_mode
                0x0000000000000000       0x1a zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_disable_auto_resume_mode
                0x0000000000000000       0x18 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .literal.esp_opiflash_set_required_regs
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .text.esp_opiflash_set_required_regs
                0x0000000000000000       0x16 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .iram1.11.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.find_region
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_id
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_unique_chip_id
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.14.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.16.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.15.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.17.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.18.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_get_protectable_regions
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.19.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.20.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.21.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.22.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.25.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.26.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.27.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.28.literal
                0x0000000000000000       0x44 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_suspend_cmd_init
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_app_disable_protect
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.11      0x0000000000000000       0x30 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.find_region
                0x0000000000000000       0x39 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.7       0x0000000000000000        0xe zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_id
                0x0000000000000000       0x32 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_unique_chip_id
                0x0000000000000000       0x81 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.8       0x0000000000000000      0x13c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.14      0x0000000000000000       0x38 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.16      0x0000000000000000      0x1d4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.15      0x0000000000000000       0x48 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.17      0x0000000000000000       0x48 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.18      0x0000000000000000       0x48 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_get_protectable_regions
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.19      0x0000000000000000       0x8c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.20      0x0000000000000000       0x9d zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.21      0x0000000000000000      0x110 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.22      0x0000000000000000      0x150 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.25      0x0000000000000000       0x6e zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.26      0x0000000000000000       0x58 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.27      0x0000000000000000       0x4c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.28      0x0000000000000000      0x1fc zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_suspend_cmd_init.str1.1
                0x0000000000000000       0x78 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_suspend_cmd_init
                0x0000000000000000       0x6c zephyr/libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_app_disable_protect
                0x0000000000000000       0x22 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.32      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.31      0x0000000000000000       0x21 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.30      0x0000000000000000       0x3b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.29      0x0000000000000000       0x3e zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.23      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_remove_flash_device
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_add_flash_device
                0x0000000000000000       0x6c zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .iram1.0       0x0000000000000000      0x128 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_remove_flash_device
                0x0000000000000000       0x36 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.spi_bus_add_flash_device.str1.1
                0x0000000000000000       0x80 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_add_flash_device
                0x0000000000000000      0x191 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_flash_mmap
                0x0000000000000000       0x14 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_pages
                0x0000000000000000       0x24 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_munmap
                0x0000000000000000       0x10 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_dump
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_get_free_pages
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_phys2cache
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_cache2phys
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap
                0x0000000000000000       0x90 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_pages
                0x0000000000000000      0x15e zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_munmap
                0x0000000000000000       0x3a zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_dump
                0x0000000000000000       0x10 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_get_free_pages
                0x0000000000000000       0x21 zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_phys2cache
                0x0000000000000000       0x2e zephyr/libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_cache2phys
                0x0000000000000000       0x23 zephyr/libzephyr.a(flash_mmap.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.3       0x0000000000000000        0xa zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.5       0x0000000000000000       0x1f zephyr/libzephyr.a(flash_ops.c.obj)
 .dram1.1       0x0000000000000000        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
 .literal.memspi_host_read
                0x0000000000000000        0x4 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_read
                0x0000000000000000       0x30 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .literal.spi_flash_hpm_get_dummy
                0x0000000000000000        0x8 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_enable_high_performance_mode
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_hpm_dummy_adjust
                0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_hpm_get_dummy_generic
                0x0000000000000000       0x1a zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_hpm_get_dummy
                0x0000000000000000       0x10 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss.s_dummy_conf
                0x0000000000000000        0x5 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_info    0x0000000000000000      0x1f7 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_abbrev  0x0000000000000000      0x114 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_line    0x0000000000000000      0x3bd zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_str     0x0000000000000000      0x431 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.3       0x0000000000000000        0x7 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.5       0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .literal.esp_flash_init_os_functions
                0x0000000000000000       0x10 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .literal.esp_flash_deinit_os_functions
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .text.esp_flash_init_os_functions
                0x0000000000000000       0x47 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .text.esp_flash_deinit_os_functions
                0x0000000000000000       0x1e zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .literal.spi_flash_wrap_probe_c0
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable_c0
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable_77
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_clear_c0
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_clear_77
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_probe
                0x0000000000000000        0xc zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_disable
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_support_wrap_size
                0x0000000000000000       0x20 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_probe_c0
                0x0000000000000000       0x13 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable_c0
                0x0000000000000000       0x2c zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable_77
                0x0000000000000000       0x56 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_clear_c0
                0x0000000000000000       0x1c zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_clear_77
                0x0000000000000000       0x42 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_probe
                0x0000000000000000       0x46 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable
                0x0000000000000000       0x30 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_disable
                0x0000000000000000       0x2d zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.spi_flash_support_wrap_size.str1.1
                0x0000000000000000       0x40 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_support_wrap_size
                0x0000000000000000       0x64 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .bss.chip_wrap
                0x0000000000000000        0x4 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.str1.1
                0x0000000000000000        0xf zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.spi_flash_wrap_list
                0x0000000000000000       0x20 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_frame   0x0000000000000000       0xe8 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_info    0x0000000000000000      0x6e2 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_abbrev  0x0000000000000000      0x25c zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_loc     0x0000000000000000      0x251 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_aranges
                0x0000000000000000       0x60 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_ranges  0x0000000000000000       0x50 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_line    0x0000000000000000      0x7d0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .debug_str     0x0000000000000000      0x6f1 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .literal.uart_hal_set_sw_flow_ctrl
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_at_cmd_char
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x10 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_port_num
                0x0000000000000000        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xd0 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0xe2 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000       0xb9 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x17 zephyr/libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_port_num
                0x0000000000000000       0x26 zephyr/libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x53 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .literal.bootloader_enable_qio_mode
                0x0000000000000000       0x5c zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.0       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3       0x0000000000000000       0x29 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8       0x0000000000000000       0x3c zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9       0x0000000000000000       0x42 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_enable_qio_mode.str1.1
                0x0000000000000000       0x99 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .text.bootloader_enable_qio_mode
                0x0000000000000000      0x17e zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.2       0x0000000000000000       0x15 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .iram1.6       0x0000000000000000       0x13 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x22 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_flash_qe_support_list
                0x0000000000000000       0x7e zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_frame   0x0000000000000000      0x118 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_info    0x0000000000000000      0xa77 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_abbrev  0x0000000000000000      0x2e6 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_loc     0x0000000000000000      0x17e zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_aranges
                0x0000000000000000       0x70 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_ranges  0x0000000000000000       0x80 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_line    0x0000000000000000      0xb51 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .debug_str     0x0000000000000000      0xa47 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .literal.bootloader_flash_update_id
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.2.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x20 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .literal.bootloader_init_spi_flash
                0x0000000000000000       0x80 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .text.bootloader_flash_update_id
                0x0000000000000000       0x12 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.0       0x0000000000000000       0x9c zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.1       0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.2       0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.4       0x0000000000000000       0x78 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.3       0x0000000000000000       0x14 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.bootloader_init_spi_flash.str1.1
                0x0000000000000000       0x97 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .text.bootloader_init_spi_flash
                0x0000000000000000      0x10a zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$27
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$23
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x3b zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$21
                0x0000000000000000       0x20 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$20
                0x0000000000000000       0x40 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_info    0x0000000000000000      0x9e0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_abbrev  0x0000000000000000      0x2e4 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_loc     0x0000000000000000      0x256 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_line    0x0000000000000000      0xc00 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_str     0x0000000000000000      0xb23 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .literal.esp_console_deinit
                0x0000000000000000        0x4 zephyr/libzephyr.a(console_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(console_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(console_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(console_init.c.obj)
 .text.esp_console_deinit
                0x0000000000000000        0xe zephyr/libzephyr.a(console_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xc4 zephyr/libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .literal.esp_cpu_stall
                0x0000000000000000        0xc zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_unstall
                0x0000000000000000        0xc zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_reset
                0x0000000000000000        0x8 zephyr/libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_set_watchpoint
                0x0000000000000000        0x4 zephyr/libzephyr.a(cpu.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_stall
                0x0000000000000000       0x7b zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_unstall
                0x0000000000000000       0x49 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_reset
                0x0000000000000000       0x25 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_wait_for_intr
                0x0000000000000000        0x8 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_breakpoint
                0x0000000000000000       0x24 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_breakpoint
                0x0000000000000000       0x27 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_watchpoint
                0x0000000000000000       0x64 zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_watchpoint
                0x0000000000000000       0x1b zephyr/libzephyr.a(cpu.c.obj)
 .text.esp_cpu_compare_and_set
                0x0000000000000000       0x15 zephyr/libzephyr.a(cpu.c.obj)
 .debug_frame   0x0000000000000000       0xe8 zephyr/libzephyr.a(cpu.c.obj)
 .debug_info    0x0000000000000000      0x636 zephyr/libzephyr.a(cpu.c.obj)
 .debug_abbrev  0x0000000000000000      0x22b zephyr/libzephyr.a(cpu.c.obj)
 .debug_loc     0x0000000000000000      0x47f zephyr/libzephyr.a(cpu.c.obj)
 .debug_aranges
                0x0000000000000000       0x60 zephyr/libzephyr.a(cpu.c.obj)
 .debug_ranges  0x0000000000000000       0x80 zephyr/libzephyr.a(cpu.c.obj)
 .debug_line    0x0000000000000000      0xa22 zephyr/libzephyr.a(cpu.c.obj)
 .debug_str     0x0000000000000000      0x4f0 zephyr/libzephyr.a(cpu.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(cpu.c.obj)
 .literal.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x14 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x10 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x47 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0xa zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x31 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_rc_fast_freq
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_periph_ref_counts
                0x0000000000000000        0x1 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_info    0x0000000000000000      0x395 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a6 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_ranges  0x0000000000000000       0x20 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_line    0x0000000000000000      0x5e3 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .debug_str     0x0000000000000000      0x6b7 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .literal.calc_checksum
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_rtc_get_time_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_slowclk_cal_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.calc_checksum
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.1       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.3       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_rtc_get_time_us
                0x0000000000000000       0xb2 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_slowclk_cal_get
                0x0000000000000000        0xd zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_rtc_time
                0x0000000000000000        0x9 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_lock
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_unlock
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_clk.c.obj)
 .data.first_call$0
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_clk.c.obj)
 .rtc_timer_data_in_rtc_mem
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_enable
                0x0000000000000000       0x10 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1       0x0000000000000000       0x1f zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5       0x0000000000000000       0x27 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.6       0x0000000000000000       0x2c zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8       0x0000000000000000       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.9       0x0000000000000000       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_enable
                0x0000000000000000       0x40 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.regi2c_saradc_disable.str1.1
                0x0000000000000000       0x2e zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_disable
                0x0000000000000000       0x55 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.s_i2c_saradc_enable_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.7       0x0000000000000000        0x8 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.regi2c_lock_counter
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .bss.regi2c_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x7 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .literal.get_idx
                0x0000000000000000       0x14 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_factory_mac
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_mac_custom
                0x0000000000000000       0x24 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.get_mac_addr_from_mac_table
                0x0000000000000000       0x20 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_mac_addr_len_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_iface_mac_addr_set
                0x0000000000000000       0x2c zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_set
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_custom
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_derive_local_mac
                0x0000000000000000       0x14 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x58 zephyr/libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_get
                0x0000000000000000        0x4 zephyr/libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_idx.str1.1
                0x0000000000000000       0x3c zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_idx  0x0000000000000000       0x3a zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_factory_mac
                0x0000000000000000       0x29 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_efuse_mac_custom.str1.1
                0x0000000000000000       0x26 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_mac_custom
                0x0000000000000000       0x64 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.get_mac_addr_from_mac_table.str1.1
                0x0000000000000000       0x3a zephyr/libzephyr.a(mac_addr.c.obj)
 .text.get_mac_addr_from_mac_table
                0x0000000000000000       0x92 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_mac_addr_len_get
                0x0000000000000000       0x24 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.esp_iface_mac_addr_set.str1.1
                0x0000000000000000       0x85 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_iface_mac_addr_set
                0x0000000000000000       0x94 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_set
                0x0000000000000000       0x11 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_custom
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_default
                0x0000000000000000       0x10 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_derive_local_mac
                0x0000000000000000       0x66 zephyr/libzephyr.a(mac_addr.c.obj)
 .rodata.esp_read_mac.str1.1
                0x0000000000000000       0x75 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_read_mac
                0x0000000000000000      0x124 zephyr/libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_get
                0x0000000000000000       0x11 zephyr/libzephyr.a(mac_addr.c.obj)
 .data.s_mac_table
                0x0000000000000000       0x28 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_frame   0x0000000000000000      0x130 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_info    0x0000000000000000      0xc88 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_abbrev  0x0000000000000000      0x350 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_loc     0x0000000000000000      0x773 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_ranges  0x0000000000000000       0xa0 zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_line    0x0000000000000000     0x109c zephyr/libzephyr.a(mac_addr.c.obj)
 .debug_str     0x0000000000000000      0x72d zephyr/libzephyr.a(mac_addr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(mac_addr.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_reset
                0x0000000000000000       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.9.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.10.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.3       0x0000000000000000       0x27 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.4       0x0000000000000000       0x2c zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.5       0x0000000000000000       0x13 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.6       0x0000000000000000       0x16 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.7       0x0000000000000000       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.8       0x0000000000000000       0x13 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x57 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.9       0x0000000000000000       0x31 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .iram1.10      0x0000000000000000       0x31 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.rcc_lock_counter
                0x0000000000000000        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.rcc_lock  0x0000000000000000        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .text.mspi_timing_psram_tuning
                0x0000000000000000        0x5 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_register
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_deregister
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_module.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .iram1.5       0x0000000000000000       0x4c zephyr/libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_register
                0x0000000000000000       0xb2 zephyr/libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_deregister
                0x0000000000000000       0x6b zephyr/libzephyr.a(rtc_module.c.obj)
 .bss.s_rtc_isr_handle
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.4       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(hw_random.c.obj)
 .literal.esp_fill_random
                0x0000000000000000        0xc zephyr/libzephyr.a(hw_random.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .iram1.0       0x0000000000000000       0x46 zephyr/libzephyr.a(hw_random.c.obj)
 .text.esp_fill_random
                0x0000000000000000       0x2e zephyr/libzephyr.a(hw_random.c.obj)
 .bss.last_ccount$0
                0x0000000000000000        0x4 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_info    0x0000000000000000      0x2b4 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b7 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_loc     0x0000000000000000       0xe5 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_ranges  0x0000000000000000       0x30 zephyr/libzephyr.a(hw_random.c.obj)
 .debug_line    0x0000000000000000      0x5da zephyr/libzephyr.a(hw_random.c.obj)
 .debug_str     0x0000000000000000      0x352 zephyr/libzephyr.a(hw_random.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(hw_random.c.obj)
 .rtc.entry.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.s_sleep_hook_deregister
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.s_sleep_hook_register
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.get_power_down_flags
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.6.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.rtcio_ll_function_select$constprop$0
                0x0000000000000000       0x14 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_periph_use_8m
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.9.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.10.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.23.literal
                0x0000000000000000      0x118 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.28.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x1c zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.25.literal
                0x0000000000000000       0x40 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.11.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_register_hook
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_deregister_hook
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_register_phy_hook
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_deregister_phy_hook
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.26.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.27.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_light_sleep_start
                0x0000000000000000       0xac zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_wakeup_source
                0x0000000000000000       0x30 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_timer_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_try
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext1_wakeup_io
                0x0000000000000000       0x20 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_ext1_wakeup_io
                0x0000000000000000       0x24 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext1_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_gpio_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_uart_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_wifi_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_wifi_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_bt_wakeup
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_bt_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_wakeup_cause
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x18 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_pd_config
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.29.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .literal.rtc_sleep_enable_ultra_low
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.entry.text
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.12   0x0000000000000000        0x5 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.s_sleep_hook_deregister
                0x0000000000000000       0x30 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.s_sleep_hook_register.str1.1
                0x0000000000000000       0x48 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.s_sleep_hook_register
                0x0000000000000000       0x5a zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.get_power_down_flags
                0x0000000000000000       0x78 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.6       0x0000000000000000       0x5a zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.rtcio_ll_function_select$constprop$0
                0x0000000000000000       0x74 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_periph_use_8m
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.9    0x0000000000000000        0xf zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.10   0x0000000000000000       0x17 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.23      0x0000000000000000      0x76e zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.28      0x0000000000000000       0x3b zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x3e zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x2b zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.25      0x0000000000000000       0x99 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.11   0x0000000000000000        0xa zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_register_hook
                0x0000000000000000       0x12 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_deregister_hook
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_register_phy_hook
                0x0000000000000000       0x12 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_deregister_phy_hook
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.26      0x0000000000000000       0x12 zephyr/libzephyr.a(sleep_modes.c.obj)
 .iram1.27      0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_light_sleep_start
                0x0000000000000000      0x2d2 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_disable_wakeup_source.str1.1
                0x0000000000000000       0x35 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wakeup_source
                0x0000000000000000       0xd9 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ulp_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_timer_wakeup
                0x0000000000000000       0x19 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep
                0x0000000000000000       0x13 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_try
                0x0000000000000000       0x17 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000       0x16 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000       0x10 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x50 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_enable_ext1_wakeup_io.str1.1
                0x0000000000000000       0x22 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext1_wakeup_io
                0x0000000000000000       0xe6 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_disable_ext1_wakeup_io.str1.1
                0x0000000000000000       0x36 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_ext1_wakeup_io
                0x0000000000000000       0xe4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext1_wakeup
                0x0000000000000000       0x28 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_gpio_wakeup
                0x0000000000000000       0x15 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_uart_wakeup
                0x0000000000000000       0x49 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_wakeup
                0x0000000000000000       0x15 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_wakeup
                0x0000000000000000       0x24 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_beacon_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_beacon_wakeup
                0x0000000000000000        0x8 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_bt_wakeup
                0x0000000000000000       0x16 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_bt_wakeup
                0x0000000000000000       0x24 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_wakeup_cause
                0x0000000000000000       0x67 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000       0x22 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x56 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_pd_config
                0x0000000000000000       0x62 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.text.29   0x0000000000000000       0x18 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .text.rtc_sleep_enable_ultra_low
                0x0000000000000000        0xb zephyr/libzephyr.a(sleep_modes.c.obj)
 .rodata.CSWTCH$149
                0x0000000000000000       0xa0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_suspended_uarts_bmap
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_cache_suspend_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.force_fast.8
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_periph_use_8m_flag
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_ultra_low_enabled
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .rtc.force_fast.7
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.spinlock_rtc_deep_sleep
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_light_sleep_wakeup
                0x0000000000000000        0x1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .data.s_config
                0x0000000000000000       0x68 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_lightsleep_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_dslp_phy_cb
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .bss.s_dslp_cb
                0x0000000000000000        0xc zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_frame   0x0000000000000000      0x490 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_info    0x0000000000000000     0xa99b zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_abbrev  0x0000000000000000      0x7d1 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_loc     0x0000000000000000     0x12df zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_aranges
                0x0000000000000000      0x198 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_ranges  0x0000000000000000      0x520 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_line    0x0000000000000000     0x4234 zephyr/libzephyr.a(sleep_modes.c.obj)
 .debug_str     0x0000000000000000     0x720e zephyr/libzephyr.a(sleep_modes.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .literal.rtc_clk_bbpll_add_consumer
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_bbpll_remove_consumer
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8m_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8md256_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_8m_enabled
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_bbpll_add_consumer
                0x0000000000000000        0xe zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_bbpll_remove_consumer
                0x0000000000000000        0xe zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000        0xe zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x1e zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8m_enabled
                0x0000000000000000       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8md256_enabled
                0x0000000000000000       0x15 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 zephyr/libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_8m_enabled
                0x0000000000000000       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$87
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_vddsdio_get_config
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_set_config
                0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_get_config
                0x0000000000000000       0x63 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_set_config
                0x0000000000000000       0x48 zephyr/libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .literal.rtc_clk_cal_ratio
                0x0000000000000000        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_wait_for_slow_cycle
                0x0000000000000000        0x8 zephyr/libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_cal_ratio
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_wait_for_slow_cycle
                0x0000000000000000       0x2f zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_sleep_get_default_config
                0x0000000000000000       0x18 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_init
                0x0000000000000000       0x9c zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_low_init
                0x0000000000000000       0x14 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_start
                0x0000000000000000       0x2c zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_get_default_config
                0x0000000000000000      0x140 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_init
                0x0000000000000000      0x410 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_low_init
                0x0000000000000000       0x62 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_start
                0x0000000000000000       0xb5 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .literal.s_sar_power_acquire
                0x0000000000000000        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.s_sar_power_release
                0x0000000000000000       0x24 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_power_enable
                0x0000000000000000        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_power_disable
                0x0000000000000000        0xc zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_oneshot_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_oneshot_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.s_sar_power_acquire
                0x0000000000000000       0x41 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.s_sar_power_release.str1.1
                0x0000000000000000       0x43 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.s_sar_power_release
                0x0000000000000000       0x6c zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_enable
                0x0000000000000000       0x35 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_disable
                0x0000000000000000       0x3b zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_oneshot_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_oneshot_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0xb zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x14 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .bss.s_sar_power_on_cnt
                0x0000000000000000        0x4 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(systimer.c.obj)
 .literal.mspi_timing_config_get_cs_timing
                0x0000000000000000        0x8 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .literal.mspi_timing_config_get_flash_clock_reg
                0x0000000000000000        0x4 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .text.mspi_timing_config_get_cs_timing
                0x0000000000000000       0x48 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .text.mspi_timing_config_get_flash_clock_reg
                0x0000000000000000        0xd zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.4.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.17.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map
                0x0000000000000000       0x8c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_unmap
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000       0x74 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x5c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.2       0x0000000000000000        0xf zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.3       0x0000000000000000       0x91 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.4       0x0000000000000000       0x1d zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.17      0x0000000000000000       0x23 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16      0x0000000000000000       0x22 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_get_max_consecutive_free_block_size.str1.1
                0x0000000000000000       0x42 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x8a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_reserve_block_with_caps.str1.1
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0xed zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map.str1.1
                0x0000000000000000      0x108 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map
                0x0000000000000000      0x3a1 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_unmap.str1.1
                0x0000000000000000       0x88 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_unmap
                0x0000000000000000       0xf8 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_dump_mapped_blocks.str1.1
                0x0000000000000000      0x137 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000      0x111 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5       0x0000000000000000       0xf1 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_vaddr_to_paddr.str1.1
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0xbe zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_paddr_to_vaddr.str1.1
                0x0000000000000000       0x27 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x7a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x17 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$1
                0x0000000000000000       0x17 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$2
                0x0000000000000000        0xe zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$3
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$4
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$5
                0x0000000000000000       0x30 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.15      0x0000000000000000       0x1a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.14      0x0000000000000000       0x18 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.13      0x0000000000000000       0x1a zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.12      0x0000000000000000       0x1b zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.11      0x0000000000000000       0x1e zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.10      0x0000000000000000       0x20 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.9       0x0000000000000000       0x19 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.8       0x0000000000000000       0x18 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.7       0x0000000000000000       0x1d zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.6       0x0000000000000000       0x1f zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x5 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .dram1.0       0x0000000000000000        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_line    0x0000000000000000       0x7d zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .debug_str     0x0000000000000000      0x21d zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .iram1.0       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .iram1.1       0x0000000000000000       0x11 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .debug_line    0x0000000000000000       0x7e zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .debug_str     0x0000000000000000      0x21e zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .debug_line    0x0000000000000000       0x82 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .debug_str     0x0000000000000000      0x222 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .debug_info    0x0000000000000000       0x64 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .debug_line    0x0000000000000000       0x7d zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .debug_str     0x0000000000000000      0x21d zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .text          0x0000000000000000       0x81 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_line    0x0000000000000000      0x1c9 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_info    0x0000000000000000       0x24 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_abbrev  0x0000000000000000       0x14 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_str     0x0000000000000000       0x94 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .literal.Cache_Count_Flash_Pages
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .literal.Cache_WriteBack_Addr
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .text.Cache_Count_Flash_Pages
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .text.Cache_WriteBack_Addr
                0x0000000000000000       0x90 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .literal._esp_error_check_failed_without_abort
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_err.c.obj)
 .literal._esp_error_check_failed
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_err.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .rodata._esp_error_check_failed_without_abort.str1.1
                0x0000000000000000       0x70 zephyr/libzephyr.a(esp_err.c.obj)
 .text._esp_error_check_failed_without_abort
                0x0000000000000000       0x4b zephyr/libzephyr.a(esp_err.c.obj)
 .rodata._esp_error_check_failed.str1.1
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_err.c.obj)
 .text._esp_error_check_failed
                0x0000000000000000       0x4f zephyr/libzephyr.a(esp_err.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_info    0x0000000000000000      0x51d zephyr/libzephyr.a(esp_err.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a5 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_loc     0x0000000000000000      0x28a zephyr/libzephyr.a(esp_err.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_ranges  0x0000000000000000       0x58 zephyr/libzephyr.a(esp_err.c.obj)
 .debug_line    0x0000000000000000      0x50a zephyr/libzephyr.a(esp_err.c.obj)
 .debug_str     0x0000000000000000      0x319 zephyr/libzephyr.a(esp_err.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_err.c.obj)
 .literal.select_rtc_slow_clk
                0x0000000000000000       0x28 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_rtc_init
                0x0000000000000000       0x10 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_clk_init
                0x0000000000000000       0x2c zephyr/libzephyr.a(clk.c.obj)
 .literal.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .literal.esp_perip_clk_init
                0x0000000000000000       0x38 zephyr/libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk.c.obj)
 .rodata.select_rtc_slow_clk.str1.1
                0x0000000000000000       0x50 zephyr/libzephyr.a(clk.c.obj)
 .text.select_rtc_slow_clk
                0x0000000000000000       0x7f zephyr/libzephyr.a(clk.c.obj)
 .rodata        0x0000000000000000        0x4 zephyr/libzephyr.a(clk.c.obj)
 .text.esp_rtc_init
                0x0000000000000000       0x2e zephyr/libzephyr.a(clk.c.obj)
 .text.esp_clk_init
                0x0000000000000000       0x7d zephyr/libzephyr.a(clk.c.obj)
 .text.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0xe zephyr/libzephyr.a(clk.c.obj)
 .text.esp_perip_clk_init
                0x0000000000000000      0x12a zephyr/libzephyr.a(clk.c.obj)
 .debug_frame   0x0000000000000000       0x88 zephyr/libzephyr.a(clk.c.obj)
 .debug_info    0x0000000000000000      0xbf7 zephyr/libzephyr.a(clk.c.obj)
 .debug_abbrev  0x0000000000000000      0x36a zephyr/libzephyr.a(clk.c.obj)
 .debug_loc     0x0000000000000000      0x2fd zephyr/libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 zephyr/libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000000000       0x48 zephyr/libzephyr.a(clk.c.obj)
 .debug_line    0x0000000000000000      0xb47 zephyr/libzephyr.a(clk.c.obj)
 .debug_str     0x0000000000000000     0x11ee zephyr/libzephyr.a(clk.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(clk.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x24 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x68 zephyr/libzephyr.a(system_internal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.0       0x0000000000000000       0x88 zephyr/libzephyr.a(system_internal.c.obj)
 .rodata        0x0000000000000000       0x10 zephyr/libzephyr.a(system_internal.c.obj)
 .iram1.1       0x0000000000000000      0x107 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_info    0x0000000000000000     0x4cd4 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_abbrev  0x0000000000000000      0x334 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_loc     0x0000000000000000       0x6c zephyr/libzephyr.a(system_internal.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_line    0x0000000000000000      0x8b0 zephyr/libzephyr.a(system_internal.c.obj)
 .debug_str     0x0000000000000000     0x321d zephyr/libzephyr.a(system_internal.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(system_internal.c.obj)
 .literal.esp_reset_reason
                0x0000000000000000        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(reset_reason.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .text.esp_reset_reason
                0x0000000000000000        0xa zephyr/libzephyr.a(reset_reason.c.obj)
 .iram1.0       0x0000000000000000       0x26 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x24 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x28 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000       0xa4 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x52 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x66 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x57 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x5f zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x758 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x2b3 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000      0x177 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x779 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x4d0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x1c zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x68 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.11.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x52 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x75 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.7       0x0000000000000000        0xe zephyr/libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000      0x116 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.0       0x0000000000000000       0xb6 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.1       0x0000000000000000       0x5e zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x86 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x2e zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x56 zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_init.str1.1
                0x0000000000000000       0xb0 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000      0x100 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x2e zephyr/libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x54 zephyr/libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xba zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000       0x2f zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.10      0x0000000000000000       0x44 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.11      0x0000000000000000       0x35 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x46 zephyr/libzephyr.a(esp_timer.c.obj)
 .iram1.13      0x0000000000000000       0x13 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x60 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 zephyr/libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000       0x27 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x2c zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .iram1.0       0x0000000000000000       0x12 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .iram1.1       0x0000000000000000        0x9 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .data.timestamp_id
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .bss.s_timer_lock_counter
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_info    0x0000000000000000      0x417 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_abbrev  0x0000000000000000      0x1f6 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_loc     0x0000000000000000       0xdd zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_line    0x0000000000000000      0x468 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .debug_str     0x0000000000000000      0x521 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_set
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x28 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.3       0x0000000000000000       0x26 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0       0x0000000000000000       0x14 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1       0x0000000000000000       0x1a zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2       0x0000000000000000       0x3c zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.4       0x0000000000000000        0x5 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_set
                0x0000000000000000       0x4c zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .rodata.esp_timer_impl_init.str1.1
                0x0000000000000000       0x3c zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000       0x52 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x34 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x20 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.efuse_hal_get_mac
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_get_mac
                0x0000000000000000       0x19 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.1       0x0000000000000000       0x23 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.2       0x0000000000000000       0x11 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.3       0x0000000000000000       0x26 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.cache_hal_is_cache_enabled
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_writeback_addr
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_freeze
                0x0000000000000000        0xc zephyr/libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_unfreeze
                0x0000000000000000        0xc zephyr/libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_get_cache_line_size
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_is_cache_enabled
                0x0000000000000000       0x2b zephyr/libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_writeback_addr
                0x0000000000000000       0x1e zephyr/libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_freeze
                0x0000000000000000       0x2e zephyr/libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_unfreeze
                0x0000000000000000       0x22 zephyr/libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_get_cache_line_size
                0x0000000000000000       0x20 zephyr/libzephyr.a(cache_hal.c.obj)
 .literal.mmu_hal_unmap_region
                0x0000000000000000        0xc zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_vaddr_to_paddr
                0x0000000000000000        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_pages_to_bytes
                0x0000000000000000        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_bytes_to_pages
                0x0000000000000000        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_unmap_region
                0x0000000000000000       0x2f zephyr/libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_vaddr_to_paddr
                0x0000000000000000       0x3b zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.systimer_hal_deinit
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_counter_value
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_time
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_target
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_period
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_alarm_value
                0x0000000000000000        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_counter_value_advance
                0x0000000000000000        0x8 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_deinit
                0x0000000000000000       0x1b zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_clock_source
                0x0000000000000000        0x5 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_clock_source
                0x0000000000000000        0x7 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_counter_value
                0x0000000000000000       0x4e zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_time
                0x0000000000000000       0x1a zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_target
                0x0000000000000000       0x70 zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_period
                0x0000000000000000       0x6f zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_alarm_value
                0x0000000000000000       0x1c zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_enable_alarm_int
                0x0000000000000000       0x1e zephyr/libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_counter_value_advance
                0x0000000000000000       0x5e zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.wdt_hal_init
                0x0000000000000000       0x38 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_deinit
                0x0000000000000000        0x8 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_config_stage
                0x0000000000000000       0x24 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_disable
                0x0000000000000000        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_init
                0x0000000000000000      0x292 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_deinit
                0x0000000000000000       0xca zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_config_stage
                0x0000000000000000      0x14c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_enable
                0x0000000000000000       0x4c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_disable
                0x0000000000000000       0x31 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_handle_intr
                0x0000000000000000       0x51 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_feed
                0x0000000000000000       0x2a zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_is_enabled
                0x0000000000000000       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .literal.efuse_hal_set_timing
                0x0000000000000000        0x8 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_read
                0x0000000000000000        0xc zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_clear_program_registers
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_program
                0x0000000000000000       0x14 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_rs_calculate
                0x0000000000000000        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_is_coding_error_in_block
                0x0000000000000000        0xc zephyr/libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_set_timing
                0x0000000000000000       0x68 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_read
                0x0000000000000000       0x50 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_clear_program_registers
                0x0000000000000000        0xb zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_program
                0x0000000000000000       0x54 zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_rs_calculate
                0x0000000000000000        0xf zephyr/libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_is_coding_error_in_block
                0x0000000000000000       0x56 zephyr/libzephyr.a(efuse_hal.c.obj)
 .literal.xt_wdt_hal_init
                0x0000000000000000        0x8 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .literal.xt_wdt_hal_enable_backup_clk
                0x0000000000000000        0x4 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .literal.xt_wdt_hal_enable
                0x0000000000000000        0x4 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_init
                0x0000000000000000       0x38 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_enable_backup_clk
                0x0000000000000000       0x6f zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_enable
                0x0000000000000000       0x38 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_frame   0x0000000000000000       0x58 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_info    0x0000000000000000     0x3fd1 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_abbrev  0x0000000000000000      0x35c zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_loc     0x0000000000000000      0x2f9 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_ranges  0x0000000000000000       0x80 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_line    0x0000000000000000      0x68b zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .debug_str     0x0000000000000000     0x29d2 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x44 zephyr/libzephyr.a(log.c.obj)
 .literal.esp_log_level_get
                0x0000000000000000        0x8 zephyr/libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a zephyr/libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xf3 zephyr/libzephyr.a(log.c.obj)
 .text.esp_log_level_get
                0x0000000000000000       0x15 zephyr/libzephyr.a(log.c.obj)
 .literal.spi_flash_op_lock
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
 .literal.spi_flash_op_unlock
                0x0000000000000000        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.2.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
 .literal.esp_enable_cache_wrap
                0x0000000000000000       0x20 zephyr/libzephyr.a(cache_utils.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_lock
                0x0000000000000000       0x12 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_unlock
                0x0000000000000000        0xe zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.2       0x0000000000000000        0xe zephyr/libzephyr.a(cache_utils.c.obj)
 .iram1.5       0x0000000000000000       0x10 zephyr/libzephyr.a(cache_utils.c.obj)
 .rodata.esp_enable_cache_wrap.str1.1
                0x0000000000000000       0x85 zephyr/libzephyr.a(cache_utils.c.obj)
 .text.esp_enable_cache_wrap
                0x0000000000000000       0x5e zephyr/libzephyr.a(cache_utils.c.obj)
 ._k_mutex.static.s_flash_op_mutex_
                0x0000000000000000       0x14 zephyr/libzephyr.a(cache_utils.c.obj)
 .literal.heap_caps_alloc_failed
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_base
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_base
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_register_failed_alloc_callback
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_default
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_free
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc_prefer
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_get_info
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_print_heap_info
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_alloc
                0x0000000000000000        0xc zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_free
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_calloc
                0x0000000000000000        0x8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_alloc_failed
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_base
                0x0000000000000000       0x24 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_base
                0x0000000000000000       0x22 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_register_failed_alloc_callback
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_extmem_enable
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_default
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_prefer
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc
                0x0000000000000000       0x14 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_default
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_prefer
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_free
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_calloc
                0x0000000000000000       0x2e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_calloc_prefer
                0x0000000000000000       0x1e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_total_size
                0x0000000000000000        0xa zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_free_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_minimum_free_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_largest_free_block
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_info
                0x0000000000000000       0x12 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.heap_caps_print_heap_info.str1.1
                0x0000000000000000       0x3e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_print_heap_info
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_all
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_addr
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump_all
                0x0000000000000000        0x5 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_allocated_size
                0x0000000000000000        0x7 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_alloc
                0x0000000000000000       0x22 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_free
                0x0000000000000000        0xe zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_calloc
                0x0000000000000000       0x2e zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x18 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$1
                0x0000000000000000       0x11 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$2
                0x0000000000000000       0x17 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$3
                0x0000000000000000       0x16 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .bss.alloc_failed_callback
                0x0000000000000000        0x4 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_frame   0x0000000000000000      0x2c8 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_info    0x0000000000000000      0xd3d zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_abbrev  0x0000000000000000      0x349 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_loc     0x0000000000000000      0x43a zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_aranges
                0x0000000000000000      0x100 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_ranges  0x0000000000000000      0x108 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_line    0x0000000000000000      0xaae zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_str     0x0000000000000000      0x85f zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.bootloader_mmap_get_free_pages
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_mmap
                0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_munmap
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_read
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_write
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_sector
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_range
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.esp_rom_flash_mmap
                0x0000000000000000       0x3c zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.esp_rom_flash_unmmap
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.esp_rom_flash_erase_sector
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.esp_rom_flash_erase_range
                0x0000000000000000        0xc zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.esp_rom_flash_write
                0x0000000000000000       0x38 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_spi_flash_reset
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x18 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_get_spi_mode
                0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap_get_free_pages
                0x0000000000000000       0x10 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap
                0x0000000000000000       0x6e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_munmap
                0x0000000000000000       0x18 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_read
                0x0000000000000000       0x36 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_write
                0x0000000000000000       0x2a zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_sector
                0x0000000000000000       0x18 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_range
                0x0000000000000000       0x14 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_mmap_get_free_pages
                0x0000000000000000        0x8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.esp_rom_flash_mmap.str1.1
                0x0000000000000000       0x47 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_mmap
                0x0000000000000000       0xb9 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_unmmap
                0x0000000000000000       0x28 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_erase_sector
                0x0000000000000000       0x1c zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_erase_range
                0x0000000000000000       0x60 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.esp_rom_flash_write.str1.1
                0x0000000000000000       0xc6 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.esp_rom_flash_write
                0x0000000000000000       0xb2 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_spi_flash_reset
                0x0000000000000000       0x23 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .iram1.12      0x0000000000000000       0x9e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_get_spi_mode
                0x0000000000000000       0x30 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .bss.mapped    0x0000000000000000        0x1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .bss.map       0x0000000000000000        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(flash_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(flash_init.c.obj)
 .literal.esp_register_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_restart.c.obj)
 .literal.esp_unregister_shutdown_handler
                0x0000000000000000        0x4 zephyr/libzephyr.a(esp_restart.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 zephyr/libzephyr.a(esp_restart.c.obj)
 .literal.esp_restart
                0x0000000000000000        0xc zephyr/libzephyr.a(esp_restart.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
 .text.esp_register_shutdown_handler
                0x0000000000000000       0x31 zephyr/libzephyr.a(esp_restart.c.obj)
 .text.esp_unregister_shutdown_handler
                0x0000000000000000       0x29 zephyr/libzephyr.a(esp_restart.c.obj)
 .iram1.0       0x0000000000000000       0x23 zephyr/libzephyr.a(esp_restart.c.obj)
 .text.esp_restart
                0x0000000000000000       0x24 zephyr/libzephyr.a(esp_restart.c.obj)
 .bss.shutdown_handlers
                0x0000000000000000       0x14 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_info    0x0000000000000000      0x34a zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_abbrev  0x0000000000000000      0x1e5 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_loc     0x0000000000000000      0x122 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_ranges  0x0000000000000000       0x40 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_line    0x0000000000000000      0x755 zephyr/libzephyr.a(esp_restart.c.obj)
 .debug_str     0x0000000000000000      0x613 zephyr/libzephyr.a(esp_restart.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(esp_restart.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .debug_info    0x0000000000000000       0x6b zephyr/libzephyr.a(stubs.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 zephyr/libzephyr.a(stubs.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 zephyr/libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000       0x6f zephyr/libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x21b zephyr/libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/libzephyr.a(stubs.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_random.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_random.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_random.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_exccause
                0x0000000000000000        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.arch_syscall_oops
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.xtensa_exccause.str1.1
                0x0000000000000000       0x11 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.xtensa_exccause
                0x0000000000000000       0x17 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.arch_syscall_oops
                0x0000000000000000        0xd zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x0000000000000000      0x1c9 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.CSWTCH$3
                0x0000000000000000      0x104 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.xtensa_irq_is_enabled
                0x0000000000000000       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .literal.cbvprintf
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .text.cbputc   0x0000000000000000       0x11 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .text.cbvprintf
                0x0000000000000000       0x32 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_info    0x0000000000000000      0x316 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_abbrev  0x0000000000000000      0x1a9 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_loc     0x0000000000000000       0x5f zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_line    0x0000000000000000      0x2be zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .debug_str     0x0000000000000000      0x2ed zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .literal.__chk_fail
                0x0000000000000000        0xc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .rodata.__chk_fail.str1.1
                0x0000000000000000       0x1e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .text.__chk_fail
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_info    0x0000000000000000      0x121 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_abbrev  0x0000000000000000       0xba zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_line    0x0000000000000000      0x15e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .debug_str     0x0000000000000000      0x2ce zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .literal.z_errno_wrap
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .text.z_errno_wrap
                0x0000000000000000        0xd zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_info    0x0000000000000000       0xda zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_abbrev  0x0000000000000000       0x9a zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_line    0x0000000000000000      0x17e zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .debug_str     0x0000000000000000      0x248 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .literal._exit
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x5 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .text._exit    0x0000000000000000        0xf zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_info    0x0000000000000000       0xc4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_abbrev  0x0000000000000000       0x7f zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_line    0x0000000000000000       0xb0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .debug_str     0x0000000000000000      0x23f zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .literal.__retarget_lock_init_recursive
                0x0000000000000000        0x8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_init
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_close_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_close
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_try_acquire_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_try_acquire
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_release_recursive
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__retarget_lock_release
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_init_recursive
                0x0000000000000000       0x16 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_init
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_close_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_close
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_acquire_recursive
                0x0000000000000000       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_acquire
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_try_acquire_recursive
                0x0000000000000000       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_try_acquire
                0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_release_recursive
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .text.__retarget_lock_release
                0x0000000000000000        0xe zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 ._k_mutex.static.__lock___libc_recursive_mutex_
                0x0000000000000000       0x14 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_frame   0x0000000000000000      0x100 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_info    0x0000000000000000      0x995 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_abbrev  0x0000000000000000      0x2f2 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_loc     0x0000000000000000       0xc8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_aranges
                0x0000000000000000       0x68 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_ranges  0x0000000000000000       0x88 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_line    0x0000000000000000      0x730 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .debug_str     0x0000000000000000      0x823 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .literal.__stdin_hook_install
                0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .text.__stdin_hook_install
                0x0000000000000000       0x15 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .rodata.stdin  0x0000000000000000        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .bss.__stdin   0x0000000000000000       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.malloc_lock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc_unlock
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.malloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.aligned_alloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.free  0x0000000000000000       0x10 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.reallocarray
                0x0000000000000000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_lock
                0x0000000000000000       0x12 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc_unlock
                0x0000000000000000        0xe zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.malloc   0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.aligned_alloc
                0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x30 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.free     0x0000000000000000       0x1c zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x33 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000       0x27 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data.z_malloc_heap_mutex
                0x0000000000000000       0x14 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .literal.z_impl_sys_csrand_get
                0x0000000000000000        0x4 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .text          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .data          0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .text.z_impl_sys_csrand_get
                0x0000000000000000       0x11 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_info    0x0000000000000000      0x147 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_abbrev  0x0000000000000000       0xf6 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_loc     0x0000000000000000       0x4f zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_ranges  0x0000000000000000       0x28 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_line    0x0000000000000000      0x1d6 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .debug_str     0x0000000000000000      0x264 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x28 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x44 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.1       0x0000000000000000       0x76 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2       0x0000000000000000       0x7e zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xe0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xda zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x175 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x262 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x13 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x42 zephyr/kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_deinit
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(device.c.obj)
 .literal.z_impl_z_errno
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .text.z_impl_z_errno
                0x0000000000000000        0xd zephyr/kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000000000       0x28 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_info    0x0000000000000000      0x62f zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000000000      0x1ab zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000000000       0x10 zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_line    0x0000000000000000      0x37b zephyr/kernel/libkernel.a(errno.c.obj)
 .debug_str     0x0000000000000000      0x687 zephyr/kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_impl_device_init
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(init.c.obj)
 .literal.z_early_rand_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_impl_device_init
                0x0000000000000000       0x1a zephyr/kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0x63 zephyr/kernel/libkernel.a(init.c.obj)
 .data.state$1  0x0000000000000000        0x8 zephyr/kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(idle.c.obj)
 .literal.z_impl_k_msgq_alloc_init
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .literal.k_msgq_cleanup
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .literal.z_impl_k_msgq_peek
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .literal.z_impl_k_msgq_peek_at
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .literal.z_impl_k_msgq_purge
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.k_msgq_init
                0x0000000000000000       0x21 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.z_impl_k_msgq_alloc_init
                0x0000000000000000       0x34 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.k_msgq_cleanup
                0x0000000000000000       0x32 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.z_impl_k_msgq_get_attrs
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.z_impl_k_msgq_peek
                0x0000000000000000       0x25 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.z_impl_k_msgq_peek_at
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .text.z_impl_k_msgq_purge
                0x0000000000000000       0x7a zephyr/kernel/libkernel.a(msg_q.c.obj)
 .literal.adjust_owner_prio$isra$0
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_lock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_mutex_unlock
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.adjust_owner_prio$isra$0
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x0000000000000000       0xcf zephyr/kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_unlock
                0x0000000000000000       0x98 zephyr/kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x0000000000000000     0x13da zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000000000      0x416 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000000000      0x6a1 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000000000      0x128 zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x0000000000000000     0x104c zephyr/kernel/libkernel.a(mutex.c.obj)
 .debug_str     0x0000000000000000      0x984 zephyr/kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_give
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_take
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_give
                0x0000000000000000       0x66 zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_take
                0x0000000000000000       0x3d zephyr/kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .bss.lock      0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_info    0x0000000000000000     0x114b zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x403 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x650 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000000000      0x158 zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_line    0x0000000000000000      0xe2f zephyr/kernel/libkernel.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x89f zephyr/kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 zephyr/kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_create
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_is_in_isr
                0x0000000000000000       0x11 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x7 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x85 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x5a zephyr/kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_cpu_get
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x41 zephyr/kernel/libkernel.a(thread.c.obj)
 .rodata.state_string$0
                0x0000000000000000       0x40 zephyr/kernel/libkernel.a(thread.c.obj)
 .literal.z_requeue_current
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_suspend
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend1_no_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_thread_prio_set
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_reschedule
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_can_yield
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wake
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wait
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.z_unready_thread
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_requeue_current
                0x0000000000000000       0x4a zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_suspend
                0x0000000000000000       0xec zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_thread_prio_set
                0x0000000000000000      0x108 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_reschedule
                0x0000000000000000       0x56 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x45 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x24 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
 .text.z_unready_thread
                0x0000000000000000       0x16 zephyr/kernel/libkernel.a(sched.c.obj)
 .literal.k_sched_time_slice_set
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x28 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.sys_timepoint_calc
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.sys_timepoint_timeout
                0x0000000000000000        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x3c zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x3b zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x30 zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_timepoint_calc
                0x0000000000000000       0x4e zephyr/kernel/libkernel.a(timeout.c.obj)
 .text.sys_timepoint_timeout
                0x0000000000000000       0x4a zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.z_thread_alloc_helper
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.k_aligned_alloc
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.k_calloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.k_realloc
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_malloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_alloc_helper
                0x0000000000000000       0x2c zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_aligned_alloc
                0x0000000000000000       0x18 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_calloc
                0x0000000000000000       0x2a zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.k_realloc
                0x0000000000000000       0x48 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_malloc
                0x0000000000000000       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .literal.z_heap_alloc_helper
                0x0000000000000000        0xc zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_aligned_alloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_calloc
                0x0000000000000000        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_realloc
                0x0000000000000000       0x10 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.z_heap_alloc_helper
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_aligned_alloc
                0x0000000000000000       0x1c zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_calloc
                0x0000000000000000       0x32 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_realloc
                0x0000000000000000       0x62 zephyr/kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .data          0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .bss           0x0000000000000000        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .text          0x0000000000000000       0x18 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .text          0x0000000000000000       0x18 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .text          0x0000000000000000       0x14 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .text          0x0000000000000000       0x22 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .text          0x0000000000000000       0x59 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .literal       0x0000000000000000       0x10 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .text          0x0000000000000000       0x4c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .literal       0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x3d /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x23 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .literal       0x0000000000000000        0xc /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000       0x37 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000      0x2ae /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x270 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x25e /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .literal       0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .text          0x0000000000000000      0x135 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .literal       0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0x74 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .literal       0x0000000000000000       0x1c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .text          0x0000000000000000      0x123 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .literal       0x0000000000000000        0xc /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000       0x63 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text.memcmp   0x0000000000000000       0x26 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .text.strnlen  0x0000000000000000       0x1a /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .literal.fprintf
                0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text.fprintf  0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text.fputc    0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .text.fputs    0x0000000000000000       0x33 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .literal.printf
                0x0000000000000000        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text.printf   0x0000000000000000       0x2c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .literal.puts  0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .text.puts     0x0000000000000000       0x44 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .literal.snprintf
                0x0000000000000000        0xc /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text.snprintf
                0x0000000000000000       0x5e /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .literal.scanf_getc
                0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.scanf_ungetc
                0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.skip_spaces
                0x0000000000000000        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.__l_vfscanf
                0x0000000000000000       0x4c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_getc
                0x0000000000000000       0x19 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_ungetc
                0x0000000000000000       0x18 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.skip_spaces
                0x0000000000000000       0x34 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.putval   0x0000000000000000       0x32 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .rodata.__l_vfscanf.str1.1
                0x0000000000000000        0xc /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.__l_vfscanf
                0x0000000000000000      0x44a /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .debug_frame   0x0000000000000000       0x88 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .text.strchr   0x0000000000000000       0x1d /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .literal.fgetc
                0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text.fgetc    0x0000000000000000       0xa0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .text.__file_str_put
                0x0000000000000000       0x16 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .literal.ungetc
                0x0000000000000000        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .data          0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .bss           0x0000000000000000        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text.ungetc   0x0000000000000000       0x7c /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x00000000007fff00 r
iram0_0_seg      0x0000000040374000 0x0000000000053e00 xr
dram0_0_seg      0x000000003fc88000 0x000000000004fe00 rw
irom0_0_seg      0x0000000042000000 0x0000000002000000 xr
drom0_0_seg      0x000000003c000000 0x0000000002000000 r
rtc_iram_seg     0x00000000600fe000 0x0000000000002000 xrw
rtc_slow_seg     0x0000000050000000 0x0000000000002000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000042003038                vfprintf = __l_vfprintf
                0x0000000000000000                vfscanf = __l_vfscanf
LOAD zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
LOAD zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
LOAD app/libapp.a
LOAD zephyr/libzephyr.a
LOAD zephyr/arch/common/libarch__common.a
LOAD zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD zephyr/lib/libc/picolibc/liblib__libc__picolibc.a
LOAD zephyr/lib/libc/common/liblib__libc__common.a
LOAD zephyr/subsys/random/libsubsys__random.a
LOAD zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD zephyr/drivers/clock_control/libdrivers__clock_control.a
LOAD zephyr/drivers/console/libdrivers__console.a
LOAD zephyr/drivers/gpio/libdrivers__gpio.a
LOAD zephyr/drivers/pinctrl/libdrivers__pinctrl.a
LOAD zephyr/drivers/serial/libdrivers__serial.a
LOAD zephyr/drivers/timer/libdrivers__timer.a
LOAD zephyr/kernel/libkernel.a
LOAD zephyr/arch/common/libisr_tables.a
LOAD /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a
LOAD /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a
LOAD /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a
                0x00000000403c7e00                procpu_iram_end = 0x403c7e00
                0x000000003fcd7e00                procpu_dram_end = 0x3fcd7e00
                0x0000000040374000                procpu_iram_org = 0x40374000
                0x0000000000053e00                procpu_iram_len = (procpu_iram_end - procpu_iram_org)
                0x000000003fc88000                procpu_dram_org = 0x3fc88000
                0x000000000004fe00                procpu_dram_len = (procpu_dram_end - procpu_dram_org)
                0x0000000044000000                procpu_irom_end = 0x44000000
                0x000000003e000000                procpu_drom_end = 0x3e000000
                0x0000000042000000                procpu_irom_org = 0x42000000
                0x0000000002000000                procpu_irom_len = 0x2000000
                0x000000003c000000                procpu_drom_org = 0x3c000000
                0x0000000002000000                procpu_drom_len = 0x2000000
                0x000000003fce9704                _heap_sentry = 0x3fce9704
                0x0000000000057df4                _libc_heap_size = (_heap_sentry - _end)
                0x00000000006f0000                _iram_dram_offset = 0x6f0000

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))

.rtc.text       0x00000000600fe000        0x0 load address 0x0000000000000000
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_text_start = ABSOLUTE (.)
                0x00000000600fe000                _rtc_fast_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.literal.*))
 *(SORT_BY_ALIGNMENT(.rtc.text) SORT_BY_ALIGNMENT(.rtc.text.*))
 *(SORT_BY_ALIGNMENT(.rtc.entry.literal))
 *(SORT_BY_ALIGNMENT(.rtc.entry.text))
                0x00000000600fe000                . = ALIGN (0x4)

.rtc.force_fast
                0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_fast_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_fast) SORT_BY_ALIGNMENT(.rtc.force_fast.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_fast_end = ABSOLUTE (.)

.rtc.data       0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data) SORT_BY_ALIGNMENT(.rtc.data.*))
 *(SORT_BY_ALIGNMENT(.rtc.rodata) SORT_BY_ALIGNMENT(.rtc.rodata.*))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.bss) SORT_BY_ALIGNMENT(.rtc.bss.*))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc_noinit     0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rtc_noinit) SORT_BY_ALIGNMENT(.rtc_noinit.*))
                0x0000000050000000                . = ALIGN (0x4)

.rtc.force_slow
                0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_slow) SORT_BY_ALIGNMENT(.rtc.force_slow.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_end = ABSOLUTE (.)
                0x0000000000000000                _rtc_slow_length = (_rtc_force_slow_end - _rtc_data_start)
                0xffffffffeff02000                _rtc_fast_length = (_rtc_force_fast_end - _rtc_fast_start)

.iram0.vectors  0x0000000040374000      0x400 load address 0x0000000000000000
                0x0000000040374000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040374000      0x16a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040374000                _WindowOverflow4
                0x0000000040374040                _WindowUnderflow4
                0x0000000040374050                _xt_alloca_exc
                0x0000000040374080                _WindowOverflow8
                0x00000000403740c0                _WindowUnderflow8
                0x0000000040374100                _WindowOverflow12
                0x0000000040374140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004037416a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040374180       0x29 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000403741a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000403741c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403741c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000403741e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040374200       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040374225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040374240       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040374265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040374280       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000403742a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000403742c0       0x25 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403742c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000403742e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040374300        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040374303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040374340       0x16 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040374356       0x6a 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000403743c0        0x3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000403743c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000403743c3       0x3d 
                0x0000000040374400                _invalid_pc_placeholder = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040374400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(.init)
                0x0000000040374400                _init_end = ABSOLUTE (.)
                0x0000000040374400                _iram_start = ABSOLUTE (.)

.iram0.text     0x0000000040374400     0x8504 load address 0x0000000000000400
                0x0000000040374400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.1.literal
                0x0000000040374400        0xc zephyr/libzephyr.a(soc.c.obj)
                                         0x1c (size before relaxing)
 .iram1.3.literal
                0x000000004037440c        0x4 zephyr/libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x0000000040374410        0x4 zephyr/libzephyr.a(soc_cache.c.obj)
 .iram1.1.literal
                0x0000000040374414       0x24 zephyr/libzephyr.a(soc_cache.c.obj)
                                         0x28 (size before relaxing)
 .iram1.5.literal
                0x0000000040374438        0x8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.6.literal
                0x0000000040374440        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.10.literal
                0x0000000040374444        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.12.literal
                0x0000000040374444       0x14 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x1c (size before relaxing)
 .iram1.13.literal
                0x0000000040374458        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.9.literal
                0x000000004037445c       0x1c zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x58 (size before relaxing)
 .iram1.1.literal
                0x0000000040374478        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
                                         0x14 (size before relaxing)
 .iram1.2.literal
                0x0000000040374478        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .iram1.4.literal
                0x000000004037447c        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x24 (size before relaxing)
 .iram1.2.literal
                0x0000000040374484        0x4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.1.literal
                0x0000000040374488        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x0000000040374488        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0x4 (size before relaxing)
 .iram1.7.literal
                0x0000000040374488        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x0000000040374488        0x4 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .iram1.8.literal
                0x000000004037448c        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.6.literal
                0x000000004037448c        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.3.literal
                0x000000004037448c        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.2.literal
                0x000000004037448c        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.5.literal
                0x000000004037448c        0x8 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x10 (size before relaxing)
 .iram1.2.literal
                0x0000000040374494       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x14 (size before relaxing)
 .iram1.2.literal
                0x00000000403744a4        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.3.literal
                0x00000000403744a8        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.4.literal
                0x00000000403744ac        0x4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.6.literal
                0x00000000403744b0       0x10 zephyr/libzephyr.a(rtc_module.c.obj)
 .iram1.7.literal
                0x00000000403744c0        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x00000000403744c0        0x4 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .iram1.1.literal
                0x00000000403744c4        0xc zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .iram1.0.literal
                0x00000000403744d0       0x1c zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                         0x20 (size before relaxing)
 .iram1.0.literal
                0x00000000403744ec        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x00000000403744ec        0x4 zephyr/libzephyr.a(efuse_hal.c.obj)
 .iram1.1.literal
                0x00000000403744f0        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x00000000403744f0        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x00000000403744f4        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x00000000403744f4       0x20 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x28 (size before relaxing)
 .iram1.2.literal
                0x0000000040374514        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x0000000040374514        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x3c (size before relaxing)
 .iram1.3.literal
                0x0000000040374518        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x0000000040374518        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.7.literal
                0x0000000040374518        0xc zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x44 (size before relaxing)
 .iram1.13.literal
                0x0000000040374524        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x0000000040374524        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.3.literal
                0x0000000040374524        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.4.literal
                0x0000000040374528        0xc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x20 (size before relaxing)
 .iram1.5.literal
                0x0000000040374534        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.0.literal
                0x0000000040374534        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .iram1.1.literal
                0x0000000040374538        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_cpu_idle
                0x0000000040374540        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_fatal_error
                0x0000000040374544        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0x8 (size before relaxing)
 .literal       0x0000000040374544        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                          0x8 (size before relaxing)
 .literal.z_irq_spurious
                0x0000000040374548        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                          0x4 (size before relaxing)
 .literal.arch_new_thread
                0x0000000040374548        0xc zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .literal.return_to
                0x0000000040374554        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_outside_stack_bounds
                0x0000000040374558        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_frame_pointer_valid
                0x000000004037455c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_dump_stack
                0x000000004037455c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int2_c
                0x000000004037455c        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int3_c
                0x0000000040374560        0x4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_int4_c
                0x0000000040374564        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int5_c
                0x0000000040374564        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int6_c
                0x0000000040374564        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x0000000040374564        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_excint1_c
                0x0000000040374564        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_prep_c
                0x000000004037456c        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x000000004037456c        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_fatal_error
                0x000000004037456c        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal.z_sys_init_run_level
                0x000000004037456c        0x4 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x8 (size before relaxing)
 .literal.bg_thread_main
                0x0000000040374570       0x14 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x38 (size before relaxing)
 .literal.z_early_memset
                0x0000000040374584        0x0 zephyr/kernel/libkernel.a(init.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_bss_zero
                0x0000000040374584        0x8 zephyr/kernel/libkernel.a(init.c.obj)
                                          0xc (size before relaxing)
 .literal.z_init_cpu
                0x000000004037458c        0xc zephyr/kernel/libkernel.a(init.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_cstart
                0x0000000040374598       0x10 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .literal.idle  0x00000000403745a8        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_msgq_put
                0x00000000403745a8        0x4 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_impl_k_msgq_get
                0x00000000403745ac        0x0 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_setup_new_thread
                0x00000000403745ac        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_dummy_thread_init
                0x00000000403745ac        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.unpend_thread_no_timeout
                0x00000000403745ac        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.ready_thread
                0x00000000403745ac        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.unready_thread
                0x00000000403745b0        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.add_thread_timeout
                0x00000000403745b0        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_swap
                0x00000000403745b0        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.add_to_waitq_locked
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_ready_thread
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_thread_no_timeout
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_wake_thread
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_timeout
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_pend_curr
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_unpend_thread
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_reschedule_irqlock
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.k_sched_lock
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_unlock
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_swap_next_thread
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_all
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_yield
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x14 (size before relaxing)
 .literal.z_tick_sleep
                0x00000000403745b4        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_impl_k_sleep
                0x00000000403745b4        0x4 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_impl_k_wakeup
                0x00000000403745b8        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sched_current_thread_query
                0x00000000403745b8        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x00000000403745b8        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x38 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x00000000403745b8        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.slice_timeout
                0x00000000403745b8        0xc zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .literal.thread_is_sliceable
                0x00000000403745c4        0x8 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reset_time_slice
                0x00000000403745cc        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_time_slice
                0x00000000403745d0        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x14 (size before relaxing)
 .literal.first
                0x00000000403745d0        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .literal.next_timeout
                0x00000000403745d4        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.elapsed
                0x00000000403745d4        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.remove_timeout
                0x00000000403745d8        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_add_timeout
                0x00000000403745d8        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_abort_timeout
                0x00000000403745dc        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_clock_announce
                0x00000000403745e4        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x20 (size before relaxing)
 .literal.sys_clock_tick_get
                0x00000000403745e4        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x00000000403745e4        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_uptime_ticks
                0x00000000403745e4        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_free
                0x00000000403745e4        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_malloc
                0x00000000403745e4        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0xc (size before relaxing)
 .literal.k_thread_system_pool_assign
                0x00000000403745ec        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x00000000403745ec        0x4 zephyr/kernel/libkernel.a(banner.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_heap_init
                0x00000000403745f0        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
 .literal.statics_init
                0x00000000403745f4        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_free
                0x00000000403745fc        0x4 zephyr/kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_log_impl_lock
                0x0000000040374600        0x4 zephyr/libzephyr.a(log_noos.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_log_impl_lock_timeout
                0x0000000040374604        0x0 zephyr/libzephyr.a(log_noos.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_log_impl_unlock
                0x0000000040374604        0x0 zephyr/libzephyr.a(log_noos.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_log_early_timestamp
                0x0000000040374604        0x0 zephyr/libzephyr.a(log_noos.c.obj)
                                          0x4 (size before relaxing)
 .literal.ccompare_isr
                0x0000000040374604        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_clock_set_timeout
                0x000000004037460c        0xc zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x0000000040374618        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.char_out
                0x0000000040374618        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x000000004037461c        0x8 zephyr/libzephyr.a(printk.c.obj)
                                          0xc (size before relaxing)
 .literal.printk
                0x0000000040374624        0x0 zephyr/libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.console_out
                0x0000000040374624        0x4 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.map_rom_segments
                0x0000000040374628       0x64 zephyr/libzephyr.a(loader.c.obj)
                                         0xac (size before relaxing)
 .literal.__start
                0x000000004037468c       0x28 zephyr/libzephyr.a(loader.c.obj)
                                         0x70 (size before relaxing)
 .literal.flash_is_octal_mode_enabled
                0x00000000403746b4        0x0 zephyr/libzephyr.a(flash_init.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_init_chip_state
                0x00000000403746b4        0x0 zephyr/libzephyr.a(flash_init.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_flash_config
                0x00000000403746b4        0x8 zephyr/libzephyr.a(flash_init.c.obj)
                                         0x30 (size before relaxing)
 .literal.configure_spi_pins
                0x00000000403746bc        0xc zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.flash_set_dummy_out
                0x00000000403746c8        0xc zephyr/libzephyr.a(soc_flash_init.c.obj)
 .literal.flash_dummy_config
                0x00000000403746d4        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                          0x8 (size before relaxing)
 .literal.flash_cs_timing_config
                0x00000000403746d4        0xc zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x10 (size before relaxing)
 .literal.init_spi_flash
                0x00000000403746e0       0x3c zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x80 (size before relaxing)
 .literal.flash_update_id
                0x000000004037471c        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_console_init
                0x000000004037471c        0x0 zephyr/libzephyr.a(console_init.c.obj)
                                         0x18 (size before relaxing)
 .literal.print_banner
                0x000000004037471c       0x10 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x2c (size before relaxing)
 .literal.read_bootloader_header
                0x000000004037472c        0x4 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x1c (size before relaxing)
 .literal.config_wdt
                0x0000000040374730        0x4 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.check_bootloader_validity
                0x0000000040374734       0x10 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x3c (size before relaxing)
 .literal.ana_super_wdt_reset_config
                0x0000000040374744        0xc zephyr/libzephyr.a(soc_init.c.obj)
 .literal.ana_bod_reset_config
                0x0000000040374750        0x4 zephyr/libzephyr.a(soc_init.c.obj)
                                          0xc (size before relaxing)
 .literal.ana_clock_glitch_reset_config
                0x0000000040374754        0x8 zephyr/libzephyr.a(soc_init.c.obj)
                                          0xc (size before relaxing)
 .literal.ana_reset_config
                0x000000004037475c        0x0 zephyr/libzephyr.a(soc_init.c.obj)
                                          0xc (size before relaxing)
 .literal.super_wdt_auto_feed
                0x000000004037475c        0x8 zephyr/libzephyr.a(soc_init.c.obj)
                                          0xc (size before relaxing)
 .literal.wdt_reset_info_dump
                0x0000000040374764       0x28 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x34 (size before relaxing)
 .literal.wdt_reset_cpu0_info_enable
                0x000000004037478c       0x10 zephyr/libzephyr.a(soc_init.c.obj)
 .literal.check_wdt_reset
                0x000000004037479c        0x8 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.hardware_init
                0x00000000403747a4        0x8 zephyr/libzephyr.a(hw_init.c.obj)
                                         0x54 (size before relaxing)
 .literal.soc_random_enable
                0x00000000403747ac       0x58 zephyr/libzephyr.a(soc_random.c.obj)
                                         0x70 (size before relaxing)
 .literal.soc_random_disable
                0x0000000040374804        0xc zephyr/libzephyr.a(soc_random.c.obj)
                                         0x34 (size before relaxing)
 .literal.esp_mmu_map_init
                0x0000000040374810       0x10 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                         0x44 (size before relaxing)
 .literal.esp_intr_lock
                0x0000000040374820        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x0000000040374824        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x0000000040374824        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.is_vect_desc_usable
                0x0000000040374828        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.get_desc_for_int
                0x0000000040374830        0x8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x0000000040374838       0x14 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x90 (size before relaxing)
 .literal.esp_intr_alloc
                0x000000004037484c        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_rom_flash_read
                0x000000004037484c       0x20 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x4c (size before relaxing)
 .literal.bootloader_enable_wp
                0x000000004037486c        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .literal.mmu_hal_unmap_all
                0x000000004037486c        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_init
                0x0000000040374874        0x4 zephyr/libzephyr.a(mmu_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.mmu_hal_map_region
                0x0000000040374878        0x4 zephyr/libzephyr.a(mmu_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.mmu_hal_paddr_to_vaddr
                0x000000004037487c        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.mmu_hal_check_valid_ext_vaddr_region
                0x000000004037487c        0x8 zephyr/libzephyr.a(mmu_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.spimem_flash_ll_set_buffer_data
                0x0000000040374884        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spimem_flash_ll_get_buffer_data
                0x0000000040374884        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_configure_host_io_mode
                0x0000000040374884        0xc zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_common_command
                0x0000000040374890        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_hal_read
                0x0000000040374890        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_erase_sector
                0x0000000040374890        0x4 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_erase_block
                0x0000000040374894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_program_page
                0x0000000040374894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_hal_setup_read_suspend
                0x0000000040374894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_setup_auto_suspend_mode
                0x0000000040374894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_disable_auto_suspend_mode
                0x0000000040374894        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_device_config
                0x0000000040374894        0x4 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_encryption_hal_enable
                0x0000000040374898        0x8 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_disable
                0x00000000403748a0        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_encryption_hal_prepare
                0x00000000403748a0       0x10 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_encryption_hal_done
                0x00000000403748b0        0x8 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_destroy
                0x00000000403748b8        0x4 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.cache_hal_init
                0x00000000403748bc       0x14 zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x1c (size before relaxing)
 .literal.cache_hal_disable
                0x00000000403748d0        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.cache_hal_enable
                0x00000000403748d0        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.cache_hal_suspend
                0x00000000403748d0        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.cache_hal_resume
                0x00000000403748d0        0x4 zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.cache_hal_invalidate_addr
                0x00000000403748d4        0x4 zephyr/libzephyr.a(cache_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.wdt_hal_write_protect_disable
                0x00000000403748d8        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_set_flashboot_en
                0x00000000403748dc        0x4 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.systimer_hal_init
                0x00000000403748e0        0x4 zephyr/libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_select_alarm_mode
                0x00000000403748e4        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.systimer_hal_connect_alarm_counter
                0x00000000403748e4        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpspi_flash_ll_get_buffer_data
                0x00000000403748e4        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_gpspi_device_config
                0x00000000403748e4        0x8 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_hal_gpspi_configure_host_io_mode
                0x00000000403748ec       0x10 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_gpspi_common_command
                0x00000000403748fc        0x4 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_hal_gpspi_read
                0x0000000040374900        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_log_write
                0x0000000040374900        0x4 zephyr/libzephyr.a(log.c.obj)
 .literal.spi_flash_chip_gd_detect_size
                0x0000000040374904        0x4 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_gd_get_io_mode
                0x0000000040374908        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_gd_set_io_mode
                0x0000000040374908       0x10 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_chip_generic_detect_size
                0x0000000040374918        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_reset
                0x0000000040374918        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_config_host_io_mode
                0x0000000040374918        0xc zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_chip_generic_get_caps
                0x0000000040374924        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_read
                0x0000000040374928        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_generic_write
                0x0000000040374930        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_get_write_protect
                0x0000000040374930        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_yield
                0x0000000040374930        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_read_unique_id
                0x0000000040374930        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x1c (size before relaxing)
 .literal.spi_flash_chip_generic_write_encrypted
                0x0000000040374938        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_suspend_cmd_conf
                0x000000004037493c        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_common_write_qe_sr$isra$0
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_16b_wrsr
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr2
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_get_io_mode
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr2
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_set_io_mode
                0x0000000040374944        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_set_io_mode
                0x0000000040374944        0x8 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_get_io_mode
                0x000000004037494c        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_detect_size
                0x000000004037494c        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_detect_size
                0x000000004037494c        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_set_write_protect
                0x000000004037494c        0x8 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_chip
                0x0000000040374954        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_sector
                0x0000000040374958        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_block
                0x000000004037495c        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_xmic_opi_config_host_io_mode
                0x0000000040374960        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x0000000040374964        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_read_id
                0x0000000040374964       0x10 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x24 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_read_reg
                0x0000000040374974        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_io_mode
                0x0000000040374974        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_write_protect
                0x0000000040374978        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_write
                0x0000000040374978        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_page_program
                0x0000000040374978        0x4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_read
                0x000000004037497c        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_block
                0x0000000040374984        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_sector
                0x0000000040374984        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_page_program
                0x0000000040374984        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_read_status_hs
                0x0000000040374984        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_erase_chip
                0x0000000040374984        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_set_write_protect
                0x0000000040374984        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_read_id_hs
                0x0000000040374984        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x1c (size before relaxing)
 .literal.memspi_host_flush_cache
                0x0000000040374990        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_erase_sector
                0x0000000040374990        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0xc (size before relaxing)
 .literal.memspi_host_erase_block
                0x0000000040374990        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0xc (size before relaxing)
 .literal.memspi_host_program_page
                0x0000000040374990        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_init_pointers
                0x0000000040374990        0xc zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x18 (size before relaxing)
 .literal.s_probe_mxic_chip
                0x000000004037499c        0x8 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x14 (size before relaxing)
 .literal.s_mxic_set_required_regs
                0x00000000403749a4        0x4 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                          0x8 (size before relaxing)
 .literal.s_flash_init_mxic
                0x00000000403749a8       0x20 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x48 (size before relaxing)
 .literal.esp_opiflash_init
                0x00000000403749c8       0x18 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_mspi_get_io
                0x00000000403749e0        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_gpio_reserve_pins
                0x00000000403749e4        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .literal.rtc_clk_32k_enable
                0x00000000403749ec       0x1c zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x20 (size before relaxing)
 .literal.rtc_clk_32k_enable_external
                0x0000000040374a08        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x0000000040374a14        0x8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_src_set
                0x0000000040374a1c        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_src_get
                0x0000000040374a20        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_src_set
                0x0000000040374a20        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_fast_src_get
                0x0000000040374a20        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x0000000040374a20       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x1c (size before relaxing)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x0000000040374a30        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x0000000040374a30        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x20 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x0000000040374a3c       0x28 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x54 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x0000000040374a64        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x34 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x0000000040374a64       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x54 (size before relaxing)
 .literal.rtc_clk_cpu_set_to_default_config
                0x0000000040374a74        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x0000000040374a74        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0xc (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x0000000040374a74        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x0000000040374a78        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x0000000040374a78        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_divider_set
                0x0000000040374a78        0xc zephyr/libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8m_divider_set
                0x0000000040374a84        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_init
                0x0000000040374a88       0x1c zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                         0x6c (size before relaxing)
 .literal.rtc_sleep_pu
                0x0000000040374aa4       0x24 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                         0x28 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x0000000040374ac8       0x20 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x44 (size before relaxing)
 .literal.rtc_clk_cal
                0x0000000040374ae8        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtc_time_us_to_slowclk
                0x0000000040374ae8        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_time_get
                0x0000000040374ae8        0xc zephyr/libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_freq_cal
                0x0000000040374af4        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
                                          0x4 (size before relaxing)
 .literal.mspi_timing_config_set_core_clock
                0x0000000040374af4        0x4 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                          0x8 (size before relaxing)
 .literal.mspi_timing_config_set_flash_clock
                0x0000000040374af8        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                          0xc (size before relaxing)
 .literal.mspi_timing_config_set_psram_clock
                0x0000000040374af8        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                          0x8 (size before relaxing)
 .literal.mspi_timing_set_pin_drive_strength
                0x0000000040374af8        0x4 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x10 (size before relaxing)
 .literal.mspi_timing_enter_low_speed_mode
                0x0000000040374afc        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x10 (size before relaxing)
 .literal.mspi_timing_enter_high_speed_mode
                0x0000000040374afc        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x14 (size before relaxing)
 .literal.mspi_timing_change_speed_mode_cache_safe
                0x0000000040374afc        0x8 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_timing_get_flash_timing_param
                0x0000000040374b04        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                          0x4 (size before relaxing)
 .literal.Cache_Suspend_ICache
                0x0000000040374b04        0x8 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .literal.Cache_Suspend_DCache
                0x0000000040374b0c        0x4 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.Cache_Freeze_ICache_Enable
                0x0000000040374b10        0x4 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.Cache_Freeze_DCache_Enable
                0x0000000040374b14        0x4 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_rom_opiflash_cache_mode_config
                0x0000000040374b18       0x14 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_rom_efuse_get_opiconfig
                0x0000000040374b2c        0x8 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
                                         0x10 (size before relaxing)
 .iram1.1       0x0000000040374b34       0x4b zephyr/libzephyr.a(soc.c.obj)
                                         0x57 (size before relaxing)
                0x0000000040374b34                __esp_platform_app_start
 *fill*         0x0000000040374b7f        0x1 
 .iram1.3       0x0000000040374b80       0x1b zephyr/libzephyr.a(soc.c.obj)
                0x0000000040374b80                arch_printk_char_out
 *fill*         0x0000000040374b9b        0x1 
 .iram1.0       0x0000000040374b9c       0x14 zephyr/libzephyr.a(soc_cache.c.obj)
                0x0000000040374b9c                esp_config_instruction_cache_mode
 .iram1.1       0x0000000040374bb0       0x5e zephyr/libzephyr.a(soc_cache.c.obj)
                0x0000000040374bb0                esp_config_data_cache_mode
 *fill*         0x0000000040374c0e        0x2 
 .iram1.5       0x0000000040374c10       0x1e zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040374c2e        0x2 
 .iram1.6       0x0000000040374c30       0x44 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.10      0x0000000040374c74       0x54 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.12      0x0000000040374cc8       0x80 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .iram1.13      0x0000000040374d48       0x58 zephyr/libzephyr.a(esp_flash_api.c.obj)
                0x0000000040374d48                esp_flash_get_physical_size
 .iram1.9       0x0000000040374da0      0x150 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                        0x15c (size before relaxing)
                0x0000000040374da0                esp_flash_init_main
 .iram1.1       0x0000000040374ef0       0x7c zephyr/libzephyr.a(flash_mmap.c.obj)
                                         0x80 (size before relaxing)
                0x0000000040374ef0                spi_flash_check_and_flush_cache
 .iram1.2       0x0000000040374f6c        0xa zephyr/libzephyr.a(flash_ops.c.obj)
                0x0000000040374f6c                spi_flash_guard_set
 *fill*         0x0000000040374f76        0x2 
 .iram1.4       0x0000000040374f78       0x87 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x8f (size before relaxing)
                0x0000000040374f78                esp_mspi_pin_init
 *fill*         0x0000000040374fff        0x1 
 .iram1.2       0x0000000040375000       0x10 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.1       0x0000000040375010        0xc zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x10 (size before relaxing)
 .iram1.0       0x000000004037501c        0xc zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x10 (size before relaxing)
 .iram1.7       0x0000000040375028       0x34 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x38 (size before relaxing)
 .iram1.4       0x000000004037505c       0x15 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 *fill*         0x0000000040375071        0x3 
 .iram1.8       0x0000000040375074        0xa zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xe (size before relaxing)
 *fill*         0x000000004037507e        0x2 
 .iram1.6       0x0000000040375080       0x10 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .iram1.3       0x0000000040375090        0xa zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xd (size before relaxing)
 *fill*         0x000000004037509a        0x2 
 .iram1.2       0x000000004037509c        0xa zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xd (size before relaxing)
 *fill*         0x00000000403750a6        0x2 
 .iram1.5       0x00000000403750a8       0x27 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x2b (size before relaxing)
 *fill*         0x00000000403750cf        0x1 
 .iram1.2       0x00000000403750d0       0x23 zephyr/libzephyr.a(esp_clk.c.obj)
                0x00000000403750d0                esp_clk_apb_freq
 *fill*         0x00000000403750f3        0x1 
 .iram1.2       0x00000000403750f4       0x25 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x00000000403750f4                regi2c_ctrl_read_reg_mask
 *fill*         0x0000000040375119        0x3 
 .iram1.3       0x000000004037511c       0x20 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x000000004037511c                regi2c_ctrl_write_reg
 .iram1.4       0x000000004037513c       0x26 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                0x000000004037513c                regi2c_ctrl_write_reg_mask
 *fill*         0x0000000040375162        0x2 
 .iram1.6       0x0000000040375164       0x34 zephyr/libzephyr.a(rtc_module.c.obj)
                0x0000000040375164                rtc_isr_noniram_disable
 .iram1.7       0x0000000040375198       0x1f zephyr/libzephyr.a(rtc_module.c.obj)
                0x0000000040375198                rtc_isr_noniram_enable
 *fill*         0x00000000403751b7        0x1 
 .iram1.1       0x00000000403751b8       0x58 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                0x00000000403751b8                esp_mmu_paddr_find_caps
 .iram1.1       0x0000000040375210       0x1a zephyr/libzephyr.a(esp_rom_sys.c.obj)
                0x0000000040375210                esp_rom_install_uart_printf
 *fill*         0x000000004037522a        0x2 
 .iram1.0       0x000000004037522c       0xb1 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                0x000000004037522c                esp_rom_uart_set_clock_baudrate
 *fill*         0x00000000403752dd        0x3 
 .iram1.0       0x00000000403752e0       0x18 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x1c (size before relaxing)
                0x00000000403752e0                efuse_hal_chip_revision
 .iram1.0       0x00000000403752f8       0x3e zephyr/libzephyr.a(efuse_hal.c.obj)
                0x00000000403752f8                efuse_hal_get_major_chip_version
 *fill*         0x0000000040375336        0x2 
 .iram1.1       0x0000000040375338       0x3e zephyr/libzephyr.a(efuse_hal.c.obj)
                0x0000000040375338                efuse_hal_get_minor_chip_version
 *fill*         0x0000000040375376        0x2 
 .iram1.0       0x0000000040375378       0x1e zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040375378                spi_flash_disable_interrupts_caches_and_other_cpu
 *fill*         0x0000000040375396        0x2 
 .iram1.1       0x0000000040375398       0x20 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x24 (size before relaxing)
                0x0000000040375398                spi_flash_enable_interrupts_caches_and_other_cpu
 .iram1.1       0x00000000403753b8      0x1aa zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x00000000403753b8                bootloader_flash_execute_command_common
 *fill*         0x0000000040375562        0x2 
 .iram1.2       0x0000000040375564       0x20 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x0000000040375564                bootloader_execute_flash_command
 .iram1.0       0x0000000040375584      0x132 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x146 (size before relaxing)
                0x0000000040375584                bootloader_flash_unlock
 *fill*         0x00000000403756b6        0x2 
 .iram1.3       0x00000000403756b8       0x2a zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x00000000403756b8                bootloader_flash_read_sfdp
 *fill*         0x00000000403756e2        0x2 
 .iram1.4       0x00000000403756e4       0x30 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0x34 (size before relaxing)
                0x00000000403756e4                bootloader_read_flash_id
 .iram1.7       0x0000000040375714       0xa4 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0xb8 (size before relaxing)
                0x0000000040375714                bootloader_flash_xmc_startup
 .iram1.13      0x00000000403757b8       0x10 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x00000000403757b8                bootloader_flash_is_octal_mode_enabled
 .iram1.0       0x00000000403757c8       0x33 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x3a (size before relaxing)
 *fill*         0x00000000403757fb        0x1 
 .iram1.3       0x00000000403757fc       0xb2 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x00000000403757fc                esp_intr_disable
 *fill*         0x00000000403758ae        0x2 
 .iram1.4       0x00000000403758b0       0x52 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x5a (size before relaxing)
                0x00000000403758b0                esp_intr_noniram_disable
 *fill*         0x0000000040375902        0x2 
 .iram1.5       0x0000000040375904       0x40 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x48 (size before relaxing)
                0x0000000040375904                esp_intr_noniram_enable
 .iram1.0       0x0000000040375944       0x6e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000403759b2        0x2 
 .iram1.1       0x00000000403759b4       0x11 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x00000000403759c5        0x0 
 *fill*         0x00000000403759c5        0x0 
 *fill*         0x00000000403759c5        0x3 
 .iram1.3       0x00000000403759c8       0x27 zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x00000000403759ef        0x1 
 .iram1.4       0x00000000403759f0       0x1f zephyr/libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040375a0f        0x0 
 *fill*         0x0000000040375a0f        0x0 
 *fill*         0x0000000040375a0f        0x0 
 *fill*         0x0000000040375a0f        0x1 
 .iram1.9       0x0000000040375a10        0x7 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x0 
 *fill*         0x0000000040375a17        0x1 
 .iram1.6       0x0000000040375a18       0x46 zephyr/libzephyr.a(bootloader_flash.c.obj)
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *fill*         0x0000000040375a5e        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 *fill*         0x0000000040375a5e        0x2 
 .iram0.text    0x0000000040375a60       0x2d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040375a60                _Level1Vector
 *fill*         0x0000000040375a8d        0x0 
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040375a8d        0x3 
 .text.arch_cpu_idle
                0x0000000040375a90        0xe zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                0x0000000040375a90                arch_cpu_idle
 *fill*         0x0000000040375a9e        0x2 
 .text.xtensa_fatal_error
                0x0000000040375aa0       0x1e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040375aa0                xtensa_fatal_error
 *fill*         0x0000000040375abe        0x2 
 .text          0x0000000040375ac0      0x21f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040375ac0                xtensa_spill_reg_windows
                0x0000000040375ae0                xtensa_save_high_regs
                0x0000000040375b28                xtensa_restore_high_regs
                0x0000000040375b5d                _restore_context
                0x0000000040375b98                xtensa_arch_except
                0x0000000040375b9b                xtensa_arch_except_epc
                0x0000000040375ba0                xtensa_arch_kernel_oops
                0x0000000040375ba3                xtensa_arch_kernel_oops_epc
                0x0000000040375ba8                xtensa_switch
 *fill*         0x0000000040375cdf        0x1 
 .text.z_irq_spurious
                0x0000000040375ce0       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040375ce0                z_irq_spurious
 *fill*         0x0000000040375cf2        0x2 
 .text.arch_new_thread
                0x0000000040375cf4       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                0x0000000040375cf4                arch_new_thread
 .text.return_to
                0x0000000040375d2c       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .text.xtensa_is_outside_stack_bounds
                0x0000000040375d40       0x3d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375d40                xtensa_is_outside_stack_bounds
 *fill*         0x0000000040375d7d        0x3 
 .text.xtensa_is_frame_pointer_valid
                0x0000000040375d80       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040375d80                xtensa_is_frame_pointer_valid
 .text.xtensa_dump_stack
                0x0000000040375da8        0xa zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xe (size before relaxing)
                0x0000000040375da8                xtensa_dump_stack
 *fill*         0x0000000040375db2        0x2 
 .text.xtensa_int2_c
                0x0000000040375db4       0x5a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375db4                xtensa_int2_c
 *fill*         0x0000000040375e0e        0x2 
 .text.xtensa_int3_c
                0x0000000040375e10       0x82 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375e10                xtensa_int3_c
 *fill*         0x0000000040375e92        0x2 
 .text.xtensa_int4_c
                0x0000000040375e94       0x6a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375e94                xtensa_int4_c
 *fill*         0x0000000040375efe        0x2 
 .text.xtensa_int5_c
                0x0000000040375f00       0x5e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375f00                xtensa_int5_c
 *fill*         0x0000000040375f5e        0x2 
 .text.xtensa_int6_c
                0x0000000040375f60       0x15 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375f60                xtensa_int6_c
 *fill*         0x0000000040375f75        0x3 
 .text.xtensa_int7_c
                0x0000000040375f78       0x36 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040375f78                xtensa_int7_c
 *fill*         0x0000000040375fae        0x2 
 .text.xtensa_excint1_c
                0x0000000040375fb0      0x1be zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x1c6 (size before relaxing)
                0x0000000040375fb0                xtensa_excint1_c
 *fill*         0x000000004037616e        0x2 
 .text.z_prep_c
                0x0000000040376170       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x14 (size before relaxing)
                0x0000000040376170                z_prep_c
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *fill*         0x0000000040376180        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.k_sys_fatal_error_handler
                0x0000000040376180        0x8 zephyr/kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
                0x0000000040376180                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x0000000040376188       0x22 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040376188                z_fatal_error
 *fill*         0x00000000403761aa        0x2 
 .text.z_sys_init_run_level
                0x00000000403761ac       0x30 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x34 (size before relaxing)
 .text.bg_thread_main
                0x00000000403761dc       0x9e zephyr/kernel/libkernel.a(init.c.obj)
                                         0xae (size before relaxing)
 *fill*         0x000000004037627a        0x2 
 .text.z_early_memset
                0x000000004037627c       0x12 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000004037627c                z_early_memset
 *fill*         0x000000004037628e        0x2 
 .text.z_bss_zero
                0x0000000040376290       0x13 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040376290                z_bss_zero
 *fill*         0x00000000403762a3        0x1 
 .text.z_init_cpu
                0x00000000403762a4       0x5b zephyr/kernel/libkernel.a(init.c.obj)
                0x00000000403762a4                z_init_cpu
 *fill*         0x00000000403762ff        0x1 
 .text.z_cstart
                0x0000000040376300       0x87 zephyr/kernel/libkernel.a(init.c.obj)
                                         0xaf (size before relaxing)
                0x0000000040376300                z_cstart
 *fill*         0x0000000040376387        0x1 
 .text.idle     0x0000000040376388        0xc zephyr/kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x0000000040376388                idle
 *fill*         0x0000000040376394        0x0 
 .text.z_impl_k_msgq_put
                0x0000000040376394       0x9e zephyr/kernel/libkernel.a(msg_q.c.obj)
                                         0xaa (size before relaxing)
                0x0000000040376394                z_impl_k_msgq_put
 *fill*         0x0000000040376432        0x2 
 .text.z_impl_k_msgq_get
                0x0000000040376434       0xb4 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                         0xbc (size before relaxing)
                0x0000000040376434                z_impl_k_msgq_get
 .text.z_setup_new_thread
                0x00000000403764e8       0x5d zephyr/kernel/libkernel.a(thread.c.obj)
                0x00000000403764e8                z_setup_new_thread
 *fill*         0x0000000040376545        0x3 
 .text.z_dummy_thread_init
                0x0000000040376548       0x20 zephyr/kernel/libkernel.a(thread.c.obj)
                0x0000000040376548                z_dummy_thread_init
 .text.unpend_thread_no_timeout
                0x0000000040376568       0x19 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x0000000040376581        0x3 
 .text.ready_thread
                0x0000000040376584       0x9c zephyr/kernel/libkernel.a(sched.c.obj)
 .text.unready_thread
                0x0000000040376620       0x5e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x62 (size before relaxing)
 *fill*         0x000000004037667e        0x2 
 .text.add_thread_timeout
                0x0000000040376680       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x000000004037669b        0x1 
 .text.z_swap   0x000000004037669c       0x3a zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x00000000403766d6        0x2 
 .text.add_to_waitq_locked
                0x00000000403766d8       0x57 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x5b (size before relaxing)
 *fill*         0x000000004037672f        0x1 
 .text.move_thread_to_end_of_prio_q
                0x0000000040376730       0xa6 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0xaa (size before relaxing)
                0x0000000040376730                move_thread_to_end_of_prio_q
 *fill*         0x00000000403767d6        0x2 
 .text.z_ready_thread
                0x00000000403767d8       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x00000000403767d8                z_ready_thread
 *fill*         0x00000000403767eb        0x1 
 .text.z_unpend_thread_no_timeout
                0x00000000403767ec       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x1c (size before relaxing)
                0x00000000403767ec                z_unpend_thread_no_timeout
 .text.z_sched_wake_thread
                0x0000000040376804       0x30 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x38 (size before relaxing)
                0x0000000040376804                z_sched_wake_thread
 .text.z_thread_timeout
                0x0000000040376834        0xd zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040376834                z_thread_timeout
 *fill*         0x0000000040376841        0x3 
 .text.z_pend_curr
                0x0000000040376844       0x28 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040376844                z_pend_curr
 .text.z_unpend_thread
                0x000000004037686c       0x10 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x17 (size before relaxing)
                0x000000004037686c                z_unpend_thread
 *fill*         0x000000004037687c        0x0 
 .text.z_reschedule
                0x000000004037687c       0x2c zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x30 (size before relaxing)
                0x000000004037687c                z_reschedule
 .text.z_reschedule_irqlock
                0x00000000403768a8       0x40 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x44 (size before relaxing)
                0x00000000403768a8                z_reschedule_irqlock
 .text.k_sched_lock
                0x00000000403768e8       0x1b zephyr/kernel/libkernel.a(sched.c.obj)
                0x00000000403768e8                k_sched_lock
 *fill*         0x0000000040376903        0x1 
 .text.k_sched_unlock
                0x0000000040376904       0x5e zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x61 (size before relaxing)
                0x0000000040376904                k_sched_unlock
 *fill*         0x0000000040376962        0x2 
 .text.z_swap_next_thread
                0x0000000040376964        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040376964                z_swap_next_thread
 *fill*         0x000000004037696e        0x2 
 .text.z_get_next_switch_handle
                0x0000000040376970       0x14 zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040376970                z_get_next_switch_handle
 .text.z_unpend_all
                0x0000000040376984       0x26 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x2a (size before relaxing)
                0x0000000040376984                z_unpend_all
 *fill*         0x00000000403769aa        0x2 
 .text.z_sched_init
                0x00000000403769ac        0xf zephyr/kernel/libkernel.a(sched.c.obj)
                0x00000000403769ac                z_sched_init
 *fill*         0x00000000403769bb        0x1 
 .text.z_impl_k_yield
                0x00000000403769bc       0x8b zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x8f (size before relaxing)
                0x00000000403769bc                z_impl_k_yield
 *fill*         0x0000000040376a47        0x1 
 .text.z_tick_sleep
                0x0000000040376a48       0x64 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x6f (size before relaxing)
 *fill*         0x0000000040376aac        0x0 
 .text.z_impl_k_sleep
                0x0000000040376aac       0x52 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x56 (size before relaxing)
                0x0000000040376aac                z_impl_k_sleep
 *fill*         0x0000000040376afe        0x2 
 .text.z_impl_k_wakeup
                0x0000000040376b00       0x38 zephyr/kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
                0x0000000040376b00                z_impl_k_wakeup
 .text.z_impl_k_sched_current_thread_query
                0x0000000040376b38        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                0x0000000040376b38                z_impl_k_sched_current_thread_query
 *fill*         0x0000000040376b42        0x2 
 .text.z_thread_abort
                0x0000000040376b44       0xfc zephyr/kernel/libkernel.a(sched.c.obj)
                                        0x110 (size before relaxing)
                0x0000000040376b44                z_thread_abort
 .text.z_impl_k_thread_abort
                0x0000000040376c40        0xa zephyr/kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x0000000040376c40                z_impl_k_thread_abort
 *fill*         0x0000000040376c4a        0x2 
 .text.slice_timeout
                0x0000000040376c4c       0x1e zephyr/kernel/libkernel.a(timeslicing.c.obj)
 *fill*         0x0000000040376c6a        0x2 
 .text.thread_is_sliceable
                0x0000000040376c6c       0x45 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                0x0000000040376c6c                thread_is_sliceable
 *fill*         0x0000000040376cb1        0x3 
 .text.z_reset_time_slice
                0x0000000040376cb4       0x3f zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x47 (size before relaxing)
                0x0000000040376cb4                z_reset_time_slice
 *fill*         0x0000000040376cf3        0x1 
 .text.z_time_slice
                0x0000000040376cf4       0x3b zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x42 (size before relaxing)
                0x0000000040376cf4                z_time_slice
 *fill*         0x0000000040376d2f        0x1 
 .text.first    0x0000000040376d30        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040376d3f        0x1 
 .text.next_timeout
                0x0000000040376d40       0x42 zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040376d82        0x2 
 .text.elapsed  0x0000000040376d84       0x14 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.remove_timeout
                0x0000000040376d98       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040376dd2        0x2 
 .text.z_add_timeout
                0x0000000040376dd4      0x147 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x153 (size before relaxing)
                0x0000000040376dd4                z_add_timeout
 *fill*         0x0000000040376f1b        0x1 
 .text.z_abort_timeout
                0x0000000040376f1c       0x3a zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x4a (size before relaxing)
                0x0000000040376f1c                z_abort_timeout
 *fill*         0x0000000040376f56        0x2 
 .text.sys_clock_announce
                0x0000000040376f58       0xbd zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0xcd (size before relaxing)
                0x0000000040376f58                sys_clock_announce
 *fill*         0x0000000040377015        0x3 
 .text.sys_clock_tick_get
                0x0000000040377018       0x28 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040377018                sys_clock_tick_get
 .text.sys_clock_tick_get_32
                0x0000000040377040        0xa zephyr/kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x0000000040377040                sys_clock_tick_get_32
 *fill*         0x000000004037704a        0x2 
 .text.z_impl_k_uptime_ticks
                0x000000004037704c        0xf zephyr/kernel/libkernel.a(timeout.c.obj)
                0x000000004037704c                z_impl_k_uptime_ticks
 *fill*         0x000000004037705b        0x1 
 .text.k_free   0x000000004037705c       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000004037705c                k_free
 .text.k_malloc
                0x0000000040377070       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x18 (size before relaxing)
                0x0000000040377070                k_malloc
 .text.k_thread_system_pool_assign
                0x0000000040377084        0xb zephyr/kernel/libkernel.a(mempool.c.obj)
                0x0000000040377084                k_thread_system_pool_assign
 *fill*         0x000000004037708f        0x1 
 .text.boot_banner
                0x0000000040377090        0xb zephyr/kernel/libkernel.a(banner.c.obj)
                                          0xe (size before relaxing)
                0x0000000040377090                boot_banner
 *fill*         0x000000004037709b        0x1 
 .text.k_heap_init
                0x000000004037709c       0x17 zephyr/kernel/libkernel.a(kheap.c.obj)
                0x000000004037709c                k_heap_init
 *fill*         0x00000000403770b3        0x1 
 .text.statics_init
                0x00000000403770b4       0x22 zephyr/kernel/libkernel.a(kheap.c.obj)
 *fill*         0x00000000403770d6        0x2 
 .text.k_heap_free
                0x00000000403770d8       0x2c zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x00000000403770d8                k_heap_free
 .text.z_device_state_init
                0x0000000040377104        0x5 zephyr/kernel/libkernel.a(device.c.obj)
                0x0000000040377104                z_device_state_init
 *fill*         0x0000000040377109        0x3 
 .text.z_impl_device_is_ready
                0x000000004037710c       0x1a zephyr/kernel/libkernel.a(device.c.obj)
                0x000000004037710c                z_impl_device_is_ready
 *fill*         0x0000000040377126        0x2 
 .text.arch_system_halt
                0x0000000040377128        0x9 zephyr/kernel/libkernel.a(fatal.c.obj)
                0x0000000040377128                arch_system_halt
 *fill*         0x0000000040377131        0x0 
 *fill*         0x0000000040377131        0x3 
 .text.do_device_init
                0x0000000040377134       0x34 zephyr/kernel/libkernel.a(init.c.obj)
 *fill*         0x0000000040377168        0x0 
 *fill*         0x0000000040377168        0x0 
 *fill*         0x0000000040377168        0x0 
 *fill*         0x0000000040377168        0x0 
 *fill*         0x0000000040377168        0x0 
 *fill*         0x0000000040377168        0x0 
 .text.unpend_thread_no_timeout
                0x0000000040377168       0x20 zephyr/kernel/libkernel.a(msg_q.c.obj)
 *fill*         0x0000000040377188        0x0 
 *fill*         0x0000000040377188        0x0 
 .text.sys_dlist_remove
                0x0000000040377188       0x13 zephyr/kernel/libkernel.a(sched.c.obj)
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x0 
 *fill*         0x000000004037719b        0x1 
 .text.z_alloc_helper
                0x000000004037719c       0x2b zephyr/kernel/libkernel.a(mempool.c.obj)
 *fill*         0x00000000403771c7        0x0 
 *fill*         0x00000000403771c7        0x0 
 *fill*         0x00000000403771c7        0x0 
 *fill*         0x00000000403771c7        0x0 
 *fill*         0x00000000403771c7        0x0 
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_packaged.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000403771c7        0x1 
 .text.esp_log_impl_lock
                0x00000000403771c8       0x16 zephyr/libzephyr.a(log_noos.c.obj)
                0x00000000403771c8                esp_log_impl_lock
 *fill*         0x00000000403771de        0x2 
 .text.esp_log_impl_lock_timeout
                0x00000000403771e0        0xa zephyr/libzephyr.a(log_noos.c.obj)
                                          0xd (size before relaxing)
                0x00000000403771e0                esp_log_impl_lock_timeout
 *fill*         0x00000000403771ea        0x2 
 .text.esp_log_impl_unlock
                0x00000000403771ec       0x17 zephyr/libzephyr.a(log_noos.c.obj)
                0x00000000403771ec                esp_log_impl_unlock
 *fill*         0x0000000040377203        0x1 
 .text.esp_log_early_timestamp
                0x0000000040377204       0x1d zephyr/libzephyr.a(log_noos.c.obj)
                0x0000000040377204                esp_log_timestamp
                0x0000000040377204                esp_log_early_timestamp
 *fill*         0x0000000040377221        0x0 
 *fill*         0x0000000040377221        0x0 
 *fill*         0x0000000040377221        0x0 
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377221        0x3 
 .text.ccompare_isr
                0x0000000040377224       0x32 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x0000000040377256        0x2 
 .text.sys_clock_set_timeout
                0x0000000040377258       0x68 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040377258                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x00000000403772c0       0x22 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x00000000403772c0                sys_clock_elapsed
 *fill*         0x00000000403772e2        0x0 
 *fill*         0x00000000403772e2        0x2 
 .text.sys_clock_driver_init
                0x00000000403772e4       0x23 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x0000000040377307        0x0 
 *fill*         0x0000000040377307        0x1 
 .text.sys_clock_cycle_get_32
                0x0000000040377308        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040377308                sys_clock_cycle_get_32
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 .text.char_out
                0x0000000040377310       0x11 zephyr/libzephyr.a(printk.c.obj)
 *fill*         0x0000000040377321        0x3 
 .text.vprintk  0x0000000040377324       0x2c zephyr/libzephyr.a(printk.c.obj)
                0x0000000040377324                vprintk
 .text.printk   0x0000000040377350       0x22 zephyr/libzephyr.a(printk.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040377350                printk
 *fill*         0x0000000040377372        0x0 
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x0000000040377372        0x2 
 .text.console_out
                0x0000000040377374       0x22 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x0000000040377396        0x0 
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_minimal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377396        0x2 
 .text.map_rom_segments
                0x0000000040377398      0x34f zephyr/libzephyr.a(loader.c.obj)
                                        0x35b (size before relaxing)
                0x0000000040377398                map_rom_segments
 *fill*         0x00000000403776e7        0x1 
 .text.__start  0x00000000403776e8       0xc9 zephyr/libzephyr.a(loader.c.obj)
                                         0xe4 (size before relaxing)
                0x00000000403776e8                __start
 *fill*         0x00000000403777b1        0x0 
 *fill*         0x00000000403777b1        0x0 
 *libzephyr.a:flash_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000403777b1        0x3 
 .text.flash_is_octal_mode_enabled
                0x00000000403777b4       0x10 zephyr/libzephyr.a(flash_init.c.obj)
                0x00000000403777b4                flash_is_octal_mode_enabled
 .text.spi_flash_init_chip_state
                0x00000000403777c4       0x21 zephyr/libzephyr.a(flash_init.c.obj)
                0x00000000403777c4                spi_flash_init_chip_state
 *fill*         0x00000000403777e5        0x3 
 .text.esp_flash_config
                0x00000000403777e8       0x3e zephyr/libzephyr.a(flash_init.c.obj)
                                         0x52 (size before relaxing)
                0x00000000403777e8                esp_flash_config
 *fill*         0x0000000040377826        0x0 
 *libzephyr.a:soc_flash_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377826        0x2 
 .text.configure_spi_pins
                0x0000000040377828       0x78 zephyr/libzephyr.a(soc_flash_init.c.obj)
                0x0000000040377828                configure_spi_pins
 .text.flash_set_dummy_out
                0x00000000403778a0       0x28 zephyr/libzephyr.a(soc_flash_init.c.obj)
                0x00000000403778a0                flash_set_dummy_out
 .text.flash_dummy_config
                0x00000000403778c8        0xd zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x14 (size before relaxing)
                0x00000000403778c8                flash_dummy_config
 *fill*         0x00000000403778d5        0x3 
 .text.flash_cs_timing_config
                0x00000000403778d8       0x9c zephyr/libzephyr.a(soc_flash_init.c.obj)
                0x00000000403778d8                flash_cs_timing_config
 .text.init_spi_flash
                0x0000000040377974      0x123 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                        0x13b (size before relaxing)
                0x0000000040377974                init_spi_flash
 *fill*         0x0000000040377a97        0x1 
 .text.flash_update_id
                0x0000000040377a98       0x12 zephyr/libzephyr.a(soc_flash_init.c.obj)
                0x0000000040377a98                flash_update_id
 *fill*         0x0000000040377aaa        0x0 
 *fill*         0x0000000040377aaa        0x0 
 *libzephyr.a:console_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377aaa        0x2 
 .text.esp_console_init
                0x0000000040377aac       0x27 zephyr/libzephyr.a(console_init.c.obj)
                                         0x33 (size before relaxing)
                0x0000000040377aac                esp_console_init
 *fill*         0x0000000040377ad3        0x0 
 *libzephyr.a:soc_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377ad3        0x1 
 .text.print_banner
                0x0000000040377ad4       0x4a zephyr/libzephyr.a(soc_init.c.obj)
                                         0x56 (size before relaxing)
                0x0000000040377ad4                print_banner
 *fill*         0x0000000040377b1e        0x2 
 .text.read_bootloader_header
                0x0000000040377b20       0x32 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x36 (size before relaxing)
                0x0000000040377b20                read_bootloader_header
 *fill*         0x0000000040377b52        0x2 
 .text.config_wdt
                0x0000000040377b54       0x3e zephyr/libzephyr.a(soc_init.c.obj)
                                         0x4e (size before relaxing)
                0x0000000040377b54                config_wdt
 *fill*         0x0000000040377b92        0x2 
 .text.check_bootloader_validity
                0x0000000040377b94       0xbe zephyr/libzephyr.a(soc_init.c.obj)
                                         0xca (size before relaxing)
                0x0000000040377b94                check_bootloader_validity
 *fill*         0x0000000040377c52        0x2 
 .text.ana_super_wdt_reset_config
                0x0000000040377c54       0x3b zephyr/libzephyr.a(soc_init.c.obj)
                0x0000000040377c54                ana_super_wdt_reset_config
 *fill*         0x0000000040377c8f        0x1 
 .text.ana_bod_reset_config
                0x0000000040377c90       0x3a zephyr/libzephyr.a(soc_init.c.obj)
                0x0000000040377c90                ana_bod_reset_config
 *fill*         0x0000000040377cca        0x2 
 .text.ana_clock_glitch_reset_config
                0x0000000040377ccc       0x3a zephyr/libzephyr.a(soc_init.c.obj)
                0x0000000040377ccc                ana_clock_glitch_reset_config
 *fill*         0x0000000040377d06        0x2 
 .text.ana_reset_config
                0x0000000040377d08       0x16 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x1e (size before relaxing)
                0x0000000040377d08                ana_reset_config
 *fill*         0x0000000040377d1e        0x2 
 .text.super_wdt_auto_feed
                0x0000000040377d20       0x2c zephyr/libzephyr.a(soc_init.c.obj)
                0x0000000040377d20                super_wdt_auto_feed
 .text.wdt_reset_info_dump
                0x0000000040377d4c       0x5e zephyr/libzephyr.a(soc_init.c.obj)
                                         0x62 (size before relaxing)
                0x0000000040377d4c                wdt_reset_info_dump
 *fill*         0x0000000040377daa        0x2 
 .text.wdt_reset_cpu0_info_enable
                0x0000000040377dac       0x3c zephyr/libzephyr.a(soc_init.c.obj)
                0x0000000040377dac                wdt_reset_cpu0_info_enable
 .text.check_wdt_reset
                0x0000000040377de8       0x46 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x4e (size before relaxing)
                0x0000000040377de8                check_wdt_reset
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *fill*         0x0000000040377e2e        0x0 
 *libzephyr.a:hw_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377e2e        0x2 
 .text.hardware_init
                0x0000000040377e30       0x6a zephyr/libzephyr.a(hw_init.c.obj)
                                         0x9a (size before relaxing)
                0x0000000040377e30                hardware_init
 *fill*         0x0000000040377e9a        0x0 
 *libzephyr.a:soc_random.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377e9a        0x2 
 .text.soc_random_enable
                0x0000000040377e9c      0x232 zephyr/libzephyr.a(soc_random.c.obj)
                                        0x23e (size before relaxing)
                0x0000000040377e9c                soc_random_enable
 *fill*         0x00000000403780ce        0x2 
 .text.soc_random_disable
                0x00000000403780d0       0xa7 zephyr/libzephyr.a(soc_random.c.obj)
                                         0xb3 (size before relaxing)
                0x00000000403780d0                soc_random_disable
 *fill*         0x0000000040378177        0x0 
 *fill*         0x0000000040378177        0x0 
 *libzephyr.a:esp_mmu_map.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040378177        0x1 
 .text.esp_mmu_map_init
                0x0000000040378178      0x14e zephyr/libzephyr.a(esp_mmu_map.c.obj)
                0x0000000040378178                esp_mmu_map_init
 *fill*         0x00000000403782c6        0x0 
 *libdrivers__interrupt_controller.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000403782c6        0x2 
 .text.esp_intr_lock
                0x00000000403782c8        0xd zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000403782d5        0x3 
 .text.esp_intr_unlock
                0x00000000403782d8       0x10 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x00000000403782e8       0x23 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x000000004037830b        0x1 
 .text.is_vect_desc_usable
                0x000000004037830c       0xa9 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000403783b5        0x3 
 .text.get_desc_for_int
                0x00000000403783b8       0x94 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.esp_intr_alloc_intrstatus
                0x000000004037844c      0x3b7 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x3db (size before relaxing)
                0x000000004037844c                esp_intr_alloc_intrstatus
 *fill*         0x0000000040378803        0x1 
 .text.esp_intr_alloc
                0x0000000040378804       0x18 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040378804                esp_intr_alloc
 *fill*         0x000000004037881c        0x0 
 .text.z_xt_ints_off
                0x000000004037881c       0x16 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000040378832        0x0 
 *fill*         0x0000000040378832        0x0 
 *fill*         0x0000000040378832        0x0 
 *fill*         0x0000000040378832        0x0 
 *fill*         0x0000000040378832        0x0 
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__newlib.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__picolibc.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp32s3-mp.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040378832        0x2 
 .text.esp_rom_flash_read
                0x0000000040378834       0xf7 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x103 (size before relaxing)
                0x0000000040378834                esp_rom_flash_read
 *fill*         0x000000004037892b        0x1 
 .text.bootloader_enable_wp
                0x000000004037892c       0x13 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x000000004037892c                bootloader_enable_wp
 *fill*         0x000000004037893f        0x0 
 *libzephyr.a:flash_mmap.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:efuse_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037893f        0x1 
 .text.mmu_hal_unmap_all
                0x0000000040378940       0x17 zephyr/libzephyr.a(mmu_hal.c.obj)
                0x0000000040378940                mmu_hal_unmap_all
 *fill*         0x0000000040378957        0x1 
 .text.mmu_hal_init
                0x0000000040378958        0xe zephyr/libzephyr.a(mmu_hal.c.obj)
                                         0x11 (size before relaxing)
                0x0000000040378958                mmu_hal_init
 *fill*         0x0000000040378966        0x2 
 .text.mmu_hal_map_region
                0x0000000040378968       0x43 zephyr/libzephyr.a(mmu_hal.c.obj)
                0x0000000040378968                mmu_hal_map_region
 *fill*         0x00000000403789ab        0x1 
 .text.mmu_hal_paddr_to_vaddr
                0x00000000403789ac       0x5d zephyr/libzephyr.a(mmu_hal.c.obj)
                0x00000000403789ac                mmu_hal_paddr_to_vaddr
 *fill*         0x0000000040378a09        0x3 
 .text.mmu_hal_check_valid_ext_vaddr_region
                0x0000000040378a0c       0x6c zephyr/libzephyr.a(mmu_hal.c.obj)
                0x0000000040378a0c                mmu_hal_check_valid_ext_vaddr_region
 *fill*         0x0000000040378a78        0x0 
 *fill*         0x0000000040378a78        0x0 
 *fill*         0x0000000040378a78        0x0 
 *fill*         0x0000000040378a78        0x0 
 *fill*         0x0000000040378a78        0x0 
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.spimem_flash_ll_set_buffer_data
                0x0000000040378a78       0x40 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spimem_flash_ll_get_buffer_data
                0x0000000040378ab8       0x54 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_configure_host_io_mode
                0x0000000040378b0c      0x2d9 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378b0c                spi_flash_hal_configure_host_io_mode
 *fill*         0x0000000040378de5        0x3 
 .text.spi_flash_hal_common_command
                0x0000000040378de8      0x118 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x120 (size before relaxing)
                0x0000000040378de8                spi_flash_hal_common_command
 .text.spi_flash_hal_read
                0x0000000040378f00       0x80 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378f00                spi_flash_hal_read
 .text.spi_flash_hal_erase_sector
                0x0000000040378f80       0x73 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378f80                spi_flash_hal_erase_sector
 *fill*         0x0000000040378ff3        0x1 
 .text.spi_flash_hal_erase_block
                0x0000000040378ff4       0x6c zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378ff4                spi_flash_hal_erase_block
 .text.spi_flash_hal_program_page
                0x0000000040379060       0x86 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x8a (size before relaxing)
                0x0000000040379060                spi_flash_hal_program_page
 *fill*         0x00000000403790e6        0x2 
 .text.spi_flash_hal_setup_read_suspend
                0x00000000403790e8       0x16 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000403790e8                spi_flash_hal_setup_read_suspend
 *fill*         0x00000000403790fe        0x2 
 .text.spi_flash_hal_setup_auto_suspend_mode
                0x0000000040379100       0x53 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379100                spi_flash_hal_setup_auto_suspend_mode
 *fill*         0x0000000040379153        0x1 
 .text.spi_flash_hal_disable_auto_suspend_mode
                0x0000000040379154       0x53 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379154                spi_flash_hal_disable_auto_suspend_mode
 *fill*         0x00000000403791a7        0x1 
 .text.spi_flash_hal_device_config
                0x00000000403791a8      0x111 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x115 (size before relaxing)
                0x00000000403791a8                spi_flash_hal_device_config
 *fill*         0x00000000403792b9        0x3 
 .text.spi_flash_hal_poll_cmd_done
                0x00000000403792bc        0xf zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000403792bc                spi_flash_hal_poll_cmd_done
 *fill*         0x00000000403792cb        0x0 
 *fill*         0x00000000403792cb        0x1 
 .text.spi_flash_hal_erase_chip
                0x00000000403792cc       0x28 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000403792cc                spi_flash_hal_erase_chip
 *fill*         0x00000000403792f4        0x0 
 *fill*         0x00000000403792f4        0x0 
 .text.spi_flash_hal_set_write_protect
                0x00000000403792f4       0x30 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000403792f4                spi_flash_hal_set_write_protect
 .text.spi_flash_hal_check_status
                0x0000000040379324       0x25 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379324                spi_flash_hal_check_status
 *fill*         0x0000000040379349        0x0 
 *fill*         0x0000000040379349        0x0 
 *fill*         0x0000000040379349        0x0 
 *fill*         0x0000000040379349        0x0 
 *fill*         0x0000000040379349        0x3 
 .text.spi_flash_hal_resume
                0x000000004037934c       0x18 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x000000004037934c                spi_flash_hal_resume
 .text.spi_flash_hal_suspend
                0x0000000040379364       0x18 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379364                spi_flash_hal_suspend
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.spi_flash_encryption_hal_enable
                0x000000004037937c       0x21 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x000000004037937c                spi_flash_encryption_hal_enable
 *fill*         0x000000004037939d        0x3 
 .text.spi_flash_encryption_hal_disable
                0x00000000403793a0       0x17 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793a0                spi_flash_encryption_hal_disable
 *fill*         0x00000000403793b7        0x1 
 .text.spi_flash_encryption_hal_prepare
                0x00000000403793b8       0x34 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793b8                spi_flash_encryption_hal_prepare
 .text.spi_flash_encryption_hal_done
                0x00000000403793ec       0x22 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793ec                spi_flash_encryption_hal_done
 *fill*         0x000000004037940e        0x2 
 .text.spi_flash_encryption_hal_destroy
                0x0000000040379410        0xf zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040379410                spi_flash_encryption_hal_destroy
 *fill*         0x000000004037941f        0x0 
 *fill*         0x000000004037941f        0x0 
 *fill*         0x000000004037941f        0x0 
 *fill*         0x000000004037941f        0x1 
 .text.spi_flash_encryption_hal_check
                0x0000000040379420        0xf zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040379420                spi_flash_encryption_hal_check
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037942f        0x1 
 .text.cache_hal_init
                0x0000000040379430       0x5c zephyr/libzephyr.a(cache_hal.c.obj)
                0x0000000040379430                cache_hal_init
 .text.cache_hal_disable
                0x000000004037948c       0x22 zephyr/libzephyr.a(cache_hal.c.obj)
                0x000000004037948c                cache_hal_disable
 *fill*         0x00000000403794ae        0x2 
 .text.cache_hal_enable
                0x00000000403794b0       0x2c zephyr/libzephyr.a(cache_hal.c.obj)
                0x00000000403794b0                cache_hal_enable
 .text.cache_hal_suspend
                0x00000000403794dc       0x1c zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x22 (size before relaxing)
                0x00000000403794dc                cache_hal_suspend
 *fill*         0x00000000403794f8        0x0 
 .text.cache_hal_resume
                0x00000000403794f8       0x2a zephyr/libzephyr.a(cache_hal.c.obj)
                0x00000000403794f8                cache_hal_resume
 *fill*         0x0000000040379522        0x2 
 .text.cache_hal_invalidate_addr
                0x0000000040379524       0x1a zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x1e (size before relaxing)
                0x0000000040379524                cache_hal_invalidate_addr
 *fill*         0x000000004037953e        0x0 
 *fill*         0x000000004037953e        0x0 
 *fill*         0x000000004037953e        0x0 
 *fill*         0x000000004037953e        0x0 
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037953e        0x2 
 .text.wdt_hal_write_protect_disable
                0x0000000040379540       0x1d zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040379540                wdt_hal_write_protect_disable
 *fill*         0x000000004037955d        0x3 
 .text.wdt_hal_set_flashboot_en
                0x0000000040379560       0x42 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040379560                wdt_hal_set_flashboot_en
 *fill*         0x00000000403795a2        0x0 
 *fill*         0x00000000403795a2        0x2 
 .text.wdt_hal_write_protect_enable
                0x00000000403795a4       0x1c zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000403795a4                wdt_hal_write_protect_enable
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.systimer_hal_init
                0x00000000403795c0       0x1c zephyr/libzephyr.a(systimer_hal.c.obj)
                0x00000000403795c0                systimer_hal_init
 .text.systimer_hal_select_alarm_mode
                0x00000000403795dc       0x3f zephyr/libzephyr.a(systimer_hal.c.obj)
                0x00000000403795dc                systimer_hal_select_alarm_mode
 *fill*         0x000000004037961b        0x1 
 .text.systimer_hal_connect_alarm_counter
                0x000000004037961c       0x22 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x000000004037961c                systimer_hal_connect_alarm_counter
 *fill*         0x000000004037963e        0x2 
 .text.systimer_hal_set_tick_rate_ops
                0x0000000040379640        0xd zephyr/libzephyr.a(systimer_hal.c.obj)
                0x0000000040379640                systimer_hal_set_tick_rate_ops
 *fill*         0x000000004037964d        0x3 
 .text.systimer_hal_enable_counter
                0x0000000040379650       0x21 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x0000000040379650                systimer_hal_enable_counter
 *fill*         0x0000000040379671        0x0 
 *fill*         0x0000000040379671        0x0 
 *fill*         0x0000000040379671        0x3 
 .text.systimer_hal_counter_can_stall_by_cpu
                0x0000000040379674       0x34 zephyr/libzephyr.a(systimer_hal.c.obj)
                0x0000000040379674                systimer_hal_counter_can_stall_by_cpu
 *libzephyr.a:spi_flash_hal_gpspi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.gpspi_flash_ll_get_buffer_data
                0x00000000403796a8       0x58 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .text.spi_flash_hal_gpspi_device_config
                0x0000000040379700      0x138 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379700                spi_flash_hal_gpspi_device_config
 .text.spi_flash_hal_gpspi_configure_host_io_mode
                0x0000000040379838      0x263 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379838                spi_flash_hal_gpspi_configure_host_io_mode
 *fill*         0x0000000040379a9b        0x1 
 .text.spi_flash_hal_gpspi_common_command
                0x0000000040379a9c      0x1ac zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                        0x1b0 (size before relaxing)
                0x0000000040379a9c                spi_flash_hal_gpspi_common_command
 .text.spi_flash_hal_gpspi_read
                0x0000000040379c48       0xc8 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379c48                spi_flash_hal_gpspi_read
 .text.spi_flash_hal_gpspi_poll_cmd_done
                0x0000000040379d10        0xf zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379d10                spi_flash_hal_gpspi_poll_cmd_done
 *fill*         0x0000000040379d1f        0x0 
 *fill*         0x0000000040379d1f        0x1 
 .text.spi_flash_hal_gpspi_supports_direct_write
                0x0000000040379d20        0x7 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379d20                spi_flash_hal_gpspi_supports_direct_write
 *fill*         0x0000000040379d27        0x1 
 .text.spi_flash_hal_gpspi_supports_direct_read
                0x0000000040379d28        0x7 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379d28                spi_flash_hal_gpspi_supports_direct_read
 *fill*         0x0000000040379d2f        0x1 
 .text.spi_flash_hal_gpspi_check_status
                0x0000000040379d30       0x14 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379d30                spi_flash_hal_gpspi_check_status
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_write) SORT_BY_ALIGNMENT(.text.esp_log_write))
 .text.esp_log_write
                0x0000000040379d44       0x26 zephyr/libzephyr.a(log.c.obj)
                0x0000000040379d44                esp_log_write
 *(SORT_BY_ALIGNMENT(.literal.esp_log_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_early_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock_timeout) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_unlock) SORT_BY_ALIGNMENT(.text.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379d6a        0x2 
 .text.spi_flash_chip_boya_probe
                0x0000000040379d6c       0x22 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                0x0000000040379d6c                spi_flash_chip_boya_probe
 *fill*         0x0000000040379d8e        0x2 
 .text.spi_flash_chip_boya_get_caps
                0x0000000040379d90        0x7 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                0x0000000040379d90                spi_flash_chip_boya_get_caps
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379d97        0x1 
 .text.spi_flash_chip_gd_detect_size
                0x0000000040379d98       0x2d zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379d98                spi_flash_chip_gd_detect_size
 *fill*         0x0000000040379dc5        0x3 
 .text.spi_flash_chip_gd_get_io_mode
                0x0000000040379dc8       0x1e zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379dc8                spi_flash_chip_gd_get_io_mode
 *fill*         0x0000000040379de6        0x2 
 .text.spi_flash_chip_gd_set_io_mode
                0x0000000040379de8       0x3e zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379de8                spi_flash_chip_gd_set_io_mode
 *fill*         0x0000000040379e26        0x2 
 .text.spi_flash_chip_gd_get_caps
                0x0000000040379e28       0x19 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379e28                spi_flash_chip_gd_get_caps
 *fill*         0x0000000040379e41        0x0 
 *fill*         0x0000000040379e41        0x0 
 *fill*         0x0000000040379e41        0x3 
 .text.spi_flash_chip_gd_probe
                0x0000000040379e44       0x22 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379e44                spi_flash_chip_gd_probe
 *fill*         0x0000000040379e66        0x0 
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379e66        0x2 
 .text.spi_flash_chip_generic_detect_size
                0x0000000040379e68       0x41 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040379e68                spi_flash_chip_generic_detect_size
 *fill*         0x0000000040379ea9        0x3 
 .text.spi_flash_chip_generic_reset
                0x0000000040379eac       0x55 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040379eac                spi_flash_chip_generic_reset
 *fill*         0x0000000040379f01        0x3 
 .text.spi_flash_chip_generic_config_host_io_mode
                0x0000000040379f04       0xfa zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040379f04                spi_flash_chip_generic_config_host_io_mode
 *fill*         0x0000000040379ffe        0x2 
 .text.spi_flash_chip_generic_get_caps
                0x000000004037a000       0x5f zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a000                spi_flash_chip_generic_get_caps
 *fill*         0x000000004037a05f        0x1 
 .text.spi_flash_chip_generic_read
                0x000000004037a060       0x9e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0xa6 (size before relaxing)
                0x000000004037a060                spi_flash_chip_generic_read
 *fill*         0x000000004037a0fe        0x2 
 .text.spi_flash_chip_generic_write
                0x000000004037a100       0x82 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a100                spi_flash_chip_generic_write
 *fill*         0x000000004037a182        0x2 
 .text.spi_flash_chip_generic_get_write_protect
                0x000000004037a184       0x2c zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a184                spi_flash_chip_generic_get_write_protect
 .text.spi_flash_chip_generic_yield
                0x000000004037a1b0       0x48 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a1b0                spi_flash_chip_generic_yield
 .text.spi_flash_chip_generic_read_unique_id
                0x000000004037a1f8       0x84 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a1f8                spi_flash_chip_generic_read_unique_id
 .text.spi_flash_chip_generic_write_encrypted
                0x000000004037a27c       0xa0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a27c                spi_flash_chip_generic_write_encrypted
 .text.spi_flash_chip_generic_suspend_cmd_conf
                0x000000004037a31c       0x44 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a31c                spi_flash_chip_generic_suspend_cmd_conf
 .text.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x000000004037a360       0x31 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x000000004037a391        0x3 
 .text.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x000000004037a394       0x30 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x34 (size before relaxing)
                0x000000004037a394                spi_flash_common_read_status_16b_rdsr_rdsr2
 .text.spi_flash_common_write_qe_sr$isra$0
                0x000000004037a3c4       0x2e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x000000004037a3f2        0x2 
 .text.spi_flash_common_write_status_16b_wrsr
                0x000000004037a3f4       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a3f4                spi_flash_common_write_status_16b_wrsr
 *fill*         0x000000004037a409        0x3 
 .text.spi_flash_common_read_status_8b_rdsr2
                0x000000004037a40c       0x10 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037a40c                spi_flash_common_read_status_8b_rdsr2
 .text.spi_flash_chip_generic_get_io_mode
                0x000000004037a41c       0x1e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a41c                spi_flash_chip_generic_get_io_mode
 *fill*         0x000000004037a43a        0x2 
 .text.spi_flash_common_read_status_8b_rdsr
                0x000000004037a43c       0x10 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037a43c                spi_flash_common_read_status_8b_rdsr
 .text.spi_flash_common_write_status_8b_wrsr
                0x000000004037a44c       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a44c                spi_flash_common_write_status_8b_wrsr
 *fill*         0x000000004037a461        0x3 
 .text.spi_flash_common_write_status_8b_wrsr2
                0x000000004037a464       0x15 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a464                spi_flash_common_write_status_8b_wrsr2
 *fill*         0x000000004037a479        0x3 
 .text.spi_flash_chip_generic_set_io_mode
                0x000000004037a47c       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a47c                spi_flash_chip_generic_set_io_mode
 *fill*         0x000000004037a494        0x0 
 *fill*         0x000000004037a494        0x0 
 .text.spi_flash_chip_generic_probe
                0x000000004037a494        0x7 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a494                spi_flash_chip_generic_probe
 *fill*         0x000000004037a49b        0x0 
 *fill*         0x000000004037a49b        0x1 
 .text.spi_flash_chip_generic_erase_chip
                0x000000004037a49c       0x88 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a49c                spi_flash_chip_generic_erase_chip
 .text.spi_flash_chip_generic_erase_sector
                0x000000004037a524       0x90 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a524                spi_flash_chip_generic_erase_sector
 .text.spi_flash_chip_generic_erase_block
                0x000000004037a5b4       0x90 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a5b4                spi_flash_chip_generic_erase_block
 .text.spi_flash_chip_generic_set_write_protect
                0x000000004037a644       0x52 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a644                spi_flash_chip_generic_set_write_protect
 *fill*         0x000000004037a696        0x2 
 .text.spi_flash_chip_generic_read_reg
                0x000000004037a698       0x12 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a698                spi_flash_chip_generic_read_reg
 *fill*         0x000000004037a6aa        0x2 
 .text.spi_flash_chip_generic_wait_idle
                0x000000004037a6ac       0x80 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a6ac                spi_flash_chip_generic_wait_idle
 *fill*         0x000000004037a72c        0x0 
 *fill*         0x000000004037a72c        0x0 
 *fill*         0x000000004037a72c        0x0 
 *fill*         0x000000004037a72c        0x0 
 .text.spi_flash_chip_generic_page_program
                0x000000004037a72c       0x65 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a72c                spi_flash_chip_generic_page_program
 *fill*         0x000000004037a791        0x0 
 *fill*         0x000000004037a791        0x0 
 *fill*         0x000000004037a791        0x0 
 *fill*         0x000000004037a791        0x3 
 .text.spi_flash_chip_generic_read_unique_id_none
                0x000000004037a794        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a794                spi_flash_chip_generic_read_unique_id_none
 *fill*         0x000000004037a79c        0x0 
 *fill*         0x000000004037a79c        0x0 
 *fill*         0x000000004037a79c        0x0 
 .text.spi_flash_common_set_io_mode
                0x000000004037a79c       0x8e zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a79c                spi_flash_common_set_io_mode
 *fill*         0x000000004037a82a        0x0 
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a82a        0x2 
 .text.spi_flash_chip_issi_set_io_mode
                0x000000004037a82c       0x14 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x18 (size before relaxing)
                0x000000004037a82c                spi_flash_chip_issi_set_io_mode
 .text.spi_flash_chip_issi_get_io_mode
                0x000000004037a840       0x1c zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x20 (size before relaxing)
                0x000000004037a840                spi_flash_chip_issi_get_io_mode
 .text.spi_flash_chip_issi_probe
                0x000000004037a85c       0x22 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000004037a85c                spi_flash_chip_issi_probe
 *fill*         0x000000004037a87e        0x2 
 .text.spi_flash_chip_issi_get_caps
                0x000000004037a880        0x7 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000004037a880                spi_flash_chip_issi_get_caps
 *fill*         0x000000004037a887        0x0 
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a887        0x1 
 .text.spi_flash_chip_mxic_detect_size
                0x000000004037a888       0x46 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004037a888                spi_flash_chip_mxic_detect_size
 *fill*         0x000000004037a8ce        0x2 
 .text.spi_flash_chip_mxic_probe
                0x000000004037a8d0       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004037a8d0                spi_flash_chip_mxic_probe
 *fill*         0x000000004037a8f0        0x0 
 .text.spi_flash_chip_mxic_get_caps
                0x000000004037a8f0        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004037a8f0                spi_flash_chip_mxic_get_caps
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a8f7        0x1 
 .text.spi_flash_chip_mxic_opi_detect_size
                0x000000004037a8f8       0x2d zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037a8f8                spi_flash_chip_mxic_opi_detect_size
 *fill*         0x000000004037a925        0x3 
 .text.spi_flash_chip_mxic_opi_set_write_protect
                0x000000004037a928       0x6c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037a928                spi_flash_chip_mxic_opi_set_write_protect
 .text.spi_flash_chip_mxic_opi_erase_chip
                0x000000004037a994       0x84 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037a994                spi_flash_chip_mxic_opi_erase_chip
 .text.spi_flash_chip_mxic_opi_erase_sector
                0x000000004037aa18       0x89 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037aa18                spi_flash_chip_mxic_opi_erase_sector
 *fill*         0x000000004037aaa1        0x3 
 .text.spi_flash_chip_mxic_opi_erase_block
                0x000000004037aaa4       0x89 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037aaa4                spi_flash_chip_mxic_opi_erase_block
 *fill*         0x000000004037ab2d        0x3 
 .text.spi_flash_chip_xmic_opi_config_host_io_mode
                0x000000004037ab30       0x34 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ab30                spi_flash_chip_xmic_opi_config_host_io_mode
 .text.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x000000004037ab64       0x1a zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 *fill*         0x000000004037ab7e        0x2 
 .text.spi_flash_chip_mxic_opi_read_id
                0x000000004037ab80       0xcf zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0xd3 (size before relaxing)
                0x000000004037ab80                spi_flash_chip_mxic_opi_read_id
 *fill*         0x000000004037ac4f        0x1 
 .text.spi_flash_chip_mxic_opi_read_reg
                0x000000004037ac50       0x50 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x54 (size before relaxing)
                0x000000004037ac50                spi_flash_chip_mxic_opi_read_reg
 .text.spi_flash_chip_mxic_opi_get_io_mode
                0x000000004037aca0       0x64 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x68 (size before relaxing)
                0x000000004037aca0                spi_flash_chip_mxic_opi_get_io_mode
 .text.spi_flash_chip_mxic_opi_get_write_protect
                0x000000004037ad04       0x2c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ad04                spi_flash_chip_mxic_opi_get_write_protect
 .text.spi_flash_chip_mxic_opi_write
                0x000000004037ad30       0x82 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ad30                spi_flash_chip_mxic_opi_write
 *fill*         0x000000004037adb2        0x2 
 .text.spi_flash_chip_mxic_opi_page_program
                0x000000004037adb4       0x81 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037adb4                spi_flash_chip_mxic_opi_page_program
 *fill*         0x000000004037ae35        0x3 
 .text.spi_flash_chip_mxic_opi_probe
                0x000000004037ae38       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ae38                spi_flash_chip_mxic_opi_probe
 *fill*         0x000000004037ae58        0x0 
 .text.spi_flash_chip_mxic_opi_get_caps
                0x000000004037ae58        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ae58                spi_flash_chip_mxic_opi_get_caps
 *fill*         0x000000004037ae5f        0x0 
 *fill*         0x000000004037ae5f        0x0 
 *fill*         0x000000004037ae5f        0x1 
 .text.spi_flash_chip_xmic_opi_set_io_mode
                0x000000004037ae60        0x7 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ae60                spi_flash_chip_xmic_opi_set_io_mode
 *fill*         0x000000004037ae67        0x0 
 *fill*         0x000000004037ae67        0x0 
 *fill*         0x000000004037ae67        0x0 
 *fill*         0x000000004037ae67        0x0 
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037ae67        0x1 
 .text.spi_flash_chip_th_probe
                0x000000004037ae68       0x22 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000004037ae68                spi_flash_chip_th_probe
 *fill*         0x000000004037ae8a        0x2 
 .text.spi_flash_chip_th_get_caps
                0x000000004037ae8c        0x7 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000004037ae8c                spi_flash_chip_th_get_caps
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037ae93        0x1 
 .text.spi_flash_chip_winbond_read
                0x000000004037ae94       0xaa zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0xae (size before relaxing)
                0x000000004037ae94                spi_flash_chip_winbond_read
 *fill*         0x000000004037af3e        0x2 
 .text.spi_flash_chip_winbond_erase_block
                0x000000004037af40       0x84 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037af40                spi_flash_chip_winbond_erase_block
 .text.spi_flash_chip_winbond_erase_sector
                0x000000004037afc4       0x84 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037afc4                spi_flash_chip_winbond_erase_sector
 .text.spi_flash_chip_winbond_page_program
                0x000000004037b048       0x64 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b048                spi_flash_chip_winbond_page_program
 *fill*         0x000000004037b0ac        0x0 
 .text.spi_flash_chip_winbond_probe
                0x000000004037b0ac       0x16 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b0ac                spi_flash_chip_winbond_probe
 *fill*         0x000000004037b0c2        0x2 
 .text.spi_flash_chip_winbond_get_caps
                0x000000004037b0c4       0x19 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b0c4                spi_flash_chip_winbond_get_caps
 *fill*         0x000000004037b0dd        0x0 
 *fill*         0x000000004037b0dd        0x0 
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b0dd        0x3 
 .text.memspi_host_read_status_hs
                0x000000004037b0e0       0x38 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b0e0                memspi_host_read_status_hs
 .text.memspi_host_erase_chip
                0x000000004037b118       0x23 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b118                memspi_host_erase_chip
 *fill*         0x000000004037b13b        0x1 
 .text.memspi_host_set_write_protect
                0x000000004037b13c       0x2c zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b13c                memspi_host_set_write_protect
 .text.memspi_host_read_id_hs
                0x000000004037b168       0x8e zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b168                memspi_host_read_id_hs
 *fill*         0x000000004037b1f6        0x2 
 .text.memspi_host_flush_cache
                0x000000004037b1f8       0x19 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b1f8                memspi_host_flush_cache
 *fill*         0x000000004037b211        0x3 
 .text.memspi_host_erase_sector
                0x000000004037b214       0x36 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b214                memspi_host_erase_sector
 *fill*         0x000000004037b24a        0x2 
 .text.memspi_host_erase_block
                0x000000004037b24c       0x36 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b24c                memspi_host_erase_block
 *fill*         0x000000004037b282        0x2 
 .text.memspi_host_program_page
                0x000000004037b284       0x3e zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b284                memspi_host_program_page
 *fill*         0x000000004037b2c2        0x2 
 .text.memspi_host_init_pointers
                0x000000004037b2c4       0x42 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b2c4                memspi_host_init_pointers
 *fill*         0x000000004037b306        0x2 
 .text.memspi_host_write_data_slicer
                0x000000004037b308       0x30 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b308                memspi_host_write_data_slicer
 .text.memspi_host_read_data_slicer
                0x000000004037b338       0x27 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b338                memspi_host_read_data_slicer
 *fill*         0x000000004037b35f        0x0 
 *fill*         0x000000004037b35f        0x0 
 *fill*         0x000000004037b35f        0x0 
 *fill*         0x000000004037b35f        0x0 
 *fill*         0x000000004037b35f        0x0 
 *fill*         0x000000004037b35f        0x0 
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_oct_flash_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b35f        0x1 
 .text.s_probe_mxic_chip
                0x000000004037b360       0x42 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x46 (size before relaxing)
 *fill*         0x000000004037b3a2        0x2 
 .text.s_mxic_set_required_regs
                0x000000004037b3a4       0x1e zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 *fill*         0x000000004037b3c2        0x2 
 .text.s_flash_init_mxic
                0x000000004037b3c4      0x144 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                        0x148 (size before relaxing)
 .text.esp_opiflash_init
                0x000000004037b508       0x67 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                0x000000004037b508                esp_opiflash_init
 *fill*         0x000000004037b56f        0x0 
 *fill*         0x000000004037b56f        0x0 
 *fill*         0x000000004037b56f        0x0 
 *libzephyr.a:flash_ops.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b56f        0x1 
 .text.esp_mspi_get_io
                0x000000004037b570       0x63 zephyr/libzephyr.a(flash_ops.c.obj)
                0x000000004037b570                esp_mspi_get_io
 *fill*         0x000000004037b5d3        0x0 
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.esp_system_abort) SORT_BY_ALIGNMENT(.text.esp_system_abort))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_stall) SORT_BY_ALIGNMENT(.text.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_unstall) SORT_BY_ALIGNMENT(.text.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_reset) SORT_BY_ALIGNMENT(.text.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_wait_for_intr) SORT_BY_ALIGNMENT(.text.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_compare_and_set) SORT_BY_ALIGNMENT(.text.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_reserve_pins) SORT_BY_ALIGNMENT(.text.esp_gpio_reserve_pins))
 *fill*         0x000000004037b5d3        0x1 
 .text.esp_gpio_reserve_pins
                0x000000004037b5d4       0x1c zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                0x000000004037b5d4                esp_gpio_reserve_pins
 *fill*         0x000000004037b5f0        0x0 
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_is_pin_reserved) SORT_BY_ALIGNMENT(.text.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_get_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_set_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.rtc_clk_32k_enable
                0x000000004037b5f0       0xce zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b5f0                rtc_clk_32k_enable
 *fill*         0x000000004037b6be        0x2 
 .text.rtc_clk_32k_enable_external
                0x000000004037b6c0       0x57 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b6c0                rtc_clk_32k_enable_external
 *fill*         0x000000004037b717        0x1 
 .text.rtc_clk_8m_enable
                0x000000004037b718       0x85 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b718                rtc_clk_8m_enable
 *fill*         0x000000004037b79d        0x3 
 .text.rtc_clk_slow_src_set
                0x000000004037b7a0       0x7c zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b7a0                rtc_clk_slow_src_set
 .text.rtc_clk_slow_src_get
                0x000000004037b81c       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b81c                rtc_clk_slow_src_get
 .text.rtc_clk_fast_src_set
                0x000000004037b82c       0x47 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b82c                rtc_clk_fast_src_set
 *fill*         0x000000004037b873        0x1 
 .text.rtc_clk_fast_src_get
                0x000000004037b874       0x10 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b874                rtc_clk_fast_src_get
 .text.rtc_clk_xtal_freq_get
                0x000000004037b884       0x44 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037b884                rtc_get_xtal
                0x000000004037b884                rtc_clk_xtal_freq_get
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x000000004037b8c8       0x53 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x57 (size before relaxing)
                0x000000004037b8c8                rtc_clk_cpu_freq_mhz_to_config
 *fill*         0x000000004037b91b        0x1 
 .text.rtc_clk_cpu_freq_get_config
                0x000000004037b91c       0xb6 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xbe (size before relaxing)
                0x000000004037b91c                rtc_clk_cpu_freq_get_config
 *fill*         0x000000004037b9d2        0x2 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x000000004037b9d4      0x18b zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x19b (size before relaxing)
 *fill*         0x000000004037bb5f        0x1 
 .text.rtc_clk_cpu_freq_to_xtal
                0x000000004037bb60       0xa9 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xb5 (size before relaxing)
                0x000000004037bb60                rtc_clk_cpu_freq_to_xtal
 *fill*         0x000000004037bc09        0x3 
 .text.rtc_clk_cpu_freq_set_config
                0x000000004037bc0c      0x1f7 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x21b (size before relaxing)
                0x000000004037bc0c                rtc_clk_cpu_freq_set_config
 *fill*         0x000000004037be03        0x1 
 .text.rtc_clk_cpu_set_to_default_config
                0x000000004037be04        0xf zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0x13 (size before relaxing)
                0x000000004037be04                rtc_clk_cpu_set_to_default_config
 *fill*         0x000000004037be13        0x1 
 .text.rtc_clk_cpu_freq_set_xtal
                0x000000004037be14       0x25 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037be14                rtc_clk_cpu_freq_set_xtal
 *fill*         0x000000004037be39        0x3 
 .text.rtc_clk_xtal_freq_update
                0x000000004037be3c       0x29 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037be3c                rtc_clk_xtal_freq_update
 *fill*         0x000000004037be65        0x3 
 .text.rtc_clk_apb_freq_update
                0x000000004037be68        0xa zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037be68                rtc_clk_apb_freq_update
 *fill*         0x000000004037be72        0x2 
 .text.rtc_clk_apb_freq_get
                0x000000004037be74        0xa zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037be74                rtc_clk_apb_freq_get
 *fill*         0x000000004037be7e        0x2 
 .text.rtc_clk_divider_set
                0x000000004037be80       0x49 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037be80                rtc_clk_divider_set
 *fill*         0x000000004037bec9        0x3 
 .text.rtc_clk_8m_divider_set
                0x000000004037becc       0x44 zephyr/libzephyr.a(rtc_clk.c.obj)
                0x000000004037becc                rtc_clk_8m_divider_set
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *fill*         0x000000004037bf10        0x0 
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.rtc_clk_init
                0x000000004037bf10      0x132 zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0x156 (size before relaxing)
                0x000000004037bf10                rtc_clk_init
 *libzephyr.a:rtc_sleep.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c042        0x2 
 .text.rtc_sleep_pu
                0x000000004037c044      0x19d zephyr/libzephyr.a(rtc_sleep.c.obj)
                0x000000004037c044                rtc_sleep_pu
 *fill*         0x000000004037c1e1        0x0 
 *libzephyr.a:rtc_time.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c1e1        0x3 
 .text.rtc_clk_cal_internal
                0x000000004037c1e4      0x262 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x266 (size before relaxing)
                0x000000004037c1e4                rtc_clk_cal_internal
 *fill*         0x000000004037c446        0x2 
 .text.rtc_clk_cal
                0x000000004037c448       0xb9 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0xc5 (size before relaxing)
                0x000000004037c448                rtc_clk_cal
 *fill*         0x000000004037c501        0x3 
 .text.rtc_time_us_to_slowclk
                0x000000004037c504       0x27 zephyr/libzephyr.a(rtc_time.c.obj)
                0x000000004037c504                rtc_time_us_to_slowclk
 *fill*         0x000000004037c52b        0x1 
 .text.rtc_time_get
                0x000000004037c52c       0x2a zephyr/libzephyr.a(rtc_time.c.obj)
                0x000000004037c52c                rtc_time_get
 *fill*         0x000000004037c556        0x2 
 .text.rtc_clk_freq_cal
                0x000000004037c558       0x1c zephyr/libzephyr.a(rtc_time.c.obj)
                0x000000004037c558                rtc_clk_freq_cal
 *fill*         0x000000004037c574        0x0 
 *fill*         0x000000004037c574        0x0 
 *fill*         0x000000004037c574        0x0 
 *fill*         0x000000004037c574        0x0 
 *fill*         0x000000004037c574        0x0 
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.systimer_ticks_to_us
                0x000000004037c574       0x11 zephyr/libzephyr.a(systimer.c.obj)
                0x000000004037c574                systimer_ticks_to_us
 *fill*         0x000000004037c585        0x3 
 .text.systimer_us_to_ticks
                0x000000004037c588       0x11 zephyr/libzephyr.a(systimer.c.obj)
                0x000000004037c588                systimer_us_to_ticks
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c599        0x3 
 .text.mspi_timing_config_set_core_clock
                0x000000004037c59c       0x32 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037c59c                mspi_timing_config_set_core_clock
 *fill*         0x000000004037c5ce        0x2 
 .text.mspi_timing_config_set_flash_clock
                0x000000004037c5d0       0x3a zephyr/libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037c5d0                mspi_timing_config_set_flash_clock
 *fill*         0x000000004037c60a        0x2 
 .text.mspi_timing_config_set_psram_clock
                0x000000004037c60c       0x33 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037c60c                mspi_timing_config_set_psram_clock
 *fill*         0x000000004037c63f        0x1 
 .text.mspi_timing_config_get_core_clock
                0x000000004037c640        0x7 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037c640                mspi_timing_config_get_core_clock
 *fill*         0x000000004037c647        0x0 
 *fill*         0x000000004037c647        0x0 
 *fill*         0x000000004037c647        0x0 
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c647        0x1 
 .text.mspi_timing_set_pin_drive_strength
                0x000000004037c648       0x65 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037c648                mspi_timing_set_pin_drive_strength
 *fill*         0x000000004037c6ad        0x3 
 .text.mspi_timing_enter_low_speed_mode
                0x000000004037c6b0       0x2a zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x32 (size before relaxing)
                0x000000004037c6b0                mspi_timing_enter_low_speed_mode
 *fill*         0x000000004037c6da        0x2 
 .text.mspi_timing_enter_high_speed_mode
                0x000000004037c6dc       0x2e zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x3a (size before relaxing)
                0x000000004037c6dc                mspi_timing_enter_high_speed_mode
 *fill*         0x000000004037c70a        0x2 
 .text.mspi_timing_change_speed_mode_cache_safe
                0x000000004037c70c       0x2f zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x3e (size before relaxing)
                0x000000004037c70c                mspi_timing_change_speed_mode_cache_safe
 *fill*         0x000000004037c73b        0x1 
 .text.spi_timing_get_flash_timing_param
                0x000000004037c73c        0x9 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037c73c                spi_timing_get_flash_timing_param
 *fill*         0x000000004037c745        0x0 
 *fill*         0x000000004037c745        0x3 
 .text.mspi_timing_flash_tuning
                0x000000004037c748        0x5 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037c748                mspi_timing_flash_tuning
 *fill*         0x000000004037c74d        0x0 
 *fill*         0x000000004037c74d        0x0 
 *fill*         0x000000004037c74d        0x0 
 *fill*         0x000000004037c74d        0x3 
 .text.spi_timing_is_tuned
                0x000000004037c750        0x7 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037c750                spi_timing_is_tuned
 *fill*         0x000000004037c757        0x0 
 *libzephyr.a:regi2c_ctrl.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.sar_periph_ctrl_power_enable) SORT_BY_ALIGNMENT(.text.sar_periph_ctrl_power_enable))
 *(SORT_BY_ALIGNMENT(.literal.GPIO_HOLD_MASK) SORT_BY_ALIGNMENT(.text.GPIO_HOLD_MASK))
 *libzephyr.a:esp_rom_cache_esp32s2_esp32s3.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c757        0x1 
 .text.Cache_Suspend_ICache
                0x000000004037c758       0x1b zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037c758                Cache_Suspend_ICache
 *fill*         0x000000004037c773        0x1 
 .text.Cache_Suspend_DCache
                0x000000004037c774       0x1b zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037c774                Cache_Suspend_DCache
 *fill*         0x000000004037c78f        0x1 
 .text.Cache_Freeze_ICache_Enable
                0x000000004037c790       0x1c zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037c790                Cache_Freeze_ICache_Enable
 .text.Cache_Freeze_DCache_Enable
                0x000000004037c7ac       0x1c zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037c7ac                Cache_Freeze_DCache_Enable
 *fill*         0x000000004037c7c8        0x0 
 *fill*         0x000000004037c7c8        0x0 
 *fill*         0x000000004037c7c8        0x0 
 *libzephyr.a:cache_utils.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.spi_flash_init_lock
                0x000000004037c7c8        0x5 zephyr/libzephyr.a(cache_utils.c.obj)
                0x000000004037c7c8                spi_flash_init_lock
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c7cd        0x3 
 .text.esp_rom_opiflash_cache_mode_config
                0x000000004037c7d0       0xea zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                0x000000004037c7d0                esp_rom_opiflash_cache_mode_config
 *fill*         0x000000004037c8ba        0x0 
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_rom_efuse.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c8ba        0x2 
 .text.esp_rom_efuse_get_opiconfig
                0x000000004037c8bc       0x46 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
                0x000000004037c8bc                esp_rom_efuse_get_opiconfig
 *fill*         0x000000004037c902        0x0 
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
                0x000000004037c904                . = ALIGN (0x4)
 *fill*         0x000000004037c902        0x2 

.loader.text    0x000000004037c904      0x4fc load address 0x0000000000008904
                0x000000004037c904                . = ALIGN (0x4)
                0x000000004037c904                _loader_text_start = ABSOLUTE (.)
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.bootloader_clock_configure
                0x000000004037c904       0x1c zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                         0x28 (size before relaxing)
 .literal.get_flash_clock_divider
                0x000000004037c920       0x2c zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x4c (size before relaxing)
 .literal.spi_flash_hal_init
                0x000000004037c94c       0x18 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_write
                0x000000004037c964        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_read
                0x000000004037c964        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_read_chip_id
                0x000000004037c964        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_init_default_chip
                0x000000004037c964       0x34 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x58 (size before relaxing)
 .literal.esp_flash_app_init
                0x000000004037c998        0x8 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_cpu_configure_region_protection
                0x000000004037c9a0        0x8 zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                         0x10 (size before relaxing)
 .text.bootloader_clock_configure
                0x000000004037c9a8       0xa0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                         0xa8 (size before relaxing)
                0x000000004037c9a8                bootloader_clock_configure
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_flash_config_esp32s3.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_clock_loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_sha.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_image_format.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encrypt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encryption_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_partitions.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_qio_mode.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.get_flash_clock_divider
                0x000000004037ca48       0xa4 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0xb0 (size before relaxing)
 .text.spi_flash_hal_init
                0x000000004037caec      0x16d zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                        0x171 (size before relaxing)
                0x000000004037caec                spi_flash_hal_init
 *fill*         0x000000004037cc59        0x3 
 .text.spi_flash_hal_supports_direct_write
                0x000000004037cc5c       0x14 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                0x000000004037cc5c                spi_flash_hal_supports_direct_write
 .text.spi_flash_hal_supports_direct_read
                0x000000004037cc70       0x14 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                0x000000004037cc70                spi_flash_hal_supports_direct_read
 *fill*         0x000000004037cc84        0x0 
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_read_chip_id
                0x000000004037cc84       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037cc84                esp_flash_read_chip_id
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_init_default_chip
                0x000000004037cc94       0xde zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0xf2 (size before relaxing)
                0x000000004037cc94                esp_flash_init_default_chip
 *fill*         0x000000004037cd72        0x2 
 .text.esp_flash_app_init
                0x000000004037cd74       0x1b zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x1f (size before relaxing)
                0x000000004037cd74                esp_flash_app_init
 *fill*         0x000000004037cd8f        0x0 
 *libzephyr.a:secure_boot.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_signatures_bootloader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_table.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_fields.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_api_key_esp32xx.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mpu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037cd8f        0x1 
 .text.mpu_hal_set_region_access
                0x000000004037cd90       0x3d zephyr/libzephyr.a(mpu_hal.c.obj)
                0x000000004037cd90                mpu_hal_set_region_access
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037cdcd        0x3 
 .text.esp_cpu_configure_region_protection
                0x000000004037cdd0       0x2f zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                         0x33 (size before relaxing)
                0x000000004037cdd0                esp_cpu_configure_region_protection
 *fill*         0x000000004037cdff        0x0 
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
                0x000000004037ce00                . = ALIGN (0x4)
 *fill*         0x000000004037cdff        0x1 
                0x000000004037ce00                _loader_text_end = ABSOLUTE (.)

.iram0.text_end
                0x000000004037ce00       0x10 load address 0x0000000000008e00
                0x000000004037ce10                . = (ALIGN (0x4) + 0x10)
 *fill*         0x000000004037ce00       0x10 
                0x000000004037ce10                _iram_text_end = ABSOLUTE (.)

.iram0.data     0x000000004037ce10        0x0 load address 0x0000000000008e00
                0x000000004037ce10                . = ALIGN (0x4)
                0x000000004037ce10                _iram_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram.data))
 *(SORT_BY_ALIGNMENT(.iram.data*))
                0x000000004037ce10                _iram_data_end = ABSOLUTE (.)

.iram0.bss      0x000000004037ce10        0x0 load address 0x0000000000008e00
                0x000000004037ce10                . = ALIGN (0x4)
                0x000000004037ce10                _iram_bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram.bss))
 *(SORT_BY_ALIGNMENT(.iram.bss*))
                0x000000004037ce10                _iram_bss_end = ABSOLUTE (.)
                0x000000004037ce10                . = ALIGN (0x4)
                0x000000004037ce10                _iram_end = ABSOLUTE (.)

.dram0.dummy    0x000000003fc88000     0x4e10
                0x000000003fc8ce10                . = (ORIGIN (dram0_0_seg) + (MAX (_iram_end, 0x40378000) - 0x40378000))
 *fill*         0x000000003fc88000     0x4e10 
                0x000000003fc8ce10                . = ALIGN (0x10)

.dram0.data     0x000000003fc8ce10     0x1110 load address 0x0000000000008e00
                0x000000003fc8ce10                . = ALIGN (0x8)
                0x000000003fc8ce10                _data_start = ABSOLUTE (.)
                0x000000003fc8ce10                __data_start = ABSOLUTE (.)
                0x000000003fc8ce10                _btdm_data_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.data.*))
                0x000000003fc8ce10                . = ALIGN (0x4)
                0x000000003fc8ce10                _btdm_data_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data.state$0  0x000000003fc8ce10        0x8 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .data._char_out
                0x000000003fc8ce18        0x4 zephyr/libzephyr.a(printk.c.obj)
 .data.map      0x000000003fc8ce1c       0x18 zephyr/libzephyr.a(loader.c.obj)
 .data.rom_func$0
                0x000000003fc8ce34       0x34 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data.registered_chip_funcs
                0x000000003fc8ce68        0x8 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data.esp_flash_registered_chips
                0x000000003fc8ce70        0x4 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                0x000000003fc8ce70                esp_flash_registered_chips
 .data.default_registered_chips
                0x000000003fc8ce74       0x24 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data.g_rtc_dbias_pvt_non_240m
                0x000000003fc8ce98        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8ce98                g_rtc_dbias_pvt_non_240m
 .data.g_dig_dbias_pvt_non_240m
                0x000000003fc8ce9c        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8ce9c                g_dig_dbias_pvt_non_240m
 .data.g_rtc_dbias_pvt_240m
                0x000000003fc8cea0        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8cea0                g_rtc_dbias_pvt_240m
 .data.g_dig_dbias_pvt_240m
                0x000000003fc8cea4        0x4 zephyr/libzephyr.a(rtc_init.c.obj)
                0x000000003fc8cea4                g_dig_dbias_pvt_240m
 .data.s_log_print_func
                0x000000003fc8cea8        0x4 zephyr/libzephyr.a(log.c.obj)
 .data.esp_log_default_level
                0x000000003fc8ceac        0x4 zephyr/libzephyr.a(log.c.obj)
                0x000000003fc8ceac                esp_log_default_level
 .data.current_read_mapping
                0x000000003fc8ceb0        0x4 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .data.__stdout
                0x000000003fc8ceb4       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .data.gpio_config_1
                0x000000003fc8cec4       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003fc8ced4       0x10 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003fc8cee4        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.slice_ticks
                0x000000003fc8cef0        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .data.timeout_list
                0x000000003fc8cef4        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *(SORT_BY_ALIGNMENT(.srodata))
 *(SORT_BY_ALIGNMENT(.srodata.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.levels$0
                0x000000003fc8cefc       0x18 zephyr/kernel/libkernel.a(init.c.obj)
 .rodata.z_cstart.str1.1
                0x000000003fc8cf14        0x5 zephyr/kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_minimal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8cf19        0x3 
 .rodata.libc_heap_size
                0x000000003fc8cf1c        0x4 zephyr/libzephyr.a(loader.c.obj)
 .rodata.map_rom_segments.str1.1
                0x000000003fc8cf20       0xcd zephyr/libzephyr.a(loader.c.obj)
 .rodata.__start.str1.1
                0x000000003fc8cfed       0x98 zephyr/libzephyr.a(loader.c.obj)
 *libzephyr.a:flash_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_config.str1.1
                0x000000003fc8d085       0x36 zephyr/libzephyr.a(flash_init.c.obj)
 *libzephyr.a:soc_flash_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d0bb        0x1 
 .rodata.init_spi_flash
                0x000000003fc8d0bc       0x20 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .rodata.CSWTCH$14
                0x000000003fc8d0dc       0x20 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .rodata.CSWTCH$13
                0x000000003fc8d0fc       0x40 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .rodata.init_spi_flash.str1.1
                0x000000003fc8d13c       0x86 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x95 (size before relaxing)
 .rodata.str1.1
                0x000000003fc8d1c2       0x33 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x3b (size before relaxing)
 *libzephyr.a:console_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:soc_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d1f5        0x3 
 .rodata        0x000000003fc8d1f8        0x8 zephyr/libzephyr.a(soc_init.c.obj)
 .rodata.print_banner.str1.1
                0x000000003fc8d200       0x72 zephyr/libzephyr.a(soc_init.c.obj)
 .rodata.read_bootloader_header.str1.1
                0x000000003fc8d272       0x34 zephyr/libzephyr.a(soc_init.c.obj)
 .rodata.check_bootloader_validity.str1.1
                0x000000003fc8d2a6       0x98 zephyr/libzephyr.a(soc_init.c.obj)
 .rodata.wdt_reset_info_dump.str1.1
                0x000000003fc8d33e       0x35 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x3e (size before relaxing)
 .rodata.check_wdt_reset.str1.1
                0x000000003fc8d373       0x2b zephyr/libzephyr.a(soc_init.c.obj)
 *libzephyr.a:hw_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.hardware_init.str1.1
                0x000000003fc8d39e       0x42 zephyr/libzephyr.a(hw_init.c.obj)
 *libzephyr.a:soc_random.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata        0x000000003fc8d3e0       0x28 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_dev_config__device_dts_ord_74
                0x000000003fc8d408        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_74
                0x000000003fc8d410        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_74
                0x000000003fc8d418       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.str1.1
                0x000000003fc8d428        0xe zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_mmu_map.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libdrivers__interrupt_controller.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.CSWTCH$60
                0x000000003fc8d436        0x6 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *libzephyr.a:esp32s3-mp.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.CSWTCH$65
                0x000000003fc8d43c        0x6 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.bootloader_mmap.str1.1
                0x000000003fc8d442       0x64 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .rodata.esp_rom_flash_read.str1.1
                0x000000003fc8d4a6       0xc1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 *libzephyr.a:flash_mmap.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:efuse_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d567        0x1 
 .rodata.spi_flash_hal_configure_host_io_mode
                0x000000003fc8d568       0x48 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_gpspi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.spi_flash_hal_gpspi_configure_host_io_mode
                0x000000003fc8d5b0       0x18 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_write))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_chip_boya
                0x000000003fc8d5c8       0x7c zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                0x000000003fc8d5c8                esp_flash_chip_boya
 .rodata.chip_name
                0x000000003fc8d644        0x5 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d649        0x3 
 .rodata.esp_flash_chip_gd
                0x000000003fc8d64c       0x7c zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                0x000000003fc8d64c                esp_flash_chip_gd
 .rodata.chip_name
                0x000000003fc8d6c8        0x3 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d6cb        0x1 
 .rodata.spi_flash_chip_generic_config_host_io_mode
                0x000000003fc8d6cc       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.esp_flash_chip_generic
                0x000000003fc8d6e4       0x7c zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8d6e4                esp_flash_chip_generic
 .rodata.spi_flash_chip_generic_read.str1.1
                0x000000003fc8d760       0x38 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_read_unique_id.str1.1
                0x000000003fc8d798       0x47 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_suspend_cmd_conf.str1.1
                0x000000003fc8d7df       0x54 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.chip_name
                0x000000003fc8d833        0x8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.TAG    0x000000003fc8d83b        0xd zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_chip_issi
                0x000000003fc8d848       0x7c zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000003fc8d848                esp_flash_chip_issi
 .rodata.chip_name
                0x000000003fc8d8c4        0x5 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d8c9        0x3 
 .rodata.esp_flash_chip_mxic
                0x000000003fc8d8cc       0x7c zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000003fc8d8cc                esp_flash_chip_mxic
 .rodata.chip_name
                0x000000003fc8d948        0x5 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d94d        0x3 
 .rodata.esp_flash_chip_mxic_opi
                0x000000003fc8d950       0x7c zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000003fc8d950                esp_flash_chip_mxic_opi
 .rodata.spi_flash_chip_mxic_opi_read_id.str1.1
                0x000000003fc8d9cc       0x19 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .rodata.chip_name
                0x000000003fc8d9cc        0xb zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8d9d7        0x1 
 .rodata.esp_flash_chip_th
                0x000000003fc8d9d8       0x7c zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000003fc8d9d8                esp_flash_chip_th
 .rodata.chip_name
                0x000000003fc8da54        0x3 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8da57        0x1 
 .rodata.esp_flash_chip_winbond
                0x000000003fc8da58       0x7c zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000003fc8da58                esp_flash_chip_winbond
 .rodata.spi_flash_chip_winbond_read.str1.1
                0x000000003fc8dad4       0x38 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.chip_name
                0x000000003fc8dad4        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.TAG    0x000000003fc8dadc        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_gpspi_host
                0x000000003fc8dae4       0x58 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .rodata.memspi_host_read_id_hs.str1.1
                0x000000003fc8db3c       0x19 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .rodata.TAG    0x000000003fc8db55        0x7 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_oct_flash_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.opiflash_cmd_def_mxic$1
                0x000000003fc8db5c       0x5c zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.opi_flash_func_mxic
                0x000000003fc8dbb8        0xc zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.s_probe_mxic_chip.str1.1
                0x000000003fc8dbc4       0x4a zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.esp_opiflash_init.str1.1
                0x000000003fc8dc0e       0x60 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 *libzephyr.a:flash_qio_mode.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:flash_ops.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.s_mspi_io_num_default
                0x000000003fc8dc6e        0xb zephyr/libzephyr.a(flash_ops.c.obj)
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_reserve_pins))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_xtal_freq_get.str1.1
                0x000000003fc8dc79       0x42 zephyr/libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003fc8dcbb       0x30 zephyr/libzephyr.a(rtc_clk.c.obj)
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_init.str1.1
                0x000000003fc8dceb       0x35 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata        0x000000003fc8dd20       0x24 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 *(SORT_BY_ALIGNMENT(.rodata.sar_periph_ctrl_power_enable))
 *(SORT_BY_ALIGNMENT(.rodata.GPIO_HOLD_MASK))
 *libzephyr.a:esp_rom_cache_esp32s2_esp32s3.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:cache_utils.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_efuse.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_system_abort))
                0x000000003fc8dd44                . = ALIGN (0x4)
                0x000000003fc8dd44                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 .dram1.2       0x000000003fc8dd44        0x4 zephyr/libzephyr.a(esp_flash_api.c.obj)
                0x000000003fc8dd44                rom_spiflash_api_funcs
 .dram1.1       0x000000003fc8dd48       0x10 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.2       0x000000003fc8dd58       0x20 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.1       0x000000003fc8dd78       0x28 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.0       0x000000003fc8dda0        0x8 zephyr/libzephyr.a(flash_ops.c.obj)
                0x000000003fc8dda0                g_flash_guard_default_ops
 .dram1.0       0x000000003fc8dda8       0x58 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .dram1.5       0x000000003fc8de00       0x14 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8de00                spi_flash_chip_generic_timeout
 .dram1.4       0x000000003fc8de14       0x18 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.3       0x000000003fc8de2c        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8de2c                rom_flash_chip_dummy_hpm
 .dram1.2       0x000000003fc8de30        0x4 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8de30                rom_flash_chip_dummy
 .dram1.4       0x000000003fc8de34       0x28 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                0x000000003fc8de34                esp_flash_noos_functions
 .dram1.11      0x000000003fc8de5c       0x28 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .dram1.10      0x000000003fc8de84       0x10 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .dram1.3       0x000000003fc8de94        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.2       0x000000003fc8de98        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.1       0x000000003fc8de9c        0x4 zephyr/libzephyr.a(rtc_module.c.obj)
 .dram1.0       0x000000003fc8dea0       0x1c zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.0       0x000000003fc8debc        0xa zephyr/libzephyr.a(esp_flash_api.c.obj)
 .dram1.1       0x000000003fc8dec6        0x6 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.0       0x000000003fc8decc        0x6 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.11      0x000000003fc8ded2       0x1e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .dram1.10      0x000000003fc8def0       0x1e zephyr/libzephyr.a(bootloader_flash.c.obj)
 .dram1.5       0x000000003fc8df0e       0x11 zephyr/libzephyr.a(bootloader_flash.c.obj)
                0x000000003fc8df20                . = ALIGN (0x4)
 *fill*         0x000000003fc8df1f        0x1 

.loader.data    0x000000003fc8df20      0x3bc load address 0x0000000000009f10
                0x000000003fc8df20                . = ALIGN (0x4)
                0x000000003fc8df20                _loader_data_start = ABSOLUTE (.)
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata        0x000000003fc8df20        0x8 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:cpu_util.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata        0x000000003fc8df28       0x14 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.get_flash_clock_divider.str1.1
                0x000000003fc8df3c       0x77 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.str1.1
                0x000000003fc8dfb3      0x103 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_read_unique_chip_id.str1.1
                0x000000003fc8e0b6       0x79 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .rodata.io_mode_str
                0x000000003fc8e12f       0xb4 zephyr/libzephyr.a(esp_flash_api.c.obj)
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.esp_flash_init_default_chip.str1.1
                0x000000003fc8e1e3       0xea zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.CSWTCH$35
                0x000000003fc8e2cd        0x4 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.TAG    0x000000003fc8e2d1        0xa zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003fc8e2dc                . = ALIGN (0x4)
 *fill*         0x000000003fc8e2db        0x1 
                0x000000003fc8e2dc                _loader_data_end = ABSOLUTE (.)

sw_isr_table    0x000000003fc8e2dc      0x100 load address 0x000000000000a2cc
                0x000000003fc8e2dc                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003fc8e2dc      0x100 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003fc8e2dc                _sw_isr_table

device_states   0x000000003fc8e3dc        0x8 load address 0x000000000000a3cc
                0x000000003fc8e3dc                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003fc8e3dc        0x2 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003fc8e3de        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003fc8e3e2        0x2 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003fc8e3e4                __device_states_end = .

log_mpsc_pbuf_area
                0x000000003fc8e3e4        0x0 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
                0x000000003fc8e3e4                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x000000003fc8e3e4        0x0 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
                0x000000003fc8e3e4                _log_msg_ptr_list_end = .

log_dynamic_area
                0x000000003fc8e3e4        0x0 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x000000003fc8e3e4                _log_dynamic_list_end = .

k_timer_area    0x000000003fc8e3e4        0x0 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003fc8e3e4                _k_timer_list_end = .

k_mem_slab_area
                0x000000003fc8e3e4        0x0 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003fc8e3e4                _k_mem_slab_list_end = .

k_heap_area     0x000000003fc8e3e4       0x14 load address 0x000000000000a3d4
                0x000000003fc8e3e4                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._system_heap_
                0x000000003fc8e3e4       0x14 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003fc8e3e4                _system_heap
                0x000000003fc8e3f8                _k_heap_list_end = .

k_mutex_area    0x000000003fc8e3f8        0x0 load address 0x000000000000a3e8
                0x000000003fc8e3f8                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
                0x000000003fc8e3f8                _k_mutex_list_end = .

k_stack_area    0x000000003fc8e3f8        0x0 load address 0x000000000000a3e8
                0x000000003fc8e3f8                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003fc8e3f8                _k_stack_list_end = .

k_msgq_area     0x000000003fc8e3f8       0x50 load address 0x000000000000a3e8
                0x000000003fc8e3f8                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
 ._k_msgq.static.action_queue_
                0x000000003fc8e3f8       0x28 app/libapp.a(main.c.obj)
                0x000000003fc8e3f8                action_queue
 ._k_msgq.static.sensor_queue_
                0x000000003fc8e420       0x28 app/libapp.a(main.c.obj)
                0x000000003fc8e420                sensor_queue
                0x000000003fc8e448                _k_msgq_list_end = .

k_mbox_area     0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003fc8e448                _k_mbox_list_end = .

k_pipe_area     0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003fc8e448                _k_pipe_list_end = .

k_sem_area      0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x000000003fc8e448                _k_sem_list_end = .

k_event_area    0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003fc8e448                _k_event_list_end = .

k_queue_area    0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003fc8e448                _k_queue_list_end = .

k_fifo_area     0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x000000003fc8e448                _k_fifo_list_end = .

k_lifo_area     0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x000000003fc8e448                _k_lifo_list_end = .

k_condvar_area  0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003fc8e448                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x000000003fc8e448                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003fc8e448                _net_buf_pool_list_end = .

log_strings_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x000000003fc8e448                _log_strings_list_end = .

log_stmesp_ptr_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_stmesp_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_stmesp_ptr.static.*)))
                0x000000003fc8e448                _log_stmesp_ptr_list_end = .

log_stmesp_str_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_stmesp_str_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_stmesp_str.static.*)))
                0x000000003fc8e448                _log_stmesp_str_list_end = .

log_const_area  0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
                0x000000003fc8e448                _log_const_list_end = .

log_backend_area
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
                0x000000003fc8e448                _log_backend_list_end = .

log_link_area   0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x000000003fc8e448                _log_link_list_end = .

.dram0.data_end
                0x000000003fc8e448        0x0 load address 0x000000000000a438
                0x000000003fc8e448                __data_end = ABSOLUTE (.)
                0x000000003fc8e448                _data_end = ABSOLUTE (.)

.dram0.noinit   0x000000003fc8e450     0x3028 load address 0x000000000000a438
                0x000000003fc8e450                . = ALIGN (0x4)
                0x000000003fc8e450                __dram_noinit_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/maze/src/main.c".2
                0x000000003fc8e450      0x400 app/libapp.a(main.c.obj)
                0x000000003fc8e450                _k_thread_stack_actuator_tid
 .noinit."WEST_TOPDIR/maze/src/main.c".1
                0x000000003fc8e850      0x400 app/libapp.a(main.c.obj)
                0x000000003fc8e850                _k_thread_stack_ai_tid
 .noinit."WEST_TOPDIR/maze/src/main.c".0
                0x000000003fc8ec50      0x400 app/libapp.a(main.c.obj)
                0x000000003fc8ec50                _k_thread_stack_sensor_tid
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003fc8f050      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc8f050                z_interrupt_stacks
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003fc8f850      0x400 zephyr/kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x000000003fc8fc50      0x800 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc8fc50                z_main_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/mempool.c".kheap_buf__system_heap
                0x000000003fc90450     0x1000 zephyr/kernel/libkernel.a(mempool.c.obj)
                0x000000003fc90450                kheap__system_heap
 .noinit."WEST_TOPDIR/maze/src/main.c".4
                0x000000003fc91450       0x14 app/libapp.a(main.c.obj)
 .noinit."WEST_TOPDIR/maze/src/main.c".3
                0x000000003fc91464       0x14 app/libapp.a(main.c.obj)
                0x000000003fc91478                __dram_noinit_end = ABSOLUTE (.)
                0x000000003fc91478                . = ALIGN (0x4)

.dram0.bss      0x000000003fc91478      0x498 load address 0x000000000000a438
                0x000000003fc91478                . = ALIGN (0x8)
                0x000000003fc91478                _bss_start = ABSOLUTE (.)
                0x000000003fc91478                __bss_start = ABSOLUTE (.)
                0x000000003fc91478                _btdm_bss_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*) SORT_BY_ALIGNMENT(COMMON))
                0x000000003fc91478                . = ALIGN (0x4)
                0x000000003fc91478                _btdm_bss_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss._k_thread_obj_actuator_tid
                0x000000003fc91478       0x60 app/libapp.a(main.c.obj)
                0x000000003fc91478                _k_thread_obj_actuator_tid
 .bss._k_thread_obj_ai_tid
                0x000000003fc914d8       0x60 app/libapp.a(main.c.obj)
                0x000000003fc914d8                _k_thread_obj_ai_tid
 .bss._k_thread_obj_sensor_tid
                0x000000003fc91538       0x60 app/libapp.a(main.c.obj)
                0x000000003fc91538                _k_thread_obj_sensor_tid
 .bss.s_reserve_status
                0x000000003fc91598        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .bss.z_idle_threads
                0x000000003fc915a0       0x60 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc915a0                z_idle_threads
 .bss.z_main_thread
                0x000000003fc91600       0x60 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc91600                z_main_thread
 .bss._thread_dummy
                0x000000003fc91660       0x60 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003fc91660                _thread_dummy
 .bss.slice_timeouts
                0x000000003fc916c0       0x18 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss.curr_tick
                0x000000003fc916d8        0x8 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.agent_pos
                0x000000003fc916e0        0x8 app/libapp.a(main.c.obj)
 .bss.bootloader_image_hdr
                0x000000003fc916e8       0x18 zephyr/libzephyr.a(loader.c.obj)
                0x000000003fc916e8                bootloader_image_hdr
 .bss.s_chip_func
                0x000000003fc91700        0x4 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss.s_chip_id
                0x000000003fc91704        0x4 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss.esp_flash_default_chip
                0x000000003fc91708        0x4 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003fc91708                esp_flash_default_chip
 .bss.s_flash_guard_ops
                0x000000003fc9170c        0x4 zephyr/libzephyr.a(flash_ops.c.obj)
 .bss.s_calibrated_freq
                0x000000003fc91710        0x8 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .bss.s_bbpll_digi_consumers_ref_count
                0x000000003fc91718        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_apb_freq
                0x000000003fc9171c        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_cur_pll_freq
                0x000000003fc91720        0x4 zephyr/libzephyr.a(rtc_clk.c.obj)
 .bss.s_mmu_ctx
                0x000000003fc91724       0x2c zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .bss.s_reset_reason
                0x000000003fc91750        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .bss.systimer_hal
                0x000000003fc91754        0xc zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.ctx       0x000000003fc91760        0x8 zephyr/libzephyr.a(cache_hal.c.obj)
 .bss.s_lock    0x000000003fc91768        0x4 zephyr/libzephyr.a(log_noos.c.obj)
 .bss.s_log_cache_misses
                0x000000003fc9176c        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x000000003fc91770        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x000000003fc91774        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x000000003fc91778       0xf8 zephyr/libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x000000003fc91870        0x4 zephyr/libzephyr.a(log.c.obj)
 .bss.s_intr_saved_state
                0x000000003fc91874        0x4 zephyr/libzephyr.a(cache_utils.c.obj)
 .bss._stdout_hook
                0x000000003fc91878        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .bss.z_malloc_heap
                0x000000003fc9187c        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss.non_iram_int_disabled
                0x000000003fc91888        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_mask
                0x000000003fc9188c        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003fc91890        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003fc91894        0x4 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.gpio_data_1
                0x000000003fc91898        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003fc918a4        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003fc918b0        0x4 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._kernel   0x000000003fc918b4       0x20 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc918b4                _kernel
 .bss.slice_max_prio
                0x000000003fc918d4        0x4 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .bss.announce_remaining
                0x000000003fc918d8        0x4 zephyr/kernel/libkernel.a(timeout.c.obj)
 .bss.ref_counts
                0x000000003fc918dc       0x29 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .bss.non_iram_int_disabled_flag
                0x000000003fc91905        0x1 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.isr_connected$0
                0x000000003fc91906        0x1 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003fc91907        0x1 zephyr/kernel/libkernel.a(init.c.obj)
                0x000000003fc91907                z_sys_post_kernel
 .bss._sched_spinlock
                0x000000003fc91908        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
                0x000000003fc91908                _sched_spinlock
 .bss.slice_expired
                0x000000003fc91908        0x1 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003fc91910                . = ALIGN (0x8)
 *fill*         0x000000003fc91909        0x7 
                0x000000003fc91910                _bss_end = ABSOLUTE (.)
                0x000000003fc91910                __bss_end = ABSOLUTE (.)
                0x000000003fc84000                _image_ram_start = (_init_start - 0x6f0000)

.last_ram_section
                0x000000003fc91910        0x0 load address 0x000000000000a438
                0x000000003fc91910                _image_ram_end = .
                0x000000000000d910                _image_ram_size = (_image_ram_end - _image_ram_start)
                0x000000003fc91910                _end = .
                0x000000003fc91910                z_mapped_end = .
                0x0000000000000001                ASSERT (((_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)
                0x0000000000010000                _image_irom_start = LOADADDR (.flash.text)
                0x0000000000003a1e                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x0000000042000000                _image_irom_vaddr = ADDR (.flash.text)

.flash.text_dummy
                0x000000000000a438     0x5bc8
                0x0000000000010000                . = ALIGN (0x10000)
 *fill*         0x000000000000a438     0x5bc8 

.flash.text     0x0000000042000000     0x3a1e load address 0x0000000000010000
                0x0000000042000000                _stext = .
                0x0000000042000000                _instruction_reserved_start = ABSOLUTE (.)
                0x0000000042000000                _text_start = ABSOLUTE (.)
                0x0000000042000000                __text_region_start = ABSOLUTE (.)
                0x0000000042000000                __rom_region_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiextrairam) SORT_BY_ALIGNMENT(.wifiextrairam.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiorslpiram) SORT_BY_ALIGNMENT(.wifiorslpiram.*) SORT_BY_ALIGNMENT(.wifiextrairam) SORT_BY_ALIGNMENT(.wifiextrairam.*))
 *libcoexist.a:(SORT_BY_ALIGNMENT(.wifi_slp_iram) SORT_BY_ALIGNMENT(.wifi_slp_iram.*) SORT_BY_ALIGNMENT(.coexiram) SORT_BY_ALIGNMENT(.coexiram.*) SORT_BY_ALIGNMENT(.coexsleepiram) SORT_BY_ALIGNMENT(.coexsleepiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.stub) SORT_BY_ALIGNMENT(.gnu.warning) SORT_BY_ALIGNMENT(.gnu.linkonce.literal.*) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*.literal) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*))
 *(SORT_BY_ALIGNMENT(.irom0.text))
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
 *(SORT_BY_ALIGNMENT(.gnu.version))
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.actuator_thread
                0x0000000042000000       0x18 app/libapp.a(main.c.obj)
 .literal.sensor_thread
                0x0000000042000018        0xc app/libapp.a(main.c.obj)
                                         0x14 (size before relaxing)
 .literal.ai_thread
                0x0000000042000024        0x0 app/libapp.a(main.c.obj)
                                         0x1c (size before relaxing)
 .literal.main  0x0000000042000024        0x4 app/libapp.a(main.c.obj)
                                          0x8 (size before relaxing)
 .literal.chunk_field
                0x0000000042000028        0x4 zephyr/libzephyr.a(heap.c.obj)
 .literal.chunk_set
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.chunk_size
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_used
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_size
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.mem_to_chunkid
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.bucket_idx$isra$0
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.free_list_remove_bidx
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.free_list_remove
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.alloc_chunk
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.split_chunks
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.merge_chunks
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.free_list_add
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x24 (size before relaxing)
 .literal.free_chunk
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.sys_heap_free
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_heap_alloc
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.sys_heap_noalign_alloc
                0x000000004200002c        0x0 zephyr/libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_heap_init
                0x000000004200002c        0x8 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.__printk_hook_install
                0x0000000042000034        0x4 zephyr/libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x0000000042000038        0x8 zephyr/libzephyr.a(thread_entry.c.obj)
 .literal.esp_flash_app_enable_os_functions
                0x0000000042000040        0x8 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_set_hw_flow_ctrl
                0x0000000042000048        0xc zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x0000000042000054        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x0000000042000058        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x000000004200005c        0x4 zephyr/libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_rx_timeout
                0x0000000042000060        0x8 zephyr/libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_txfifo_rst
                0x0000000042000068        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.uart_hal_rxfifo_rst
                0x000000004200006c        0x4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .literal.esp_clk_slowclk_cal_set
                0x0000000042000070        0x4 zephyr/libzephyr.a(esp_clk.c.obj)
 .literal.periph_ll_get_rst_en_mask
                0x0000000042000074        0x4 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_enable
                0x0000000042000078       0x18 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x20 (size before relaxing)
 .literal.periph_module_disable
                0x0000000042000090        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x20 (size before relaxing)
 .literal.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x0000000042000090       0x10 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_clk_tree_xtal32k_get_freq_hz
                0x00000000420000a0        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_lp_slow_get_freq_hz
                0x00000000420000a0        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_rc_fast_get_freq_hz
                0x00000000420000a0        0x4 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_tree_lp_fast_get_freq_hz
                0x00000000420000a4        0x8 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_cpu_intr_get_desc
                0x00000000420000ac        0x4 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_tree_src_get_freq_hz
                0x00000000420000b0       0x30 zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                         0x64 (size before relaxing)
 .literal.get_rtc_dbias_by_efuse$constprop$0
                0x00000000420000e0        0xc zephyr/libzephyr.a(rtc_init.c.obj)
 .literal.rtc_init
                0x00000000420000ec       0xf8 zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x158 (size before relaxing)
 .literal.sar_periph_ctrl_init
                0x00000000420001e4        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.esp_reset_reason_get_hint
                0x00000000420001ec        0x4 zephyr/libzephyr.a(reset_reason.c.obj)
 .literal.esp_reset_reason_init
                0x00000000420001f0        0xc zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_timer_early_init
                0x00000000420001fc        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_timer_impl_early_init
                0x00000000420001fc       0x20 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x28 (size before relaxing)
 .literal.clk_hal_lp_slow_get_freq_hz
                0x000000004200021c        0x4 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.clk_hal_xtal_get_freq_mhz
                0x0000000042000220       0x10 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x18 (size before relaxing)
 .literal.clk_hal_soc_root_get_freq_mhz
                0x0000000042000230        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.clk_hal_cpu_get_freq_hz
                0x0000000042000230        0x8 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x20 (size before relaxing)
 .literal.clk_hal_ahb_get_freq_hz
                0x0000000042000238        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.clk_hal_apb_get_freq_hz
                0x0000000042000238        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.fix_cache_generation_overflow
                0x0000000042000238        0xc zephyr/libzephyr.a(log.c.obj)
 .literal.heap_bubble_down
                0x0000000042000244        0x0 zephyr/libzephyr.a(log.c.obj)
                                          0x4 (size before relaxing)
 .literal.s_log_level_get_and_unlock
                0x0000000042000244       0x14 zephyr/libzephyr.a(log.c.obj)
                                         0x38 (size before relaxing)
 .literal.esp_log_writev
                0x0000000042000258        0x8 zephyr/libzephyr.a(log.c.obj)
                                          0xc (size before relaxing)
 .literal.z_isr_install
                0x0000000042000260        0x4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x8 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x0000000042000264        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x4 (size before relaxing)
 .literal.__assert_no_args
                0x0000000042000264        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_zephyr_fputc
                0x0000000042000264        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .literal.picolibc_put
                0x0000000042000268        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                                          0x4 (size before relaxing)
 .literal.__stdout_hook_install
                0x0000000042000268        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                                          0x8 (size before relaxing)
 .literal.abort
                0x000000004200026c        0x8 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                          0xc (size before relaxing)
 .literal.malloc_prepare
                0x0000000042000274        0xc zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_sys_rand_get
                0x0000000042000280       0x18 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .literal.clock_control_esp32_get_status
                0x0000000042000298        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.esp32_select_rtc_slow_clk
                0x00000000420002a0       0x10 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.esp32_cpu_clock_configure
                0x00000000420002b0       0x30 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.clock_control_esp32_off
                0x00000000420002e0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.clock_control_esp32_on
                0x00000000420002e0        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_configure
                0x00000000420002e0        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x00000000420002e8        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_init
                0x00000000420002e8       0x2c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x54 (size before relaxing)
 .literal.uart_console_init
                0x0000000042000314        0xc zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x14 (size before relaxing)
 .literal.gpio_esp32_port_get_raw
                0x0000000042000320        0x4 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_port_set_masked_raw
                0x0000000042000324        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_set_bits_raw
                0x0000000042000324        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_clear_bits_raw
                0x0000000042000324        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_toggle_bits
                0x0000000042000324        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_pin_interrupt_configure
                0x0000000042000324        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_get_pending_int
                0x000000004200032c        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_init
                0x000000004200032c        0xc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_config
                0x0000000042000338       0x2c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x40 (size before relaxing)
 .literal.pinctrl_configure_pins
                0x0000000042000364       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                         0x50 (size before relaxing)
 .literal.uart_esp32_config_get
                0x0000000042000374        0xc zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x30 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x0000000042000380        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x0000000042000380        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x0000000042000380       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x60 (size before relaxing)
 .literal.uart_esp32_init
                0x0000000042000390        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.__l_vfprintf
                0x0000000042000390       0x14 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                         0x18 (size before relaxing)
 .literal.vprintf
                0x00000000420003a4        0x4 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                          0x8 (size before relaxing)
 .text.actuator_thread
                0x00000000420003a8       0x81 app/libapp.a(main.c.obj)
                0x00000000420003a8                actuator_thread
 *fill*         0x0000000042000429        0x3 
 .text.sensor_thread
                0x000000004200042c       0xb3 app/libapp.a(main.c.obj)
                0x000000004200042c                sensor_thread
 *fill*         0x00000000420004df        0x1 
 .text.ai_thread
                0x00000000420004e0       0x6f app/libapp.a(main.c.obj)
                0x00000000420004e0                ai_thread
 *fill*         0x000000004200054f        0x1 
 .text.main     0x0000000042000550       0x10 app/libapp.a(main.c.obj)
                0x0000000042000550                main
 .text.chunk_field
                0x0000000042000560       0x20 zephyr/libzephyr.a(heap.c.obj)
 .text.chunk_set
                0x0000000042000580       0x20 zephyr/libzephyr.a(heap.c.obj)
 .text.chunk_size
                0x00000000420005a0       0x11 zephyr/libzephyr.a(heap.c.obj)
                                         0x15 (size before relaxing)
 *fill*         0x00000000420005b1        0x3 
 .text.set_chunk_used
                0x00000000420005b4       0x3b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x00000000420005ef        0x1 
 .text.set_chunk_size
                0x00000000420005f0       0x13 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x0000000042000603        0x1 
 .text.mem_to_chunkid
                0x0000000042000604       0x1b zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x000000004200061f        0x1 
 .text.bucket_idx$isra$0
                0x0000000042000620       0x21 zephyr/libzephyr.a(heap.c.obj)
 *fill*         0x0000000042000641        0x3 
 .text.free_list_remove_bidx
                0x0000000042000644       0x56 zephyr/libzephyr.a(heap.c.obj)
                                         0x62 (size before relaxing)
 *fill*         0x000000004200069a        0x2 
 .text.free_list_remove
                0x000000004200069c       0x28 zephyr/libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .text.alloc_chunk
                0x00000000420006c4       0x74 zephyr/libzephyr.a(heap.c.obj)
                                         0x7c (size before relaxing)
 .text.split_chunks
                0x0000000042000738       0x46 zephyr/libzephyr.a(heap.c.obj)
                                         0x56 (size before relaxing)
 *fill*         0x000000004200077e        0x2 
 .text.merge_chunks
                0x0000000042000780       0x32 zephyr/libzephyr.a(heap.c.obj)
                                         0x42 (size before relaxing)
 *fill*         0x00000000420007b2        0x2 
 .text.free_list_add
                0x00000000420007b4       0x88 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.free_chunk
                0x000000004200083c       0x78 zephyr/libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.sys_heap_free
                0x00000000420008b4       0x24 zephyr/libzephyr.a(heap.c.obj)
                                         0x2c (size before relaxing)
                0x00000000420008b4                sys_heap_free
 .text.sys_heap_alloc
                0x00000000420008d8       0x72 zephyr/libzephyr.a(heap.c.obj)
                                         0x7e (size before relaxing)
                0x00000000420008d8                sys_heap_alloc
 *fill*         0x000000004200094a        0x2 
 .text.sys_heap_noalign_alloc
                0x000000004200094c       0x11 zephyr/libzephyr.a(heap.c.obj)
                0x000000004200094c                sys_heap_noalign_alloc
 *fill*         0x000000004200095d        0x3 
 .text.sys_heap_init
                0x0000000042000960       0xac zephyr/libzephyr.a(heap.c.obj)
                                         0xc8 (size before relaxing)
                0x0000000042000960                sys_heap_init
 .text.__printk_hook_install
                0x0000000042000a0c        0xa zephyr/libzephyr.a(printk.c.obj)
                0x0000000042000a0c                __printk_hook_install
 *fill*         0x0000000042000a16        0x2 
 .text.z_thread_entry
                0x0000000042000a18       0x18 zephyr/libzephyr.a(thread_entry.c.obj)
                0x0000000042000a18                z_thread_entry
 .text.esp_flash_app_enable_os_functions
                0x0000000042000a30       0x1f zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                0x0000000042000a30                esp_flash_app_enable_os_functions
 *fill*         0x0000000042000a4f        0x1 
 .text.uart_hal_set_hw_flow_ctrl
                0x0000000042000a50       0x65 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042000a50                uart_hal_set_hw_flow_ctrl
 *fill*         0x0000000042000ab5        0x3 
 .text.uart_hal_set_txfifo_empty_thr
                0x0000000042000ab8       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042000ab8                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_mode
                0x0000000042000ad8      0x19b zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042000ad8                uart_hal_set_mode
 *fill*         0x0000000042000c73        0x1 
 .text.uart_hal_inverse_signal
                0x0000000042000c74       0x87 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042000c74                uart_hal_inverse_signal
 *fill*         0x0000000042000cfb        0x1 
 .text.uart_hal_set_rx_timeout
                0x0000000042000cfc       0x52 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x56 (size before relaxing)
                0x0000000042000cfc                uart_hal_set_rx_timeout
 *fill*         0x0000000042000d4e        0x2 
 .text.uart_hal_txfifo_rst
                0x0000000042000d50       0x29 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042000d50                uart_hal_txfifo_rst
 *fill*         0x0000000042000d79        0x3 
 .text.uart_hal_rxfifo_rst
                0x0000000042000d7c       0x29 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042000d7c                uart_hal_rxfifo_rst
 *fill*         0x0000000042000da5        0x3 
 .text.esp_clk_slowclk_cal_set
                0x0000000042000da8        0xd zephyr/libzephyr.a(esp_clk.c.obj)
                0x0000000042000da8                esp_clk_slowclk_cal_set
 *fill*         0x0000000042000db5        0x3 
 .text.periph_ll_get_rst_en_mask
                0x0000000042000db8       0xd5 zephyr/libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x0000000042000e8d        0x3 
 .text.periph_module_enable
                0x0000000042000e90       0x97 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x9b (size before relaxing)
                0x0000000042000e90                periph_module_enable
 *fill*         0x0000000042000f27        0x1 
 .text.periph_module_disable
                0x0000000042000f28       0xa5 zephyr/libzephyr.a(periph_ctrl.c.obj)
                0x0000000042000f28                periph_module_disable
 *fill*         0x0000000042000fcd        0x3 
 .text.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x0000000042000fd0       0x4c zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                0x0000000042000fd0                esp_clk_tree_rc_fast_d256_get_freq_hz
 .text.esp_clk_tree_xtal32k_get_freq_hz
                0x000000004200101c       0x4c zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                0x000000004200101c                esp_clk_tree_xtal32k_get_freq_hz
 .text.esp_clk_tree_lp_slow_get_freq_hz
                0x0000000042001068       0x44 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x48 (size before relaxing)
                0x0000000042001068                esp_clk_tree_lp_slow_get_freq_hz
 .text.esp_clk_tree_rc_fast_get_freq_hz
                0x00000000420010ac       0x13 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x16 (size before relaxing)
                0x00000000420010ac                esp_clk_tree_rc_fast_get_freq_hz
 *fill*         0x00000000420010bf        0x1 
 .text.esp_clk_tree_lp_fast_get_freq_hz
                0x00000000420010c0       0x37 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                0x00000000420010c0                esp_clk_tree_lp_fast_get_freq_hz
 *fill*         0x00000000420010f7        0x1 
 .text.esp_cpu_intr_get_desc
                0x00000000420010f8       0x2a zephyr/libzephyr.a(esp_cpu_intr.c.obj)
                0x00000000420010f8                esp_cpu_intr_get_desc
 *fill*         0x0000000042001122        0x2 
 .text.esp_clk_tree_src_get_freq_hz
                0x0000000042001124      0x11c zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                        0x128 (size before relaxing)
                0x0000000042001124                esp_clk_tree_src_get_freq_hz
 .text.get_rtc_dbias_by_efuse$constprop$0
                0x0000000042001240       0xb4 zephyr/libzephyr.a(rtc_init.c.obj)
 .text.rtc_init
                0x00000000420012f4      0x70a zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x716 (size before relaxing)
                0x00000000420012f4                rtc_init
 *fill*         0x00000000420019fe        0x2 
 .text.sar_periph_ctrl_init
                0x0000000042001a00       0x2c zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                0x0000000042001a00                sar_periph_ctrl_init
 .text.esp_reset_reason_get_hint
                0x0000000042001a2c       0x1c zephyr/libzephyr.a(reset_reason.c.obj)
                0x0000000042001a2c                esp_reset_reason_get_hint
 .text.esp_reset_reason_init
                0x0000000042001a48       0x96 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x9a (size before relaxing)
                0x0000000042001a48                esp_reset_reason_init
 *fill*         0x0000000042001ade        0x2 
 .text.esp_timer_early_init
                0x0000000042001ae0        0xa zephyr/libzephyr.a(esp_timer.c.obj)
                                          0xd (size before relaxing)
                0x0000000042001ae0                esp_timer_early_init
 *fill*         0x0000000042001aea        0x2 
 .text.esp_timer_impl_early_init
                0x0000000042001aec       0x6a zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x6e (size before relaxing)
                0x0000000042001aec                esp_timer_impl_early_init
 *fill*         0x0000000042001b56        0x2 
 .text.clk_hal_lp_slow_get_freq_hz
                0x0000000042001b58       0x24 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042001b58                clk_hal_lp_slow_get_freq_hz
 .text.clk_hal_xtal_get_freq_mhz
                0x0000000042001b7c       0x40 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042001b7c                clk_hal_xtal_get_freq_mhz
 .text.clk_hal_soc_root_get_freq_mhz
                0x0000000042001bbc       0x30 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x34 (size before relaxing)
                0x0000000042001bbc                clk_hal_soc_root_get_freq_mhz
 .text.clk_hal_cpu_get_freq_hz
                0x0000000042001bec       0x8e zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042001bec                clk_hal_cpu_get_freq_hz
 *fill*         0x0000000042001c7a        0x2 
 .text.clk_hal_ahb_get_freq_hz
                0x0000000042001c7c       0x1e zephyr/libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042001c7c                clk_hal_ahb_get_freq_hz
 *fill*         0x0000000042001c9a        0x2 
 .text.clk_hal_apb_get_freq_hz
                0x0000000042001c9c        0xa zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                          0xd (size before relaxing)
                0x0000000042001c9c                clk_hal_apb_get_freq_hz
 *fill*         0x0000000042001ca6        0x2 
 .text.fix_cache_generation_overflow
                0x0000000042001ca8       0x2c zephyr/libzephyr.a(log.c.obj)
 .text.heap_bubble_down
                0x0000000042001cd4       0x49 zephyr/libzephyr.a(log.c.obj)
 *fill*         0x0000000042001d1d        0x3 
 .text.s_log_level_get_and_unlock
                0x0000000042001d20       0xfd zephyr/libzephyr.a(log.c.obj)
                                        0x109 (size before relaxing)
 *fill*         0x0000000042001e1d        0x3 
 .text.esp_log_writev
                0x0000000042001e20       0x2e zephyr/libzephyr.a(log.c.obj)
                                         0x32 (size before relaxing)
                0x0000000042001e20                esp_log_writev
 *fill*         0x0000000042001e4e        0x2 
 .text.z_isr_install
                0x0000000042001e50       0x14 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x18 (size before relaxing)
                0x0000000042001e50                z_isr_install
 .text.arch_irq_connect_dynamic
                0x0000000042001e64        0xe zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x12 (size before relaxing)
                0x0000000042001e64                arch_irq_connect_dynamic
 *fill*         0x0000000042001e72        0x2 
 .text.__assert_no_args
                0x0000000042001e74        0x6 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                                          0x9 (size before relaxing)
                0x0000000042001e74                __assert_no_args
 *fill*         0x0000000042001e7a        0x2 
 .text.z_impl_zephyr_fputc
                0x0000000042001e7c       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                0x0000000042001e7c                z_impl_zephyr_fputc
 *fill*         0x0000000042001e8e        0x2 
 .text.picolibc_put
                0x0000000042001e90       0x12 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 *fill*         0x0000000042001ea2        0x2 
 .text.__stdout_hook_install
                0x0000000042001ea4       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                0x0000000042001ea4                __stdout_hook_install
 .text.abort    0x0000000042001ebc       0x14 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                0x0000000042001ebc                abort
 .text.malloc_prepare
                0x0000000042001ed0       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x0000000042001ef1        0x3 
 .text.z_impl_sys_rand_get
                0x0000000042001ef4       0x6e zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
                0x0000000042001ef4                z_impl_sys_rand_get
 *fill*         0x0000000042001f62        0x2 
 .text.clock_control_esp32_get_status
                0x0000000042001f64       0x41 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x0000000042001fa5        0x3 
 .text.esp32_select_rtc_slow_clk
                0x0000000042001fa8       0x75 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x79 (size before relaxing)
 *fill*         0x000000004200201d        0x3 
 .text.esp32_cpu_clock_configure
                0x0000000042002020       0xf4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text.clock_control_esp32_off
                0x0000000042002114       0x18 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .text.clock_control_esp32_on
                0x000000004200212c       0x32 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x000000004200215e        0x2 
 .text.clock_control_esp32_configure
                0x0000000042002160       0x61 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x00000000420021c1        0x3 
 .text.clock_control_esp32_get_rate
                0x00000000420021c4       0x2a zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x00000000420021ee        0x2 
 .text.clock_control_esp32_init
                0x00000000420021f0      0x176 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x17e (size before relaxing)
 *fill*         0x0000000042002366        0x2 
 .text.uart_console_init
                0x0000000042002368       0x24 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x28 (size before relaxing)
 .text.gpio_esp32_port_get_raw
                0x000000004200238c       0x26 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420023b2        0x2 
 .text.gpio_esp32_port_set_masked_raw
                0x00000000420023b4       0x5a zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004200240e        0x2 
 .text.gpio_esp32_port_set_bits_raw
                0x0000000042002410       0x33 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042002443        0x1 
 .text.gpio_esp32_port_clear_bits_raw
                0x0000000042002444       0x33 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042002477        0x1 
 .text.gpio_esp32_port_toggle_bits
                0x0000000042002478       0x50 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_pin_interrupt_configure
                0x00000000420024c8       0xfc zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_get_pending_int
                0x00000000420025c4       0x26 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420025ea        0x2 
 .text.gpio_esp32_init
                0x00000000420025ec       0x30 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_config
                0x000000004200261c      0x318 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.pinctrl_configure_pins
                0x0000000042002934      0x3e2 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                0x0000000042002934                pinctrl_configure_pins
 *fill*         0x0000000042002d16        0x2 
 .text.uart_esp32_config_get
                0x0000000042002d18       0xf6 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x10a (size before relaxing)
 *fill*         0x0000000042002e0e        0x2 
 .text.uart_esp32_poll_out
                0x0000000042002e10       0x28 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.uart_esp32_poll_in
                0x0000000042002e38       0x24 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .text.uart_esp32_configure
                0x0000000042002e5c      0x1c6 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x1fa (size before relaxing)
 *fill*         0x0000000042003022        0x2 
 .text.uart_esp32_init
                0x0000000042003024       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.__l_vfprintf
                0x0000000042003038      0x5ba /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                0x0000000042003038                __l_vfprintf
 *fill*         0x00000000420035f2        0x2 
 .text.vprintf  0x00000000420035f4       0x1a /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                0x00000000420035f4                vprintf
 *fill*         0x000000004200360e        0x2 
 .text._OffsetAbsSyms
                0x0000000042003610        0x5 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                0x0000000042003610                _OffsetAbsSyms
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x0 
 *fill*         0x0000000042003615        0x3 
 .text._ConfigAbsSyms
                0x0000000042003618        0x5 zephyr/libzephyr.a(configs.c.obj)
                0x0000000042003618                _ConfigAbsSyms
 *fill*         0x000000004200361d        0x3 
 .text.sys_trace_idle
                0x0000000042003620        0x5 zephyr/libzephyr.a(tracing_none.c.obj)
                0x0000000042003620                sys_trace_idle
 *fill*         0x0000000042003625        0x0 
 *fill*         0x0000000042003625        0x3 
 .text.uart_hal_get_sclk
                0x0000000042003628       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003628                uart_hal_get_sclk
 *fill*         0x0000000042003649        0x3 
 .text.uart_hal_get_baudrate
                0x000000004200364c       0x38 zephyr/libzephyr.a(uart_hal.c.obj)
                0x000000004200364c                uart_hal_get_baudrate
 .text.uart_hal_set_stop_bits
                0x0000000042003684       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003684                uart_hal_set_stop_bits
 .text.uart_hal_get_stop_bits
                0x00000000420036a4       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000420036a4                uart_hal_get_stop_bits
 *fill*         0x00000000420036b5        0x3 
 .text.uart_hal_set_data_bit_num
                0x00000000420036b8       0x1f zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000420036b8                uart_hal_set_data_bit_num
 *fill*         0x00000000420036d7        0x1 
 .text.uart_hal_get_data_bit_num
                0x00000000420036d8       0x11 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000420036d8                uart_hal_get_data_bit_num
 *fill*         0x00000000420036e9        0x3 
 .text.uart_hal_set_parity
                0x00000000420036ec       0x35 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000420036ec                uart_hal_set_parity
 *fill*         0x0000000042003721        0x3 
 .text.uart_hal_get_parity
                0x0000000042003724       0x20 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003724                uart_hal_get_parity
 *fill*         0x0000000042003744        0x0 
 .text.uart_hal_get_hw_flow_ctrl
                0x0000000042003744       0x24 zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003744                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x0000000042003768       0x1d zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003768                uart_hal_set_rxfifo_full_thr
 *fill*         0x0000000042003785        0x0 
 *fill*         0x0000000042003785        0x3 
 .text.uart_hal_is_mode_rs485_half_duplex
                0x0000000042003788       0x1b zephyr/libzephyr.a(uart_hal.c.obj)
                0x0000000042003788                uart_hal_is_mode_rs485_half_duplex
 *fill*         0x00000000420037a3        0x0 
 *fill*         0x00000000420037a3        0x1 
 .text.uart_hal_get_symb_len
                0x00000000420037a4       0x46 zephyr/libzephyr.a(uart_hal.c.obj)
                0x00000000420037a4                uart_hal_get_symb_len
 *fill*         0x00000000420037ea        0x0 
 *fill*         0x00000000420037ea        0x0 
 *fill*         0x00000000420037ea        0x0 
 *fill*         0x00000000420037ea        0x2 
 .text.uart_hal_write_txfifo
                0x00000000420037ec       0x3a zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x00000000420037ec                uart_hal_write_txfifo
 *fill*         0x0000000042003826        0x2 
 .text.uart_hal_read_rxfifo
                0x0000000042003828       0x2e zephyr/libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042003828                uart_hal_read_rxfifo
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x0 
 *fill*         0x0000000042003856        0x2 
 .text.z_get_sw_isr_table_idx
                0x0000000042003858        0x5 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x0000000042003858                z_get_sw_isr_table_idx
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x0 
 *fill*         0x000000004200385d        0x3 
 .text.gpio_esp32_manage_callback
                0x0000000042003860       0x56 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x00000000420038b6        0x0 
 *fill*         0x00000000420038b6        0x2 
 .text.pinctrl_lookup_state
                0x00000000420038b8       0x2a zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                0x00000000420038b8                pinctrl_lookup_state
 *fill*         0x00000000420038e2        0x0 
 *fill*         0x00000000420038e2        0x2 
 .text.uart_esp32_err_check
                0x00000000420038e4       0x13 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x00000000420038f7        0x0 
 *fill*         0x00000000420038f7        0x0 
 *fill*         0x00000000420038f7        0x1 
 .text.__ultoa_invert
                0x00000000420038f8      0x116 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *fill*         0x0000000042003a0e        0x0 
 *fill*         0x0000000042003a0e        0x0 
                0x0000000042003a1e                . = (. + 0x10)
 *fill*         0x0000000042003a0e       0x10 
                0x0000000042003a1e                _text_end = ABSOLUTE (.)
                0x0000000042003a1e                _instruction_reserved_end = ABSOLUTE (.)
                0x0000000042003a1e                __text_region_end = ABSOLUTE (.)
                0x0000000042003a1e                __rom_region_end = ABSOLUTE (.)
                0x0000000042003a1e                _etext = .

.flash.rodata_dummy
                0x000000003c000000    0x10000
                0x000000003c000000                _flash_rodata_dummy_start = ABSOLUTE (.)
                0x000000003c003a1e                . = (. + SIZEOF (.flash.text))
 *fill*         0x000000003c000000     0x3a1e 
                0x000000003c010000                . = ALIGN (0x10000)
 *fill*         0x000000003c003a1e     0xc5e2 
                0x0000000000020000                _image_drom_start = LOADADDR (.flash.rodata)
                0x0000000000001170                _image_drom_size = ((LOADADDR (.flash.rodata_end) + SIZEOF (.flash.rodata_end)) - _image_drom_start)
                0x000000003c010000                _image_drom_vaddr = ADDR (.flash.rodata)

.flash.rodata   0x000000003c010000      0xfc8 load address 0x0000000000020000
                0x000000003c010000                _image_rodata_start = ABSOLUTE (.)
                0x000000003c010000                _rodata_reserved_start = ABSOLUTE (.)
                0x000000003c010000                _rodata_start = ABSOLUTE (.)
                0x000000003c010000                __rodata_region_start = ABSOLUTE (.)
                0x000000003c010000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.irom1.text))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata))
 .rodata        0x000000003c010000        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .rodata        0x000000003c010008        0x4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.GPIO_PIN_MUX_REG
                0x000000003c01000c       0xc4 zephyr/libzephyr.a(gpio_periph.c.obj)
                0x000000003c01000c                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003c0100d0      0x4d0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c0100d0                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003c0105a0       0xc4 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c0105a0                rtc_io_num_map
 .rodata.periph_ll_get_rst_en_mask
                0x000000003c010664       0xa0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$11
                0x000000003c010704       0x90 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$9
                0x000000003c010794       0x90 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$6
                0x000000003c010824       0xa0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .rodata.intr_desc_table
                0x000000003c0108c4      0x200 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz
                0x000000003c010ac4       0x2c zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.g_mmu_mem_regions
                0x000000003c010af0       0x18 zephyr/libzephyr.a(ext_mem_layout.c.obj)
                0x000000003c010af0                g_mmu_mem_regions
 .rodata.esp_reset_reason_init
                0x000000003c010b08       0x20 zephyr/libzephyr.a(reset_reason.c.obj)
 .rodata.stdout
                0x000000003c010b28        0x4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                0x000000003c010b28                stdout
                0x000000003c010b28                stderr
 .rodata.CSWTCH$23
                0x000000003c010b2c       0x90 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.CSWTCH$21
                0x000000003c010bbc       0xa0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003c010c5c       0x14 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_gpio_ports_addrs
                0x000000003c010c70        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .rodata.__l_vfprintf
                0x000000003c010c78       0x90 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .rodata.actuator_thread.str1.1
                0x000000003c010d08       0x1a app/libapp.a(main.c.obj)
 .rodata.main.str1.1
                0x000000003c010d22       0x15 app/libapp.a(main.c.obj)
 .rodata.maze   0x000000003c010d37       0x19 app/libapp.a(main.c.obj)
 .rodata.str1.1
                0x000000003c010d50       0x1f app/libapp.a(main.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz.str1.1
                0x000000003c010d6f       0xb4 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.__FUNCTION__$0
                0x000000003c010e23       0x1d zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .rodata.rtc_init.str1.1
                0x000000003c010e40       0x2d zephyr/libzephyr.a(rtc_init.c.obj)
 .rodata.clk_hal_xtal_get_freq_mhz.str1.1
                0x000000003c010e6d       0x42 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .rodata.clk_hal_cpu_get_freq_hz.str1.1
                0x000000003c010eaf       0x1f zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .rodata.abort.str1.1
                0x000000003c010ece        0x9 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .rodata.str1.1
                0x000000003c010ed7        0xd zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003c010ee4       0x1c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.boot_banner.str1.1
                0x000000003c010f00       0x3b zephyr/kernel/libkernel.a(banner.c.obj)
 .rodata.__l_vfprintf.str1.1
                0x000000003c010f3b        0xf /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003c010f4a                __XT_EXCEPTION_TABLE_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
                0x000000003c010f4c                . = ((. + 0x3) & 0xfffffffffffffffc)
 *fill*         0x000000003c010f4a        0x2 
                0x000000003c010f4c                __eh_frame = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.eh_frame))
 .eh_frame      0x000000003c010f4c       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .eh_frame      0x000000003c010f74       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003c010f9c       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                0x000000003c010fc8                . = ((. + 0x7) & 0xfffffffffffffffc)
 *fill*         0x000000003c010fc4        0x4 
                0x000000003c010fc8                __XT_EXCEPTION_DESCS_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003c010fc8                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003c010fc8                . = ALIGN (0x4)
                0x000000003c010fc8                __rodata_region_end = ABSOLUTE (.)
                0x000000003c010fc8                _lit4_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(*.lit4))
 *(SORT_BY_ALIGNMENT(.lit4.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.lit4.*))
                0x000000003c010fc8                _lit4_end = ABSOLUTE (.)
                0x000000003c010fc8                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata_wlog))
 *(SORT_BY_ALIGNMENT(.rodata_wlog*))
                0x000000003c010fc8                . = ALIGN (0x4)

/DISCARD/
 *(SORT_BY_ALIGNMENT(.eh_frame))

init_array      0x000000003c010fc8        0x0 load address 0x0000000000020fc8
                0x000000003c010fc8                __zephyr_init_array_start = .
 *(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*))
 *(SORT_BY_ALIGNMENT(.init_array) SORT_BY_ALIGNMENT(.ctors))
                0x000000003c010fc8                __zephyr_init_array_end = .
                0x0000000000000001                ASSERT ((__zephyr_init_array_start == __zephyr_init_array_end), GNU-style constructors required but STATIC_INIT_GNU not enabled)

initlevel       0x000000003c010fc8       0x40 load address 0x0000000000020fc8
                0x000000003c010fc8                __init_start = .
                0x000000003c010fc8                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY_P_???_*)))
                0x000000003c010fc8                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_??_*)))
 .z_init_PRE_KERNEL_1_P_30_SUB_00042_
                0x000000003c010fc8        0x8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_1_P_30_SUB_0_
                0x000000003c010fd0        0x8 zephyr/kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_1_P_40_SUB_00008_
                0x000000003c010fd8        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_1_P_40_SUB_00095_
                0x000000003c010fe0        0x8 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_1_P_50_SUB_00074_
                0x000000003c010fe8        0x8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_1_P_60_SUB_0_
                0x000000003c010ff0        0x8 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1_P_???_*)))
                0x000000003c010ff8                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_?_*)))
 .z_init_PRE_KERNEL_2_P_0_SUB_0_
                0x000000003c010ff8        0x8 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2_P_???_*)))
                0x000000003c011000                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_??_*)))
 .z_init_POST_KERNEL_P_35_SUB_0_
                0x000000003c011000        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL_P_???_*)))
                0x000000003c011008                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION_P_???_*)))
                0x000000003c011008                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_??_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP_P_???_*)))
                0x000000003c011008                __init_end = .

device_area     0x000000003c011008       0x80 load address 0x0000000000021008
                0x000000003c011008                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 ._device.static.1_30_
                0x000000003c011008       0x20 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003c011008                __device_dts_ord_42
 ._device.static.1_40_
                0x000000003c011028       0x40 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003c011028                __device_dts_ord_95
                0x000000003c011048                __device_dts_ord_8
 ._device.static.1_50_
                0x000000003c011068       0x20 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003c011068                __device_dts_ord_74
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_???_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_????_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?????_*)))
                0x000000003c011088                _device_list_end = .

initlevel_error
                0x000000003c010fc8        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003c011088        0x0 load address 0x0000000000021088
                0x000000003c011088                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003c011088                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x000000003c011088        0x0 load address 0x0000000000021088
                0x000000003c011088                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003c011088                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x000000003c011088       0x90 load address 0x0000000000021088
                0x000000003c011088                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
 .__static_thread_data.static._k_thread_data_actuator_tid_
                0x000000003c011088       0x30 app/libapp.a(main.c.obj)
                0x000000003c011088                _k_thread_data_actuator_tid
 .__static_thread_data.static._k_thread_data_ai_tid_
                0x000000003c0110b8       0x30 app/libapp.a(main.c.obj)
                0x000000003c0110b8                _k_thread_data_ai_tid
 .__static_thread_data.static._k_thread_data_sensor_tid_
                0x000000003c0110e8       0x30 app/libapp.a(main.c.obj)
                0x000000003c0110e8                _k_thread_data_sensor_tid
                0x000000003c011118                __static_thread_data_list_end = .

device_deps     0x000000003c011118        0x0 load address 0x0000000000021118
                0x000000003c011118                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x000000003c011118                __device_deps_end = .

gpio_driver_api_area
                0x000000003c011118       0x24 load address 0x0000000000021118
                0x000000003c011118                _gpio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._gpio_driver_api.static.*)))
 ._gpio_driver_api.static.gpio_esp32_driver_api_
                0x000000003c011118       0x24 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003c01113c                _gpio_driver_api_list_end = .

shared_irq_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _shared_irq_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shared_irq_driver_api.static.*)))
                0x000000003c01113c                _shared_irq_driver_api_list_end = .

crypto_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _crypto_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._crypto_driver_api.static.*)))
                0x000000003c01113c                _crypto_driver_api_list_end = .

adc_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _adc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._adc_driver_api.static.*)))
                0x000000003c01113c                _adc_driver_api_list_end = .

auxdisplay_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _auxdisplay_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._auxdisplay_driver_api.static.*)))
                0x000000003c01113c                _auxdisplay_driver_api_list_end = .

bbram_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _bbram_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bbram_driver_api.static.*)))
                0x000000003c01113c                _bbram_driver_api_list_end = .

bt_hci_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _bt_hci_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_hci_driver_api.static.*)))
                0x000000003c01113c                _bt_hci_driver_api_list_end = .

can_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _can_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._can_driver_api.static.*)))
                0x000000003c01113c                _can_driver_api_list_end = .

cellular_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _cellular_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cellular_driver_api.static.*)))
                0x000000003c01113c                _cellular_driver_api_list_end = .

charger_driver_api_area
                0x000000003c01113c        0x0 load address 0x000000000002113c
                0x000000003c01113c                _charger_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._charger_driver_api.static.*)))
                0x000000003c01113c                _charger_driver_api_list_end = .

clock_control_driver_api_area
                0x000000003c01113c       0x1c load address 0x000000000002113c
                0x000000003c01113c                _clock_control_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._clock_control_driver_api.static.*)))
 ._clock_control_driver_api.static.clock_control_esp32_api_
                0x000000003c01113c       0x1c zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003c011158                _clock_control_driver_api_list_end = .

comparator_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _comparator_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._comparator_driver_api.static.*)))
                0x000000003c011158                _comparator_driver_api_list_end = .

coredump_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _coredump_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._coredump_driver_api.static.*)))
                0x000000003c011158                _coredump_driver_api_list_end = .

counter_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _counter_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._counter_driver_api.static.*)))
                0x000000003c011158                _counter_driver_api_list_end = .

dac_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _dac_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dac_driver_api.static.*)))
                0x000000003c011158                _dac_driver_api_list_end = .

dai_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _dai_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dai_driver_api.static.*)))
                0x000000003c011158                _dai_driver_api_list_end = .

display_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _display_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._display_driver_api.static.*)))
                0x000000003c011158                _display_driver_api_list_end = .

dma_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _dma_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._dma_driver_api.static.*)))
                0x000000003c011158                _dma_driver_api_list_end = .

edac_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _edac_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._edac_driver_api.static.*)))
                0x000000003c011158                _edac_driver_api_list_end = .

eeprom_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _eeprom_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._eeprom_driver_api.static.*)))
                0x000000003c011158                _eeprom_driver_api_list_end = .

emul_bbram_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _emul_bbram_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._emul_bbram_driver_api.static.*)))
                0x000000003c011158                _emul_bbram_driver_api_list_end = .

fuel_gauge_emul_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _fuel_gauge_emul_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fuel_gauge_emul_driver_api.static.*)))
                0x000000003c011158                _fuel_gauge_emul_driver_api_list_end = .

emul_sensor_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _emul_sensor_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._emul_sensor_driver_api.static.*)))
                0x000000003c011158                _emul_sensor_driver_api_list_end = .

entropy_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _entropy_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._entropy_driver_api.static.*)))
                0x000000003c011158                _entropy_driver_api_list_end = .

espi_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _espi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._espi_driver_api.static.*)))
                0x000000003c011158                _espi_driver_api_list_end = .

espi_saf_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _espi_saf_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._espi_saf_driver_api.static.*)))
                0x000000003c011158                _espi_saf_driver_api_list_end = .

flash_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _flash_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._flash_driver_api.static.*)))
                0x000000003c011158                _flash_driver_api_list_end = .

fpga_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _fpga_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fpga_driver_api.static.*)))
                0x000000003c011158                _fpga_driver_api_list_end = .

fuel_gauge_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _fuel_gauge_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._fuel_gauge_driver_api.static.*)))
                0x000000003c011158                _fuel_gauge_driver_api_list_end = .

gnss_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _gnss_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._gnss_driver_api.static.*)))
                0x000000003c011158                _gnss_driver_api_list_end = .

haptics_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _haptics_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._haptics_driver_api.static.*)))
                0x000000003c011158                _haptics_driver_api_list_end = .

hwspinlock_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _hwspinlock_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._hwspinlock_driver_api.static.*)))
                0x000000003c011158                _hwspinlock_driver_api_list_end = .

i2c_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _i2c_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2c_driver_api.static.*)))
                0x000000003c011158                _i2c_driver_api_list_end = .

i2c_target_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _i2c_target_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2c_target_driver_api.static.*)))
                0x000000003c011158                _i2c_target_driver_api_list_end = .

i2s_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _i2s_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i2s_driver_api.static.*)))
                0x000000003c011158                _i2s_driver_api_list_end = .

i3c_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _i3c_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i3c_driver_api.static.*)))
                0x000000003c011158                _i3c_driver_api_list_end = .

ipm_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _ipm_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ipm_driver_api.static.*)))
                0x000000003c011158                _ipm_driver_api_list_end = .

led_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _led_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._led_driver_api.static.*)))
                0x000000003c011158                _led_driver_api_list_end = .

led_strip_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _led_strip_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._led_strip_driver_api.static.*)))
                0x000000003c011158                _led_strip_driver_api_list_end = .

lora_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _lora_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._lora_driver_api.static.*)))
                0x000000003c011158                _lora_driver_api_list_end = .

mbox_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _mbox_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mbox_driver_api.static.*)))
                0x000000003c011158                _mbox_driver_api_list_end = .

mdio_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _mdio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mdio_driver_api.static.*)))
                0x000000003c011158                _mdio_driver_api_list_end = .

mipi_dbi_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _mipi_dbi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mipi_dbi_driver_api.static.*)))
                0x000000003c011158                _mipi_dbi_driver_api_list_end = .

mipi_dsi_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _mipi_dsi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mipi_dsi_driver_api.static.*)))
                0x000000003c011158                _mipi_dsi_driver_api_list_end = .

mspi_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _mspi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._mspi_driver_api.static.*)))
                0x000000003c011158                _mspi_driver_api_list_end = .

peci_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _peci_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._peci_driver_api.static.*)))
                0x000000003c011158                _peci_driver_api_list_end = .

ps2_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _ps2_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ps2_driver_api.static.*)))
                0x000000003c011158                _ps2_driver_api_list_end = .

ptp_clock_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _ptp_clock_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ptp_clock_driver_api.static.*)))
                0x000000003c011158                _ptp_clock_driver_api_list_end = .

pwm_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _pwm_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pwm_driver_api.static.*)))
                0x000000003c011158                _pwm_driver_api_list_end = .

regulator_parent_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _regulator_parent_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._regulator_parent_driver_api.static.*)))
                0x000000003c011158                _regulator_parent_driver_api_list_end = .

regulator_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _regulator_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._regulator_driver_api.static.*)))
                0x000000003c011158                _regulator_driver_api_list_end = .

reset_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _reset_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._reset_driver_api.static.*)))
                0x000000003c011158                _reset_driver_api_list_end = .

retained_mem_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _retained_mem_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._retained_mem_driver_api.static.*)))
                0x000000003c011158                _retained_mem_driver_api_list_end = .

rtc_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _rtc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._rtc_driver_api.static.*)))
                0x000000003c011158                _rtc_driver_api_list_end = .

sdhc_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _sdhc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sdhc_driver_api.static.*)))
                0x000000003c011158                _sdhc_driver_api_list_end = .

sensor_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _sensor_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sensor_driver_api.static.*)))
                0x000000003c011158                _sensor_driver_api_list_end = .

smbus_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _smbus_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._smbus_driver_api.static.*)))
                0x000000003c011158                _smbus_driver_api_list_end = .

spi_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _spi_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._spi_driver_api.static.*)))
                0x000000003c011158                _spi_driver_api_list_end = .

stepper_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _stepper_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._stepper_driver_api.static.*)))
                0x000000003c011158                _stepper_driver_api_list_end = .

syscon_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _syscon_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._syscon_driver_api.static.*)))
                0x000000003c011158                _syscon_driver_api_list_end = .

tee_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _tee_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tee_driver_api.static.*)))
                0x000000003c011158                _tee_driver_api_list_end = .

video_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _video_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._video_driver_api.static.*)))
                0x000000003c011158                _video_driver_api_list_end = .

w1_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _w1_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._w1_driver_api.static.*)))
                0x000000003c011158                _w1_driver_api_list_end = .

wdt_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _wdt_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._wdt_driver_api.static.*)))
                0x000000003c011158                _wdt_driver_api_list_end = .

can_transceiver_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _can_transceiver_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._can_transceiver_driver_api.static.*)))
                0x000000003c011158                _can_transceiver_driver_api_list_end = .

nrf_clock_control_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _nrf_clock_control_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._nrf_clock_control_driver_api.static.*)))
                0x000000003c011158                _nrf_clock_control_driver_api_list_end = .

i3c_target_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _i3c_target_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._i3c_target_driver_api.static.*)))
                0x000000003c011158                _i3c_target_driver_api_list_end = .

its_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _its_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._its_driver_api.static.*)))
                0x000000003c011158                _its_driver_api_list_end = .

vtd_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _vtd_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._vtd_driver_api.static.*)))
                0x000000003c011158                _vtd_driver_api_list_end = .

tgpio_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _tgpio_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tgpio_driver_api.static.*)))
                0x000000003c011158                _tgpio_driver_api_list_end = .

pcie_ctrl_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _pcie_ctrl_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pcie_ctrl_driver_api.static.*)))
                0x000000003c011158                _pcie_ctrl_driver_api_list_end = .

pcie_ep_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _pcie_ep_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._pcie_ep_driver_api.static.*)))
                0x000000003c011158                _pcie_ep_driver_api_list_end = .

svc_driver_api_area
                0x000000003c011158        0x0 load address 0x0000000000021158
                0x000000003c011158                _svc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._svc_driver_api.static.*)))
                0x000000003c011158                _svc_driver_api_list_end = .

uart_driver_api_area
                0x000000003c011158       0x14 load address 0x0000000000021158
                0x000000003c011158                _uart_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._uart_driver_api.static.*)))
 ._uart_driver_api.static.uart_esp32_api_
                0x000000003c011158       0x14 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003c01116c                _uart_driver_api_list_end = .

bc12_emul_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _bc12_emul_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bc12_emul_driver_api.static.*)))
                0x000000003c01116c                _bc12_emul_driver_api_list_end = .

bc12_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _bc12_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bc12_driver_api.static.*)))
                0x000000003c01116c                _bc12_driver_api_list_end = .

usbc_ppc_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _usbc_ppc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._usbc_ppc_driver_api.static.*)))
                0x000000003c01116c                _usbc_ppc_driver_api_list_end = .

tcpc_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _tcpc_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tcpc_driver_api.static.*)))
                0x000000003c01116c                _tcpc_driver_api_list_end = .

usbc_vbus_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _usbc_vbus_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._usbc_vbus_driver_api.static.*)))
                0x000000003c01116c                _usbc_vbus_driver_api_list_end = .

ivshmem_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _ivshmem_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ivshmem_driver_api.static.*)))
                0x000000003c01116c                _ivshmem_driver_api_list_end = .

ethphy_driver_api_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _ethphy_driver_api_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ethphy_driver_api.static.*)))
                0x000000003c01116c                _ethphy_driver_api_list_end = .

ztest           0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x000000003c01116c                _ztest_expected_result_entry_list_end = .
                0x000000003c01116c                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x000000003c01116c                _ztest_suite_node_list_end = .
                0x000000003c01116c                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x000000003c01116c                _ztest_unit_test_list_end = .
                0x000000003c01116c                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x000000003c01116c                _ztest_test_rule_list_end = .

bt_l2cap_fixed_chan_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003c01116c                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003c01116c                _bt_gatt_service_static_list_end = .

tracing_backend_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003c01116c                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

symbol_to_keep  0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x000000003c01116c                __symbol_to_keep_end = .

shell_area      0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003c01116c                _shell_list_end = .

shell_root_cmds_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x000000003c01116c                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x000000003c01116c                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x000000003c01116c                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x000000003c01116c        0x0 load address 0x000000000002116c
                0x000000003c01116c                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x000000003c01116c                _cfb_font_list_end = .

.intList        0x000000003c01116c       0x18 load address 0x000000003ebfe010
 *(SORT_BY_ALIGNMENT(.irq_info*))
 .irq_info      0x000000003c01116c        0x8 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003c01116c                _iheader
 *(SORT_BY_ALIGNMENT(.intList*))
 .intList       0x000000003c011174       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)

.flash.rodata_end
                0x000000003c011190        0x0 load address 0x0000000000021170
                0x000000003c011190                . = ALIGN (0x4)
                0x000000003c011190                _rodata_reserved_end = ABSOLUTE (.)
                0x000000003c011190                _image_rodata_end = ABSOLUTE (.)

.intList
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x20
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                         0x21 (size before relaxing)
 .comment       0x0000000000000020       0x21 app/libapp.a(main.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(heap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(printk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(configs.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_cache.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(loader.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(hw_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(flash_mmap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(flash_ops.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mpu_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(console_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_module.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(systimer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(reset_reason.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cache_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(mmu_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(systimer_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(log.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(cache_utils.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(flash_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_random.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/kernel/libkernel.a(kheap.c.obj)
 .comment       0x0000000000000020       0x21 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x2558
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000020       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_aranges
                0x0000000000000090       0x20 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x00000000000000b0       0x40 app/libapp.a(main.c.obj)
 .debug_aranges
                0x00000000000000f0       0xd0 zephyr/libzephyr.a(heap.c.obj)
 .debug_aranges
                0x00000000000001c0       0x50 zephyr/libzephyr.a(printk.c.obj)
 .debug_aranges
                0x0000000000000210       0x20 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x0000000000000230       0x20 zephyr/libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000250       0x38 zephyr/libzephyr.a(soc.c.obj)
 .debug_aranges
                0x0000000000000288       0x28 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_aranges
                0x00000000000002b0       0x28 zephyr/libzephyr.a(loader.c.obj)
 .debug_aranges
                0x00000000000002d8       0x20 zephyr/libzephyr.a(hw_init.c.obj)
 .debug_aranges
                0x00000000000002f8       0x40 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x0000000000000338       0x28 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_aranges
                0x0000000000000360       0x48 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_aranges
                0x00000000000003a8       0x38 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_aranges
                0x00000000000003e0       0xb8 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000498       0x60 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_aranges
                0x00000000000004f8       0x40 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_aranges
                0x0000000000000538      0x110 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_aranges
                0x0000000000000648       0x40 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_aranges
                0x0000000000000688       0x58 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_aranges
                0x00000000000006e0       0x40 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_aranges
                0x0000000000000720       0x78 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_aranges
                0x0000000000000798       0x28 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_aranges
                0x00000000000007c0       0x18 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_aranges
                0x00000000000007d8       0x40 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_aranges
                0x0000000000000818      0x110 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_aranges
                0x0000000000000928       0x38 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_aranges
                0x0000000000000960       0x30 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_aranges
                0x0000000000000990       0x98 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_aranges
                0x0000000000000a28       0x28 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_aranges
                0x0000000000000a50       0x48 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_aranges
                0x0000000000000a98       0x40 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_aranges
                0x0000000000000ad8       0x70 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_aranges
                0x0000000000000b48       0xf8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x0000000000000c40       0x40 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000c80       0x20 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_aranges
                0x0000000000000ca0       0x20 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_aranges
                0x0000000000000cc0       0x28 zephyr/libzephyr.a(console_init.c.obj)
 .debug_aranges
                0x0000000000000ce8       0x38 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_aranges
                0x0000000000000d20       0x18 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000000d38       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x0000000000000d50       0x68 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_aranges
                0x0000000000000db8       0x68 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_aranges
                0x0000000000000e20       0x78 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000000e98       0x58 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_aranges
                0x0000000000000ef0       0x40 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_aranges
                0x0000000000000f30       0x40 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_aranges
                0x0000000000000f70       0x20 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_aranges
                0x0000000000000f90       0x20 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_aranges
                0x0000000000000fb0       0x20 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_aranges
                0x0000000000000fd0      0x110 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x00000000000010e0       0x38 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x0000000000001118       0x20 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x0000000000001138       0x58 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x0000000000001190       0x40 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_aranges
                0x00000000000011d0       0x70 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000001240       0x28 zephyr/libzephyr.a(systimer.c.obj)
 .debug_aranges
                0x0000000000001268       0x48 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_aranges
                0x00000000000012b0       0x90 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_aranges
                0x0000000000001340       0x18 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_aranges
                0x0000000000001358       0x28 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_aranges
                0x0000000000001380       0x28 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_aranges
                0x00000000000013a8       0x20 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_aranges
                0x00000000000013c8       0x20 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_aranges
                0x00000000000013e8       0x48 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_aranges
                0x0000000000001430       0x38 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_aranges
                0x0000000000001468       0xb0 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x0000000000001518       0x70 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_aranges
                0x0000000000001588       0x40 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x00000000000015c8       0x70 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_aranges
                0x0000000000001638       0x60 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_aranges
                0x0000000000001698       0x98 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_aranges
                0x0000000000001730       0x70 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_aranges
                0x00000000000017a0       0x48 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_aranges
                0x00000000000017e8       0x58 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x0000000000001840       0x38 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x0000000000001878       0x58 zephyr/libzephyr.a(log.c.obj)
 .debug_aranges
                0x00000000000018d0       0x58 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_aranges
                0x0000000000001928       0xe8 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_aranges
                0x0000000000001a10       0x30 zephyr/libzephyr.a(flash_init.c.obj)
 .debug_aranges
                0x0000000000001a40       0x28 zephyr/libzephyr.a(soc_random.c.obj)
 .debug_aranges
                0x0000000000001a68       0x58 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_aranges
                0x0000000000001ac0       0x48 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_aranges
                0x0000000000001b08       0x20 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x0000000000001b28       0x28 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_aranges
                0x0000000000001b50       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x0000000000001b78       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000001ba8       0x38 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000001be0       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000001c00       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_aranges
                0x0000000000001c70       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_aranges
                0x0000000000001c90       0x20 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_aranges
                0x0000000000001cb0       0x38 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_aranges
                0x0000000000001ce8       0x20 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_aranges
                0x0000000000001d08       0x60 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_aranges
                0x0000000000001d68       0x20 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_aranges
                0x0000000000001d88       0xb0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000001e38       0x58 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x0000000000001e90       0x30 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x0000000000001ec0       0x78 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x0000000000001f38       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_aranges
                0x0000000000001f58       0x20 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_aranges
                0x0000000000001f78       0x48 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x0000000000001fc0       0x40 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x0000000000002000       0x40 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x0000000000002040       0x38 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x0000000000002078       0x68 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x00000000000020e0       0x28 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x0000000000002108       0x68 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_aranges
                0x0000000000002170       0x90 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000002200      0x188 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000002388       0x40 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_aranges
                0x00000000000023c8       0x98 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000002460       0x68 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x00000000000024c8       0x20 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x00000000000024e8       0x58 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_aranges
                0x0000000000002540       0x18 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0xa327d
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000       0xdc zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x00000000000000dc      0xee3 app/libapp.a(main.c.obj)
 .debug_info    0x0000000000000fbf     0x2b23 zephyr/libzephyr.a(heap.c.obj)
 .debug_info    0x0000000000003ae2      0x541 zephyr/libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000004023      0x5fc zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_info    0x000000000000461f       0x38 zephyr/libzephyr.a(configs.c.obj)
 .debug_info    0x0000000000004657      0x21b zephyr/libzephyr.a(soc.c.obj)
 .debug_info    0x0000000000004872      0x2b7 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_info    0x0000000000004b29     0x10bf zephyr/libzephyr.a(loader.c.obj)
 .debug_info    0x0000000000005be8      0x3a3 zephyr/libzephyr.a(hw_init.c.obj)
 .debug_info    0x0000000000005f8b       0xb9 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_info    0x0000000000006044      0x1c9 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_info    0x000000000000620d      0x45a zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_info    0x0000000000006667     0x4f49 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_info    0x000000000000b5b0     0x61d7 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_info    0x0000000000011787     0x571b zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_info    0x0000000000016ea2      0xf29 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_info    0x0000000000017dcb     0x483d zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_info    0x000000000001c608     0x69df zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_info    0x0000000000022fe7      0xedd zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_info    0x0000000000023ec4      0x43d zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_info    0x0000000000024301     0x54df zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_info    0x00000000000297e0      0xf03 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_info    0x000000000002a6e3      0xc7e zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_info    0x000000000002b361     0x114b zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_info    0x000000000002c4ac     0x287a zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_info    0x000000000002ed26     0x1027 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_info    0x000000000002fd4d      0xf75 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_info    0x0000000000030cc2     0x1a13 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_info    0x00000000000326d5      0xf03 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_info    0x00000000000335d8     0x169f zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_info    0x0000000000034c77      0x993 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_info    0x000000000003560a     0x1035 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_info    0x000000000003663f     0x2fea zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_info    0x0000000000039629     0x1c9d zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x000000000003b2c6      0x266 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_info    0x000000000003b52c      0x250 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_info    0x000000000003b77c      0x1d0 zephyr/libzephyr.a(console_init.c.obj)
 .debug_info    0x000000000003b94c     0x8759 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_info    0x00000000000440a5       0xca zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x000000000004416f      0x1af zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x000000000004431e      0x693 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_info    0x00000000000449b1      0xa8a zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_info    0x000000000004543b      0xaa3 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x0000000000045ede      0x57d zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_info    0x000000000004645b     0x4530 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_info    0x000000000004a98b      0x54b zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_info    0x000000000004aed6      0x171 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_info    0x000000000004b047      0x27a zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_info    0x000000000004b2c1      0x446 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_info    0x000000000004b707     0x18aa zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x000000000004cfb1     0x4886 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_info    0x0000000000051837      0x869 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x00000000000520a0      0x6d6 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_info    0x0000000000052776      0x5e2 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_info    0x0000000000052d58     0x21c2 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_info    0x0000000000054f1a       0xdd zephyr/libzephyr.a(systimer.c.obj)
 .debug_info    0x0000000000054ff7      0x4de zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_info    0x00000000000554d5     0x2641 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_info    0x0000000000057b16      0x1b3 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_info    0x0000000000057cc9      0x15c zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_info    0x0000000000057e25     0x1cde zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_info    0x0000000000059b03      0x2e2 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_info    0x0000000000059de5       0xef zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_info    0x0000000000059ed4      0x589 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_info    0x000000000005a45d      0x3c3 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_info    0x000000000005a820     0x215f zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_info    0x000000000005c97f     0x1b07 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_info    0x000000000005e486     0x39c9 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x0000000000061e4f      0x733 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_info    0x0000000000062582      0xce6 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_info    0x0000000000063268     0x19e2 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_info    0x0000000000064c4a     0x5c5b zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_info    0x000000000006a8a5      0x649 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_info    0x000000000006aeee     0x3d75 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x000000000006ec63      0x251 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_info    0x000000000006eeb4      0xa31 zephyr/libzephyr.a(log.c.obj)
 .debug_info    0x000000000006f8e5      0xd9a zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_info    0x000000000007067f     0x8502 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_info    0x0000000000078b81     0x3bf4 zephyr/libzephyr.a(flash_init.c.obj)
 .debug_info    0x000000000007c775      0x25a zephyr/libzephyr.a(soc_random.c.obj)
 .debug_info    0x000000000007c9cf      0x5a5 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_info    0x000000000007cf74      0x8ff zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_info    0x000000000007d873       0xba zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x000000000007d92d      0x1e4 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_info    0x000000000007db11       0xd4 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x000000000007dbe5      0x34e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x000000000007df33       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x000000000007df57       0x22 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_info    0x000000000007df79      0x37a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x000000000007e2f3      0x938 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_info    0x000000000007ec2b     0x173d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_info    0x0000000000080368      0x5c0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_info    0x0000000000080928       0xa5 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_info    0x00000000000809cd      0x3bc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_info    0x0000000000080d89      0x121 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_info    0x0000000000080eaa      0xdf0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_info    0x0000000000081c9a      0x478 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_info    0x0000000000082112     0x1b70 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x0000000000083c82     0x168f zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x0000000000085311      0x81e zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x0000000000085b2f     0x5d93 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x000000000008b8c2      0x1b2 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_info    0x000000000008ba74     0x4112 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_info    0x000000000008fb86     0x30d8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x0000000000092c5e      0x8aa zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x0000000000093508      0x3d1 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_info    0x00000000000938d9      0x903 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x00000000000941dc     0x182e zephyr/kernel/libkernel.a(init.c.obj)
 .debug_info    0x0000000000095a0a      0x245 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_info    0x0000000000095c4f     0x18f4 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_info    0x0000000000097543     0x14d0 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_info    0x0000000000098a13     0x6634 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_info    0x000000000009f047      0xcfe zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_info    0x000000000009fd45     0x14e0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x00000000000a1225      0xf11 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x00000000000a2136       0xc5 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_info    0x00000000000a21fb      0xf30 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_info    0x00000000000a312b      0x152 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_abbrev   0x0000000000000000    0x14f65
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0x62 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000062      0x3e8 app/libapp.a(main.c.obj)
 .debug_abbrev  0x000000000000044a      0x441 zephyr/libzephyr.a(heap.c.obj)
 .debug_abbrev  0x000000000000088b      0x2cb zephyr/libzephyr.a(printk.c.obj)
 .debug_abbrev  0x0000000000000b56      0x243 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000000d99       0x2e zephyr/libzephyr.a(configs.c.obj)
 .debug_abbrev  0x0000000000000dc7      0x14a zephyr/libzephyr.a(soc.c.obj)
 .debug_abbrev  0x0000000000000f11      0x12b zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_abbrev  0x000000000000103c      0x39a zephyr/libzephyr.a(loader.c.obj)
 .debug_abbrev  0x00000000000013d6      0x15f zephyr/libzephyr.a(hw_init.c.obj)
 .debug_abbrev  0x0000000000001535       0x5e zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x0000000000001593       0xce zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_abbrev  0x0000000000001661      0x1e6 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_abbrev  0x0000000000001847      0x45f zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_abbrev  0x0000000000001ca6      0x59f zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_abbrev  0x0000000000002245      0x4f8 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_abbrev  0x000000000000273d      0x415 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_abbrev  0x0000000000002b52      0x614 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_abbrev  0x0000000000003166      0x5d7 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_abbrev  0x000000000000373d      0x49d zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_abbrev  0x0000000000003bda      0x228 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_abbrev  0x0000000000003e02      0x473 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_abbrev  0x0000000000004275      0x1d8 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_abbrev  0x000000000000444d      0x142 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_abbrev  0x000000000000458f      0x315 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_abbrev  0x00000000000048a4      0x507 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_abbrev  0x0000000000004dab      0x254 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_abbrev  0x0000000000004fff      0x20e zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_abbrev  0x000000000000520d      0x40f zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_abbrev  0x000000000000561c      0x1d8 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_abbrev  0x00000000000057f4      0x329 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_abbrev  0x0000000000005b1d      0x1f0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_abbrev  0x0000000000005d0d      0x483 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_abbrev  0x0000000000006190      0x3c4 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x0000000000006554      0x2b4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x0000000000006808      0x10f zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_abbrev  0x0000000000006917      0x12b zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_abbrev  0x0000000000006a42      0x12a zephyr/libzephyr.a(console_init.c.obj)
 .debug_abbrev  0x0000000000006b6c      0x3a2 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_abbrev  0x0000000000006f0e       0x70 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x0000000000006f7e       0xa1 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x000000000000701f      0x340 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_abbrev  0x000000000000735f      0x2e5 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_abbrev  0x0000000000007644      0x2c0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x0000000000007904      0x2e2 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_abbrev  0x0000000000007be6      0x3e8 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_abbrev  0x0000000000007fce      0x25f zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_abbrev  0x000000000000822d      0x109 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_abbrev  0x0000000000008336      0x11f zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_abbrev  0x0000000000008455      0x1b5 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_abbrev  0x000000000000860a      0x563 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x0000000000008b6d      0x4dd zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x000000000000904a      0x33d zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x0000000000009387      0x265 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x00000000000095ec      0x252 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_abbrev  0x000000000000983e      0x366 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_abbrev  0x0000000000009ba4       0x9b zephyr/libzephyr.a(systimer.c.obj)
 .debug_abbrev  0x0000000000009c3f      0x25c zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_abbrev  0x0000000000009e9b      0x479 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_abbrev  0x000000000000a314       0xbd zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_abbrev  0x000000000000a3d1       0xd0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_abbrev  0x000000000000a4a1      0x2a3 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_abbrev  0x000000000000a744      0x16f zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_abbrev  0x000000000000a8b3       0x69 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_abbrev  0x000000000000a91c      0x226 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_abbrev  0x000000000000ab42      0x1c2 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_abbrev  0x000000000000ad04      0x600 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x000000000000b304      0x436 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_abbrev  0x000000000000b73a      0x20a zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x000000000000b944      0x224 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_abbrev  0x000000000000bb68      0x310 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_abbrev  0x000000000000be78      0x38b zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_abbrev  0x000000000000c203      0x3d1 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_abbrev  0x000000000000c5d4      0x228 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_abbrev  0x000000000000c7fc      0x399 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x000000000000cb95      0x147 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x000000000000ccdc      0x457 zephyr/libzephyr.a(log.c.obj)
 .debug_abbrev  0x000000000000d133      0x471 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_abbrev  0x000000000000d5a4      0x6a1 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_abbrev  0x000000000000dc45      0x30e zephyr/libzephyr.a(flash_init.c.obj)
 .debug_abbrev  0x000000000000df53       0xaf zephyr/libzephyr.a(soc_random.c.obj)
 .debug_abbrev  0x000000000000e002      0x1ee zephyr/libzephyr.a(soc_init.c.obj)
 .debug_abbrev  0x000000000000e1f0      0x332 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_abbrev  0x000000000000e522       0x6b zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x000000000000e58d      0x136 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_abbrev  0x000000000000e6c3       0x8f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x000000000000e752      0x1fb zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x000000000000e94d       0x14 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x000000000000e961       0x12 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_abbrev  0x000000000000e973      0x1b3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x000000000000eb26      0x27e zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_abbrev  0x000000000000eda4      0x508 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_abbrev  0x000000000000f2ac      0x1a3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_abbrev  0x000000000000f44f       0x68 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_abbrev  0x000000000000f4b7      0x1f4 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_abbrev  0x000000000000f6ab       0xba zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_abbrev  0x000000000000f765      0x46d zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_abbrev  0x000000000000fbd2      0x295 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_abbrev  0x000000000000fe67      0x587 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x00000000000103ee      0x4a4 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x0000000000010892      0x356 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x0000000000010be8      0x60e zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x00000000000111f6       0xd0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_abbrev  0x00000000000112c6      0x444 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_abbrev  0x000000000001170a      0x598 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x0000000000011ca2      0x33c zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x0000000000011fde      0x1e1 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x00000000000121bf      0x342 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x0000000000012501      0x647 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x0000000000012b48      0x16e zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x0000000000012cb6      0x4b1 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_abbrev  0x0000000000013167      0x550 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x00000000000136b7      0x6cd zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x0000000000013d84      0x38e zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_abbrev  0x0000000000014112      0x493 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x00000000000145a5      0x416 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x00000000000149bb       0x8c zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x0000000000014a47      0x437 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_abbrev  0x0000000000014e7e       0xe7 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_line     0x0000000000000000    0x563b8
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000      0x284 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x0000000000000284      0xaf1 app/libapp.a(main.c.obj)
 .debug_line    0x0000000000000d75     0x1df8 zephyr/libzephyr.a(heap.c.obj)
 .debug_line    0x0000000000002b6d      0x526 zephyr/libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000003093      0x456 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_line    0x00000000000034e9      0x818 zephyr/libzephyr.a(configs.c.obj)
 .debug_line    0x0000000000003d01      0x4dc zephyr/libzephyr.a(soc.c.obj)
 .debug_line    0x00000000000041dd      0x2a2 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_line    0x000000000000447f     0x1329 zephyr/libzephyr.a(loader.c.obj)
 .debug_line    0x00000000000057a8      0x71a zephyr/libzephyr.a(hw_init.c.obj)
 .debug_line    0x0000000000005ec2       0xc3 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000005f85      0x24b zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_line    0x00000000000061d0      0x5e8 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_line    0x00000000000067b8      0xa03 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_line    0x00000000000071bb     0x1f4d zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_line    0x0000000000009108     0x15f9 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_line    0x000000000000a701      0x901 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_line    0x000000000000b002     0x3c98 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_line    0x000000000000ec9a     0x156b zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_line    0x0000000000010205     0x10e7 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_line    0x00000000000112ec      0x7e5 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_line    0x0000000000011ad1      0xf7b zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_line    0x0000000000012a4c      0x42e zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_line    0x0000000000012e7a      0x412 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_line    0x000000000001328c      0x63d zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_line    0x00000000000138c9     0x25cf zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_line    0x0000000000015e98      0x511 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_line    0x00000000000163a9      0x5a5 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_line    0x000000000001694e     0x14e4 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_line    0x0000000000017e32      0x42c zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_line    0x000000000001825e      0xb7d zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_line    0x0000000000018ddb      0x4f4 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_line    0x00000000000192cf      0xc7c zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_line    0x0000000000019f4b     0x15df zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_line    0x000000000001b52a      0x63c zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x000000000001bb66      0x37c zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_line    0x000000000001bee2      0x336 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_line    0x000000000001c218      0x2c6 zephyr/libzephyr.a(console_init.c.obj)
 .debug_line    0x000000000001c4de      0x9d7 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_line    0x000000000001ceb5      0x1c6 zephyr/libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x000000000001d07b      0x1ca zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x000000000001d245      0x923 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_line    0x000000000001db68      0xab4 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_line    0x000000000001e61c      0xd64 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x000000000001f380      0x68d zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_line    0x000000000001fa0d      0xd12 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_line    0x000000000002071f      0x853 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_line    0x0000000000020f72      0x24c zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_line    0x00000000000211be      0x31d zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_line    0x00000000000214db      0x8bd zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_line    0x0000000000021d98     0x1fec zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x0000000000023d84     0x17d3 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_line    0x0000000000025557      0x804 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x0000000000025d5b      0xf1a zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_line    0x0000000000026c75      0xf34 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_line    0x0000000000027ba9      0x858 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_line    0x0000000000028401      0x1cb zephyr/libzephyr.a(systimer.c.obj)
 .debug_line    0x00000000000285cc      0x6b6 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_line    0x0000000000028c82     0x3136 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_line    0x000000000002bdb8      0x2e5 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .debug_line    0x000000000002c09d      0x139 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_line    0x000000000002c1d6      0x4c2 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_line    0x000000000002c698      0x3e6 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_line    0x000000000002ca7e      0x201 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_line    0x000000000002cc7f      0x691 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_line    0x000000000002d310      0x5f0 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_line    0x000000000002d900     0x24bb zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_line    0x000000000002fdbb      0xb1a zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_line    0x00000000000308d5      0x4ef zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x0000000000030dc4      0x844 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_line    0x0000000000031608      0xcde zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_line    0x00000000000322e6      0xded zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_line    0x00000000000330d3     0x1705 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_line    0x00000000000347d8      0x832 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_line    0x000000000003500a      0x8ea zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x00000000000358f4      0x453 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_line    0x0000000000035d47      0xc41 zephyr/libzephyr.a(log.c.obj)
 .debug_line    0x0000000000036988      0xc60 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_line    0x00000000000375e8     0x1f01 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_line    0x00000000000394e9      0x83f zephyr/libzephyr.a(flash_init.c.obj)
 .debug_line    0x0000000000039d28      0x67b zephyr/libzephyr.a(soc_random.c.obj)
 .debug_line    0x000000000003a3a3      0x718 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_line    0x000000000003aabb      0xb30 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_line    0x000000000003b5eb       0xa2 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x000000000003b68d      0x278 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_line    0x000000000003b905      0x103 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x000000000003ba08      0x37d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x000000000003bd85      0x227 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x000000000003bfac      0x35d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_line    0x000000000003c309      0x3a3 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x000000000003c6ac      0x60f zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_line    0x000000000003ccbb     0x1587 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_line    0x000000000003e242      0x397 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_line    0x000000000003e5d9       0xdc zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_line    0x000000000003e6b5      0x3a9 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_line    0x000000000003ea5e      0x1c9 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_line    0x000000000003ec27      0x941 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_line    0x000000000003f568      0x510 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_line    0x000000000003fa78     0x2537 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x0000000000041faf     0x1276 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x0000000000043225      0x55a zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x000000000004377f     0x1e47 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x00000000000455c6      0x27d zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_line    0x0000000000045843     0x100b zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_line    0x000000000004684e      0xf73 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x00000000000477c1      0x88e zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x000000000004804f      0x599 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_line    0x00000000000485e8      0x665 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x0000000000048c4d     0x110b zephyr/kernel/libkernel.a(init.c.obj)
 .debug_line    0x0000000000049d58      0x335 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_line    0x000000000004a08d     0x183b zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_line    0x000000000004b8c8     0x10d7 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_line    0x000000000004c99f     0x5fda zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_line    0x0000000000052979      0x8c2 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_line    0x000000000005323b     0x1826 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x0000000000054a61      0xac4 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x0000000000055525       0xbb zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_line    0x00000000000555e0      0xc5c zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_line    0x000000000005623c      0x17c zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_frame    0x0000000000000000     0x5550
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x88 app/libapp.a(main.c.obj)
 .debug_frame   0x00000000000000b0      0x238 zephyr/libzephyr.a(heap.c.obj)
 .debug_frame   0x00000000000002e8       0xb8 zephyr/libzephyr.a(printk.c.obj)
 .debug_frame   0x00000000000003a0       0x28 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x00000000000003c8       0x28 zephyr/libzephyr.a(configs.c.obj)
 .debug_frame   0x00000000000003f0       0x70 zephyr/libzephyr.a(soc.c.obj)
 .debug_frame   0x0000000000000460       0x40 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_frame   0x00000000000004a0       0x40 zephyr/libzephyr.a(loader.c.obj)
 .debug_frame   0x00000000000004e0       0x28 zephyr/libzephyr.a(hw_init.c.obj)
 .debug_frame   0x0000000000000508       0x88 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000590       0x40 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_frame   0x00000000000005d0       0xa0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_frame   0x0000000000000670       0x70 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_frame   0x00000000000006e0      0x1f0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_frame   0x00000000000008d0       0xe8 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_frame   0x00000000000009b8       0x88 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_frame   0x0000000000000a40      0x2f8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_frame   0x0000000000000d38       0x88 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_frame   0x0000000000000dc0       0xd0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_frame   0x0000000000000e90       0x88 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_frame   0x0000000000000f18      0x130 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_frame   0x0000000000001048       0x40 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_frame   0x0000000000001088       0x88 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_frame   0x0000000000001110      0x2f8 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_frame   0x0000000000001408       0x70 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_frame   0x0000000000001478       0x58 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_frame   0x00000000000014d0      0x190 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_frame   0x0000000000001660       0x40 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_frame   0x00000000000016a0       0xa0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_frame   0x0000000000001740       0x88 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_frame   0x00000000000017c8      0x118 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_frame   0x00000000000018e0      0x2b0 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x0000000000001b90       0x88 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x0000000000001c18       0x28 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_frame   0x0000000000001c40       0x28 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_frame   0x0000000000001c68       0x40 zephyr/libzephyr.a(console_init.c.obj)
 .debug_frame   0x0000000000001ca8       0x70 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_frame   0x0000000000001d18      0x100 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_frame   0x0000000000001e18      0x100 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_frame   0x0000000000001f18      0x130 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x0000000000002048       0xd0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_frame   0x0000000000002118       0x88 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_frame   0x00000000000021a0       0x88 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_frame   0x0000000000002228       0x28 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_frame   0x0000000000002250       0x28 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_frame   0x0000000000002278       0x28 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_frame   0x00000000000022a0      0x2f8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x0000000000002598       0x70 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x0000000000002608       0x28 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x0000000000002630       0xd0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000002700       0x88 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_frame   0x0000000000002788      0x118 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_frame   0x00000000000028a0       0x40 zephyr/libzephyr.a(systimer.c.obj)
 .debug_frame   0x00000000000028e0       0xa0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_frame   0x0000000000002980      0x178 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_frame   0x0000000000002af8       0x40 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_frame   0x0000000000002b38       0x40 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_frame   0x0000000000002b78       0x28 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_frame   0x0000000000002ba0       0x28 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_frame   0x0000000000002bc8       0xa0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_frame   0x0000000000002c68       0x70 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_frame   0x0000000000002cd8      0x1d8 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x0000000000002eb0      0x118 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_frame   0x0000000000002fc8       0x88 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000003050      0x118 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_frame   0x0000000000003168       0xe8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_frame   0x0000000000003250      0x190 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_frame   0x00000000000033e0      0x118 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_frame   0x00000000000034f8       0xa0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_frame   0x0000000000003598       0xd0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000003668       0x70 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_frame   0x00000000000036d8       0xd0 zephyr/libzephyr.a(log.c.obj)
 .debug_frame   0x00000000000037a8       0xd0 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_frame   0x0000000000003878      0x280 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_frame   0x0000000000003af8       0x58 zephyr/libzephyr.a(flash_init.c.obj)
 .debug_frame   0x0000000000003b50       0x40 zephyr/libzephyr.a(soc_random.c.obj)
 .debug_frame   0x0000000000003b90       0xd0 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_frame   0x0000000000003c60       0xa0 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_frame   0x0000000000003d00       0x28 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x0000000000003d28       0x40 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_frame   0x0000000000003d68       0x40 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000003da8       0x58 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x0000000000003e00       0x70 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x0000000000003e70       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_frame   0x0000000000003e98      0x118 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_frame   0x0000000000003fb0       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_frame   0x0000000000003fd8       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_frame   0x0000000000004000       0x70 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_frame   0x0000000000004070       0x28 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_frame   0x0000000000004098       0xe8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_frame   0x0000000000004180       0x28 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_frame   0x00000000000041a8      0x1d8 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x0000000000004380       0xd0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x0000000000004450       0x58 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x00000000000044a8      0x130 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x00000000000045d8       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_frame   0x0000000000004600       0x28 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_frame   0x0000000000004628       0xa0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x00000000000046c8       0x88 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x0000000000004750       0x88 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_frame   0x00000000000047d8       0x70 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000004848      0x100 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000004948       0x40 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x0000000000004988      0x100 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_frame   0x0000000000004a88      0x178 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000004c00      0x460 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x0000000000005060       0x88 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_frame   0x00000000000050e8      0x190 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000005278      0x100 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x0000000000005378       0x28 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x00000000000053a0       0xd0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x0000000000005470       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .debug_frame   0x0000000000005498       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .debug_frame   0x00000000000054c0       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .debug_frame   0x00000000000054e8       0x40 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .debug_frame   0x0000000000005528       0x28 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)

.debug_str      0x0000000000000000    0x1c7b5
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x2f2 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
                                        0x32b (size before relaxing)
 .debug_str     0x00000000000002f2      0x821 app/libapp.a(main.c.obj)
                                        0xa4d (size before relaxing)
 .debug_str     0x0000000000000b13      0x3d6 zephyr/libzephyr.a(heap.c.obj)
                                        0x6c9 (size before relaxing)
 .debug_str     0x0000000000000ee9      0x14c zephyr/libzephyr.a(printk.c.obj)
                                        0x53f (size before relaxing)
 .debug_str     0x0000000000001035       0x91 zephyr/libzephyr.a(thread_entry.c.obj)
                                        0x525 (size before relaxing)
 .debug_str     0x00000000000010c6       0x57 zephyr/libzephyr.a(configs.c.obj)
                                        0x194 (size before relaxing)
 .debug_str     0x000000000000111d      0x142 zephyr/libzephyr.a(soc.c.obj)
                                        0x35a (size before relaxing)
 .debug_str     0x000000000000125f      0x1a5 zephyr/libzephyr.a(soc_cache.c.obj)
                                        0x3f5 (size before relaxing)
 .debug_str     0x0000000000001404      0x750 zephyr/libzephyr.a(loader.c.obj)
                                        0xe2f (size before relaxing)
 .debug_str     0x0000000000001b54      0x183 zephyr/libzephyr.a(hw_init.c.obj)
                                        0x6cc (size before relaxing)
 .debug_str     0x0000000000001cd7       0xac zephyr/libzephyr.a(tracing_none.c.obj)
                                        0x284 (size before relaxing)
 .debug_str     0x0000000000001d83       0xaa zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                        0x45d (size before relaxing)
 .debug_str     0x0000000000001e2d      0x2d9 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x4f3 (size before relaxing)
 .debug_str     0x0000000000002106     0x252a zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                       0x2da2 (size before relaxing)
 .debug_str     0x0000000000004630      0x776 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                       0x304b (size before relaxing)
 .debug_str     0x0000000000004da6      0x3b9 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                       0x2d2d (size before relaxing)
 .debug_str     0x000000000000515f      0x7c4 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                        0xc38 (size before relaxing)
 .debug_str     0x0000000000005923      0x977 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                       0x200d (size before relaxing)
 .debug_str     0x000000000000629a      0xe41 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                       0x3e62 (size before relaxing)
 .debug_str     0x00000000000070db      0x3b8 zephyr/libzephyr.a(flash_mmap.c.obj)
                                        0x7dd (size before relaxing)
 .debug_str     0x0000000000007493      0x324 zephyr/libzephyr.a(flash_ops.c.obj)
                                        0x63a (size before relaxing)
 .debug_str     0x00000000000077b7      0x20b zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                       0x31a3 (size before relaxing)
 .debug_str     0x00000000000079c2      0x39d zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
                                        0xc18 (size before relaxing)
 .debug_str     0x0000000000007d5f      0x10c zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
                                        0x9a8 (size before relaxing)
 .debug_str     0x0000000000007e6b      0x277 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0xceb (size before relaxing)
 .debug_str     0x00000000000080e2      0x44b zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                       0x14c3 (size before relaxing)
 .debug_str     0x000000000000852d       0xd5 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                        0xcb9 (size before relaxing)
 .debug_str     0x0000000000008602       0xb5 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                                        0xd09 (size before relaxing)
 .debug_str     0x00000000000086b7      0x2c1 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                        0xfa0 (size before relaxing)
 .debug_str     0x0000000000008978       0x8f zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
                                        0xc10 (size before relaxing)
 .debug_str     0x0000000000008a07      0x116 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0xda7 (size before relaxing)
 .debug_str     0x0000000000008b1d       0xbf zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                        0x73e (size before relaxing)
 .debug_str     0x0000000000008bdc      0x23d zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                        0xaeb (size before relaxing)
 .debug_str     0x0000000000008e19     0x17b2 zephyr/libzephyr.a(uart_hal.c.obj)
                                       0x1ba2 (size before relaxing)
 .debug_str     0x000000000000a5cb      0x177 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                       0x124b (size before relaxing)
 .debug_str     0x000000000000a742      0x24c zephyr/libzephyr.a(bootloader_clock_init.c.obj)
                                        0x4a0 (size before relaxing)
 .debug_str     0x000000000000a98e      0x11b zephyr/libzephyr.a(mpu_hal.c.obj)
                                        0x301 (size before relaxing)
 .debug_str     0x000000000000aaa9       0xe9 zephyr/libzephyr.a(console_init.c.obj)
                                        0x344 (size before relaxing)
 .debug_str     0x000000000000ab92     0x4bed zephyr/libzephyr.a(soc_init.c.obj)
                                       0x5a1f (size before relaxing)
 .debug_str     0x000000000000f77f       0x67 zephyr/libzephyr.a(gpio_periph.c.obj)
                                        0x24d (size before relaxing)
 .debug_str     0x000000000000f7e6       0xb5 zephyr/libzephyr.a(rtc_io_periph.c.obj)
                                        0x2a4 (size before relaxing)
 .debug_str     0x000000000000f89b      0x2f2 zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x82e (size before relaxing)
 .debug_str     0x000000000000fb8d      0x26b zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x6ee (size before relaxing)
 .debug_str     0x000000000000fdf8      0x280 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0xa03 (size before relaxing)
 .debug_str     0x0000000000010078      0x33a zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                        0x6ba (size before relaxing)
 .debug_str     0x00000000000103b2      0xbe8 zephyr/libzephyr.a(rtc_module.c.obj)
                                       0x3730 (size before relaxing)
 .debug_str     0x0000000000010f9a      0x34e zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x671 (size before relaxing)
 .debug_str     0x00000000000112e8       0x7f zephyr/libzephyr.a(cpu_region_protect.c.obj)
                                        0x2ec (size before relaxing)
 .debug_str     0x0000000000011367      0x112 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
                                        0x4dc (size before relaxing)
 .debug_str     0x0000000000011479      0x113 zephyr/libzephyr.a(esp_clk_tree.c.obj)
                                        0x6d8 (size before relaxing)
 .debug_str     0x000000000001158c      0x9ba zephyr/libzephyr.a(rtc_clk.c.obj)
                                       0x10f7 (size before relaxing)
 .debug_str     0x0000000000011f46      0x61b zephyr/libzephyr.a(rtc_init.c.obj)
                                       0x338f (size before relaxing)
 .debug_str     0x0000000000012561      0x15d zephyr/libzephyr.a(rtc_clk_init.c.obj)
                                        0xb3f (size before relaxing)
 .debug_str     0x00000000000126be      0x1f8 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x686 (size before relaxing)
 .debug_str     0x00000000000128b6      0x21c zephyr/libzephyr.a(rtc_sleep.c.obj)
                                        0x63c (size before relaxing)
 .debug_str     0x0000000000012ad2      0xcbe zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                                       0x1770 (size before relaxing)
 .debug_str     0x0000000000013790       0x8f zephyr/libzephyr.a(systimer.c.obj)
                                        0x26a (size before relaxing)
 .debug_str     0x000000000001381f      0x1cd zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                        0x53b (size before relaxing)
 .debug_str     0x00000000000139ec      0x49e zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                        0xc45 (size before relaxing)
 .debug_str     0x0000000000013e8a       0x63 zephyr/libzephyr.a(ext_mem_layout.c.obj)
                                        0x37a (size before relaxing)
 .debug_str     0x0000000000013eed       0xd6 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                        0x2c3 (size before relaxing)
 .debug_str     0x0000000000013fc3      0x31a zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                       0x148b (size before relaxing)
 .debug_str     0x00000000000142dd       0x99 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
                                        0x533 (size before relaxing)
 .debug_str     0x0000000000014376       0x74 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
                                        0x283 (size before relaxing)
 .debug_str     0x00000000000143ea      0x1f6 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                        0x4c3 (size before relaxing)
 .debug_str     0x00000000000145e0      0x491 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x765 (size before relaxing)
 .debug_str     0x0000000000014a71      0x557 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0xcba (size before relaxing)
 .debug_str     0x0000000000014fc8      0xa39 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                       0x1eb4 (size before relaxing)
 .debug_str     0x0000000000015a01      0x146 zephyr/libzephyr.a(efuse_hal.c.obj)
                                       0x2a53 (size before relaxing)
 .debug_str     0x0000000000015b47      0x1b2 zephyr/libzephyr.a(cache_hal.c.obj)
                                        0x679 (size before relaxing)
 .debug_str     0x0000000000015cf9      0x288 zephyr/libzephyr.a(mmu_hal.c.obj)
                                        0x62d (size before relaxing)
 .debug_str     0x0000000000015f81      0x343 zephyr/libzephyr.a(systimer_hal.c.obj)
                                        0xe8d (size before relaxing)
 .debug_str     0x00000000000162c4      0x673 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                       0x3627 (size before relaxing)
 .debug_str     0x0000000000016937       0x9b zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                        0x740 (size before relaxing)
 .debug_str     0x00000000000169d2      0x395 zephyr/libzephyr.a(efuse_hal.c.obj)
                                       0x2c9c (size before relaxing)
 .debug_str     0x0000000000016d67       0xa5 zephyr/libzephyr.a(log_noos.c.obj)
                                        0x4b9 (size before relaxing)
 .debug_str     0x0000000000016e0c      0x266 zephyr/libzephyr.a(log.c.obj)
                                        0x5fc (size before relaxing)
 .debug_str     0x0000000000017072      0x3a8 zephyr/libzephyr.a(cache_utils.c.obj)
                                        0xcf0 (size before relaxing)
 .debug_str     0x000000000001741a      0x57f zephyr/libzephyr.a(bootloader_flash.c.obj)
                                       0x54aa (size before relaxing)
 .debug_str     0x0000000000017999       0x68 zephyr/libzephyr.a(flash_init.c.obj)
                                       0x2da2 (size before relaxing)
 .debug_str     0x0000000000017a01       0x53 zephyr/libzephyr.a(soc_random.c.obj)
                                        0x27f (size before relaxing)
 .debug_str     0x0000000000017a54       0xe5 zephyr/libzephyr.a(soc_init.c.obj)
                                        0x65b (size before relaxing)
 .debug_str     0x0000000000017b39      0x2b9 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                        0x94e (size before relaxing)
 .debug_str     0x0000000000017df2       0x57 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0x239 (size before relaxing)
 .debug_str     0x0000000000017e49       0x73 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                        0x2b8 (size before relaxing)
 .debug_str     0x0000000000017ebc       0x63 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                        0x24a (size before relaxing)
 .debug_str     0x0000000000017f1f      0x145 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                        0x3ef (size before relaxing)
 .debug_str     0x0000000000018064       0x52 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x7a (size before relaxing)
 .debug_str     0x00000000000180b6       0x48 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x7c (size before relaxing)
 .debug_str     0x00000000000180fe      0x113 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                        0x475 (size before relaxing)
 .debug_str     0x0000000000018211      0x14a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                                        0x699 (size before relaxing)
 .debug_str     0x000000000001835b      0x340 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0xaca (size before relaxing)
 .debug_str     0x000000000001869b       0x4c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                        0x504 (size before relaxing)
 .debug_str     0x00000000000186e7       0x3f zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                                        0x237 (size before relaxing)
 .debug_str     0x0000000000018726       0xaf zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                                        0x4a0 (size before relaxing)
 .debug_str     0x00000000000187d5      0x186 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                        0x2dd (size before relaxing)
 .debug_str     0x000000000001895b      0x16d zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x7d3 (size before relaxing)
 .debug_str     0x0000000000018ac8       0xf9 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
                                        0x52c (size before relaxing)
 .debug_str     0x0000000000018bc1      0x3fc zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa1f (size before relaxing)
 .debug_str     0x0000000000018fbd      0x468 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x15af (size before relaxing)
 .debug_str     0x0000000000019425      0x18a zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                        0x59f (size before relaxing)
 .debug_str     0x00000000000195af     0x11ea zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x310d (size before relaxing)
 .debug_str     0x000000000001a799       0xbc zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                                        0x2cc (size before relaxing)
 .debug_str     0x000000000001a855      0x129 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                       0x2759 (size before relaxing)
 .debug_str     0x000000000001a97e      0x658 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x2391 (size before relaxing)
 .debug_str     0x000000000001afd6       0xe5 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x4a8 (size before relaxing)
 .debug_str     0x000000000001b0bb       0xc9 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x35a (size before relaxing)
 .debug_str     0x000000000001b184       0x74 zephyr/kernel/libkernel.a(fatal.c.obj)
                                        0x68c (size before relaxing)
 .debug_str     0x000000000001b1f8      0x4fa zephyr/kernel/libkernel.a(init.c.obj)
                                        0xd36 (size before relaxing)
 .debug_str     0x000000000001b6f2       0x56 zephyr/kernel/libkernel.a(idle.c.obj)
                                        0x30e (size before relaxing)
 .debug_str     0x000000000001b748      0x260 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                        0x8c7 (size before relaxing)
 .debug_str     0x000000000001b9a8      0x271 zephyr/kernel/libkernel.a(thread.c.obj)
                                        0xa5d (size before relaxing)
 .debug_str     0x000000000001bc19      0x6b4 zephyr/kernel/libkernel.a(sched.c.obj)
                                       0x124f (size before relaxing)
 .debug_str     0x000000000001c2cd      0x100 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                        0x8e4 (size before relaxing)
 .debug_str     0x000000000001c3cd      0x175 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x7b3 (size before relaxing)
 .debug_str     0x000000000001c542       0xf5 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x89d (size before relaxing)
 .debug_str     0x000000000001c637       0x34 zephyr/kernel/libkernel.a(banner.c.obj)
                                        0x21f (size before relaxing)
 .debug_str     0x000000000001c66b       0xe9 zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x7b6 (size before relaxing)
 .debug_str     0x000000000001c754       0x61 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
                                        0x282 (size before relaxing)

.debug_loc      0x0000000000000000    0x20d77
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x285 app/libapp.a(main.c.obj)
 .debug_loc     0x0000000000000285     0x1c74 zephyr/libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000001ef9       0xe4 zephyr/libzephyr.a(printk.c.obj)
 .debug_loc     0x0000000000001fdd       0x15 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x0000000000001ff2       0x25 zephyr/libzephyr.a(soc.c.obj)
 .debug_loc     0x0000000000002017       0x62 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_loc     0x0000000000002079      0x52e zephyr/libzephyr.a(loader.c.obj)
 .debug_loc     0x00000000000025a7       0x23 zephyr/libzephyr.a(hw_init.c.obj)
 .debug_loc     0x00000000000025ca       0x4c zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_loc     0x0000000000002616      0x16b zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_loc     0x0000000000002781      0x274 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_loc     0x00000000000029f5      0xeab zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_loc     0x00000000000038a0      0xb11 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_loc     0x00000000000043b1      0x15c zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_loc     0x000000000000450d     0x1942 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_loc     0x0000000000005e4f      0x6dd zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_loc     0x000000000000652c      0x9dc zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_loc     0x0000000000006f08      0x23d zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_loc     0x0000000000007145      0x605 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_loc     0x000000000000774a       0xc3 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_loc     0x000000000000780d      0x23a zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_loc     0x0000000000007a47     0x121d zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_loc     0x0000000000008c64      0x122 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_loc     0x0000000000008d86       0xed zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_loc     0x0000000000008e73      0x7c9 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_loc     0x000000000000963c       0xc3 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_loc     0x00000000000096ff      0x785 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_loc     0x0000000000009e84       0xb9 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_loc     0x0000000000009f3d      0x32f zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_loc     0x000000000000a26c      0xdf3 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x000000000000b05f      0x2c8 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x000000000000b327       0xd5 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_loc     0x000000000000b3fc      0x11f zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_loc     0x000000000000b51b       0x2a zephyr/libzephyr.a(console_init.c.obj)
 .debug_loc     0x000000000000b545      0x119 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_loc     0x000000000000b65e       0xa4 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_loc     0x000000000000b702      0x2ee zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_loc     0x000000000000b9f0      0x380 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x000000000000bd70       0x38 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_loc     0x000000000000bda8      0x42b zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_loc     0x000000000000c1d3      0x1c6 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_loc     0x000000000000c399       0x3f zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_loc     0x000000000000c3d8       0x4a zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_loc     0x000000000000c422      0x1af zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_loc     0x000000000000c5d1      0xab7 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x000000000000d088      0x71e zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x000000000000d7a6       0x98 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x000000000000d83e      0x483 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x000000000000dcc1      0x16e zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_loc     0x000000000000de2f       0xec zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_loc     0x000000000000df1b       0x58 zephyr/libzephyr.a(systimer.c.obj)
 .debug_loc     0x000000000000df73      0x286 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_loc     0x000000000000e1f9     0x23fc zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_loc     0x00000000000105f5      0x18a zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_loc     0x000000000001077f       0x4a zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_loc     0x00000000000107c9       0x56 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_loc     0x000000000001081f      0x3a7 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_loc     0x0000000000010bc6      0x12e zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_loc     0x0000000000010cf4      0xf9f zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x0000000000011c93      0x226 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_loc     0x0000000000011eb9       0x45 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x0000000000011efe      0x1e2 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_loc     0x00000000000120e0      0xa1e zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_loc     0x0000000000012afe      0xa76 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_loc     0x0000000000013574      0xe37 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_loc     0x00000000000143ab      0x15d zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_loc     0x0000000000014508      0x123 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x000000000001462b       0x15 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_loc     0x0000000000014640      0x549 zephyr/libzephyr.a(log.c.obj)
 .debug_loc     0x0000000000014b89      0x152 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_loc     0x0000000000014cdb      0xec7 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_loc     0x0000000000015ba2       0x15 zephyr/libzephyr.a(flash_init.c.obj)
 .debug_loc     0x0000000000015bb7      0x1b6 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_loc     0x0000000000015d6d      0x1c5 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_loc     0x0000000000015f32       0x15 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x0000000000015f47       0x15 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_loc     0x0000000000015f5c       0x71 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x0000000000015fcd       0x3a zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_loc     0x0000000000016007      0x10d zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_loc     0x0000000000016114      0x98b zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_loc     0x0000000000016a9f       0x98 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_loc     0x0000000000016b37      0x360 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_loc     0x0000000000016e97       0x86 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_loc     0x0000000000016f1d     0x1366 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x0000000000018283      0x727 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x00000000000189aa       0x56 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x0000000000018a00     0x10cd zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x0000000000019acd       0x42 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_loc     0x0000000000019b0f      0x6af zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_loc     0x000000000001a1be      0x4ff zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x000000000001a6bd      0x285 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x000000000001a942      0x10d zephyr/kernel/libkernel.a(device.c.obj)
 .debug_loc     0x000000000001aa4f       0x69 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x000000000001aab8      0x471 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_loc     0x000000000001af29       0x3f zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x000000000001af68      0xaee zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_loc     0x000000000001ba56      0x6e1 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x000000000001c137     0x337b zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x000000000001f4b2      0x205 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_loc     0x000000000001f6b7      0xb9b zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x0000000000020252      0x62d zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_loc     0x000000000002087f      0x4f8 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x4ef0
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078       0x48 app/libapp.a(main.c.obj)
 .debug_ranges  0x00000000000000c0      0x298 zephyr/libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000358       0x40 zephyr/libzephyr.a(printk.c.obj)
 .debug_ranges  0x0000000000000398       0x10 zephyr/libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x00000000000003a8       0x10 zephyr/libzephyr.a(configs.c.obj)
 .debug_ranges  0x00000000000003b8       0x28 zephyr/libzephyr.a(soc.c.obj)
 .debug_ranges  0x00000000000003e0       0x18 zephyr/libzephyr.a(soc_cache.c.obj)
 .debug_ranges  0x00000000000003f8       0x18 zephyr/libzephyr.a(loader.c.obj)
 .debug_ranges  0x0000000000000410       0x10 zephyr/libzephyr.a(hw_init.c.obj)
 .debug_ranges  0x0000000000000420       0x30 zephyr/libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x0000000000000450       0x18 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_ranges  0x0000000000000468       0x70 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_ranges  0x00000000000004d8       0x40 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .debug_ranges  0x0000000000000518      0x3a8 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_ranges  0x00000000000008c0      0x238 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_ranges  0x0000000000000af8       0x58 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_ranges  0x0000000000000b50      0x2a8 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .debug_ranges  0x0000000000000df8       0xe8 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_ranges  0x0000000000000ee0       0xd0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .debug_ranges  0x0000000000000fb0       0x48 zephyr/libzephyr.a(flash_ops.c.obj)
 .debug_ranges  0x0000000000000ff8       0x80 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .debug_ranges  0x0000000000001078       0x18 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_ranges  0x0000000000001090       0x48 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_ranges  0x00000000000010d8      0x168 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_ranges  0x0000000000001240       0x28 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_ranges  0x0000000000001268       0x20 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_ranges  0x0000000000001288       0xa0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_ranges  0x0000000000001328       0x18 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_ranges  0x0000000000001340       0x80 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_ranges  0x00000000000013c0       0x30 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_ranges  0x00000000000013f0       0xa8 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_ranges  0x0000000000001498      0x1a8 zephyr/libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x0000000000001640       0x60 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x00000000000016a0       0x10 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .debug_ranges  0x00000000000016b0       0x10 zephyr/libzephyr.a(mpu_hal.c.obj)
 .debug_ranges  0x00000000000016c0       0x18 zephyr/libzephyr.a(console_init.c.obj)
 .debug_ranges  0x00000000000016d8       0x60 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_ranges  0x0000000000001738       0x70 zephyr/libzephyr.a(esp_clk.c.obj)
 .debug_ranges  0x00000000000017a8       0xd0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .debug_ranges  0x0000000000001878      0x148 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x00000000000019c0       0x48 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_ranges  0x0000000000001a08       0x88 zephyr/libzephyr.a(rtc_module.c.obj)
 .debug_ranges  0x0000000000001a90       0x48 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_ranges  0x0000000000001ad8       0x28 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .debug_ranges  0x0000000000001b00       0x10 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .debug_ranges  0x0000000000001b10       0x10 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .debug_ranges  0x0000000000001b20      0x2f8 zephyr/libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000001e18      0x168 zephyr/libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x0000000000001f80       0x40 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x0000000000001fc0      0x1a0 zephyr/libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x0000000000002160       0x30 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .debug_ranges  0x0000000000002190       0x60 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_ranges  0x00000000000021f0       0x18 zephyr/libzephyr.a(systimer.c.obj)
 .debug_ranges  0x0000000000002208       0x80 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .debug_ranges  0x0000000000002288      0x328 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .debug_ranges  0x00000000000025b0       0x18 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .debug_ranges  0x00000000000025c8       0x18 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .debug_ranges  0x00000000000025e0       0x10 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_ranges  0x00000000000025f0       0x10 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .debug_ranges  0x0000000000002600       0x38 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_ranges  0x0000000000002638       0x40 zephyr/libzephyr.a(reset_reason.c.obj)
 .debug_ranges  0x0000000000002678      0x1f8 zephyr/libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x0000000000002870       0x90 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_ranges  0x0000000000002900       0x88 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x0000000000002988       0x60 zephyr/libzephyr.a(cache_hal.c.obj)
 .debug_ranges  0x00000000000029e8      0x1e8 zephyr/libzephyr.a(mmu_hal.c.obj)
 .debug_ranges  0x0000000000002bd0      0x140 zephyr/libzephyr.a(systimer_hal.c.obj)
 .debug_ranges  0x0000000000002d10      0x1a0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .debug_ranges  0x0000000000002eb0       0xd0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .debug_ranges  0x0000000000002f80       0xd8 zephyr/libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x0000000000003058       0x28 zephyr/libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000003080       0xa0 zephyr/libzephyr.a(log.c.obj)
 .debug_ranges  0x0000000000003120       0x60 zephyr/libzephyr.a(cache_utils.c.obj)
 .debug_ranges  0x0000000000003180      0x170 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .debug_ranges  0x00000000000032f0       0x38 zephyr/libzephyr.a(flash_init.c.obj)
 .debug_ranges  0x0000000000003328       0x18 zephyr/libzephyr.a(soc_random.c.obj)
 .debug_ranges  0x0000000000003340       0x90 zephyr/libzephyr.a(soc_init.c.obj)
 .debug_ranges  0x00000000000033d0       0x38 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .debug_ranges  0x0000000000003408       0x10 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x0000000000003418       0x18 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_ranges  0x0000000000003430       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000003448       0x20 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000003468       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000003490       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_ranges  0x00000000000034a0      0x140 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_ranges  0x00000000000035e0       0x10 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_ranges  0x00000000000035f0       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .debug_ranges  0x0000000000003600       0x28 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .debug_ranges  0x0000000000003628       0x10 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_ranges  0x0000000000003638       0x68 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_ranges  0x00000000000036a0       0x28 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .debug_ranges  0x00000000000036c8      0x248 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x0000000000003910       0xa8 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x00000000000039b8       0x38 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x00000000000039f0      0x170 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x0000000000003b60       0x10 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_ranges  0x0000000000003b70      0x1c0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_ranges  0x0000000000003d30       0xd8 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x0000000000003e08       0x48 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x0000000000003e50       0x68 zephyr/kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x0000000000003eb8       0x40 zephyr/kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x0000000000003ef8       0xc0 zephyr/kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000003fb8       0x18 zephyr/kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x0000000000003fd0      0x1b8 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .debug_ranges  0x0000000000004188      0x160 zephyr/kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x00000000000042e8      0x8d0 zephyr/kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x0000000000004bb8       0x30 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .debug_ranges  0x0000000000004be8      0x1b0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x0000000000004d98       0x70 zephyr/kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x0000000000004e08       0x10 zephyr/kernel/libkernel.a(banner.c.obj)
 .debug_ranges  0x0000000000004e18       0xd8 zephyr/kernel/libkernel.a(kheap.c.obj)

.debug_addr
 *(SORT_BY_ALIGNMENT(.debug_addr))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_names
 *(SORT_BY_ALIGNMENT(.debug_names))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.debug_str_offsets
 *(SORT_BY_ALIGNMENT(.debug_str_offsets))

.debug_sup
 *(SORT_BY_ALIGNMENT(.debug_sup))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 zephyr/CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_cache.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp32s3-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hw_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_flash_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_ops.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(memspi_host_driver.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mpu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(console_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_module.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(hw_random.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(rtc_sleep.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mspi_timing_config.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_mmu_map.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_crc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_sys.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_uart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_gpio.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_wdt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_err.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(system_internal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(reset_reason.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cache_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(mmu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(systimer_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(clk_tree_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(cache_utils.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(bootloader_flash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(flash_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_random.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/libzephyr.a(soc_flash_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(msg_q.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .xtensa.info   0x0000000000000038        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

.xt.insn
 *(SORT_BY_ALIGNMENT(.xt.insn))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.x.*))

.xt.prop        0x0000000000000000     0xab00
 *(SORT_BY_ALIGNMENT(.xt.prop))
 .xt.prop       0x0000000000000000       0x24 zephyr/CMakeFiles/offsets.dir/./arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000024      0x258 app/libapp.a(main.c.obj)
                                        0x2b8 (size before relaxing)
 .xt.prop       0x000000000000027c      0x3a8 zephyr/libzephyr.a(heap.c.obj)
                                        0x6b4 (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                        0x75c (size before relaxing)
 .xt.prop       0x0000000000000624       0xc0 zephyr/libzephyr.a(printk.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x00000000000006e4        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x00000000000006e4       0x24 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                        0x9fc (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(dec.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(hex.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(rb.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                        0x720 (size before relaxing)
 .xt.prop       0x0000000000000708        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x0000000000000708       0x24 zephyr/libzephyr.a(configs.c.obj)
 .xt.prop       0x000000000000072c       0x60 zephyr/libzephyr.a(soc.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x000000000000078c       0x60 zephyr/libzephyr.a(soc_cache.c.obj)
 .xt.prop       0x00000000000007ec      0x240 zephyr/libzephyr.a(loader.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x0000000000000a2c       0x54 zephyr/libzephyr.a(hw_init.c.obj)
 .xt.prop       0x0000000000000a80       0x24 zephyr/libzephyr.a(tracing_none.c.obj)
                                         0xb4 (size before relaxing)
 .xt.prop       0x0000000000000aa4        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x0000000000000aa4       0x3c zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x0000000000000ae0      0x120 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000000c00      0x1a4 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000000da4      0x48c zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x558 (size before relaxing)
 .xt.prop       0x0000000000001230      0x294 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                        0x2ac (size before relaxing)
 .xt.prop       0x00000000000014c4      0x15c zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x0000000000001620      0x3e4 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                       0x102c (size before relaxing)
 .xt.prop       0x0000000000001a04       0xc0 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000001ac4       0x6c zephyr/libzephyr.a(flash_mmap.c.obj)
                                        0x354 (size before relaxing)
 .xt.prop       0x0000000000001b30      0x18c zephyr/libzephyr.a(flash_ops.c.obj)
                                        0x204 (size before relaxing)
 .xt.prop       0x0000000000001cbc      0x2c4 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                        0x348 (size before relaxing)
 .xt.prop       0x0000000000001f80       0x60 zephyr/libzephyr.a(spi_flash_chip_boya.c.obj)
 .xt.prop       0x0000000000001fe0       0x18 zephyr/libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xt.prop       0x0000000000001ff8      0x120 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000002118      0x978 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                        0xa2c (size before relaxing)
 .xt.prop       0x0000000000002a90       0xc0 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000002b50       0xb4 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                                         0xc0 (size before relaxing)
 .xt.prop       0x0000000000002c04      0x414 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                        0x450 (size before relaxing)
 .xt.prop       0x0000000000003018       0x60 zephyr/libzephyr.a(spi_flash_chip_th.c.obj)
 .xt.prop       0x0000000000003078      0x198 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000003210        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000003210       0x84 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0xf0 (size before relaxing)
 .xt.prop       0x0000000000003294      0x1d4 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                        0x2c4 (size before relaxing)
 .xt.prop       0x0000000000003468        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
                                        0x21c (size before relaxing)
 .xt.prop       0x0000000000003468      0x384 zephyr/libzephyr.a(uart_hal.c.obj)
                                        0x588 (size before relaxing)
 .xt.prop       0x00000000000037ec       0xe4 zephyr/libzephyr.a(uart_hal_iram.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x00000000000038d0       0x3c zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xt.prop       0x000000000000390c       0x9c zephyr/libzephyr.a(mpu_hal.c.obj)
 .xt.prop       0x00000000000039a8        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x00000000000039a8        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x00000000000039a8       0x24 zephyr/libzephyr.a(console_init.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x00000000000039cc      0x138 zephyr/libzephyr.a(soc_init.c.obj)
 .xt.prop       0x0000000000003b04        0xc zephyr/libzephyr.a(gpio_periph.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x0000000000003b10       0x18 zephyr/libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x0000000000003b28        0x0 zephyr/libzephyr.a(cpu.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x0000000000003b28        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                                         0xc0 (size before relaxing)
 .xt.prop       0x0000000000003b28       0x6c zephyr/libzephyr.a(esp_clk.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x0000000000003b94       0x90 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000003c24        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                        0x4a4 (size before relaxing)
 .xt.prop       0x0000000000003c24      0x39c zephyr/libzephyr.a(periph_ctrl.c.obj)
                                        0x594 (size before relaxing)
 .xt.prop       0x0000000000003fc0      0x144 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x0000000000004104       0x90 zephyr/libzephyr.a(rtc_module.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000004194        0x0 zephyr/libzephyr.a(hw_random.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000004194        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
                                       0x105c (size before relaxing)
 .xt.prop       0x0000000000004194      0x1a4 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000004338       0x48 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xt.prop       0x0000000000004380       0x54 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .xt.prop       0x00000000000043d4      0x198 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xt.prop       0x000000000000456c      0x6d8 zephyr/libzephyr.a(rtc_clk.c.obj)
                                        0x99c (size before relaxing)
 .xt.prop       0x0000000000004c44      0x1c8 zephyr/libzephyr.a(rtc_init.c.obj)
                                        0x240 (size before relaxing)
 .xt.prop       0x0000000000004e0c       0x60 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x0000000000004e6c      0x240 zephyr/libzephyr.a(rtc_time.c.obj)
                                        0x30c (size before relaxing)
 .xt.prop       0x00000000000050ac       0x60 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                        0x27c (size before relaxing)
 .xt.prop       0x000000000000510c       0x30 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x000000000000513c       0x48 zephyr/libzephyr.a(systimer.c.obj)
 .xt.prop       0x0000000000005184       0xd8 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x000000000000525c      0x180 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                        0x960 (size before relaxing)
 .xt.prop       0x00000000000053dc        0xc zephyr/libzephyr.a(ext_mem_layout.c.obj)
 .xt.prop       0x00000000000053e8       0x30 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000005418       0x54 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x000000000000546c       0x54 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .xt.prop       0x00000000000054c0       0x48 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .xt.prop       0x0000000000005508        0x0 zephyr/libzephyr.a(esp_rom_longjmp.S.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000005508       0xf0 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                        0x1b0 (size before relaxing)
 .xt.prop       0x00000000000055f8        0x0 zephyr/libzephyr.a(esp_err.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000055f8        0x0 zephyr/libzephyr.a(clk.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000055f8        0x0 zephyr/libzephyr.a(system_internal.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x00000000000055f8      0x180 zephyr/libzephyr.a(reset_reason.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000005778        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                        0x1b0 (size before relaxing)
 .xt.prop       0x0000000000005778       0x24 zephyr/libzephyr.a(esp_timer.c.obj)
                                        0x75c (size before relaxing)
 .xt.prop       0x000000000000579c        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
                                         0xf0 (size before relaxing)
 .xt.prop       0x000000000000579c       0x48 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x00000000000057e4       0x24 zephyr/libzephyr.a(efuse_hal.c.obj)
                                        0x114 (size before relaxing)
 .xt.prop       0x0000000000005808      0x1c8 zephyr/libzephyr.a(cache_hal.c.obj)
                                        0x390 (size before relaxing)
 .xt.prop       0x00000000000059d0      0x1c8 zephyr/libzephyr.a(mmu_hal.c.obj)
                                        0x2a0 (size before relaxing)
 .xt.prop       0x0000000000005b98      0x12c zephyr/libzephyr.a(systimer_hal.c.obj)
                                        0x324 (size before relaxing)
 .xt.prop       0x0000000000005cc4       0xcc zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x0000000000005d90      0x174 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000005f04       0x9c zephyr/libzephyr.a(efuse_hal.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000005fa0        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000005fa0       0xc0 zephyr/libzephyr.a(log_noos.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x0000000000006060      0x24c zephyr/libzephyr.a(log.c.obj)
                                        0x3c0 (size before relaxing)
 .xt.prop       0x00000000000062ac       0x84 zephyr/libzephyr.a(cache_utils.c.obj)
                                        0x1f8 (size before relaxing)
 .xt.prop       0x0000000000006330        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                                        0x594 (size before relaxing)
 .xt.prop       0x0000000000006330      0x39c zephyr/libzephyr.a(bootloader_flash.c.obj)
                                        0x87c (size before relaxing)
 .xt.prop       0x00000000000066cc       0x90 zephyr/libzephyr.a(flash_init.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x000000000000675c        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x000000000000675c       0x60 zephyr/libzephyr.a(soc_random.c.obj)
 .xt.prop       0x00000000000067bc      0x204 zephyr/libzephyr.a(soc_init.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x00000000000069c0      0x24c zephyr/libzephyr.a(soc_flash_init.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000006c0c       0x24 zephyr/arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x0000000000006c30       0x54 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000006c84       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000006cb4       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000006cd8       0xa8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x0000000000006d80      0x318 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.prop       0x0000000000007098       0x24 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x00000000000070bc       0x30 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.prop       0x00000000000070ec      0x66c zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x6b4 (size before relaxing)
 .xt.prop       0x0000000000007758       0x18 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000007770       0x18 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000007788        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000007788        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x0000000000007788        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000007788        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000007788        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000007788       0xa8 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x0000000000007830       0x24 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.prop       0x0000000000007854       0x48 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x000000000000789c       0x6c zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .xt.prop       0x0000000000007908        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000007908      0x6c0 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x9a8 (size before relaxing)
 .xt.prop       0x0000000000007fc8      0x378 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x39c (size before relaxing)
 .xt.prop       0x0000000000008340       0x78 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x00000000000083b8      0x60c zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x648 (size before relaxing)
 .xt.prop       0x00000000000089c4       0x54 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xt.prop       0x0000000000008a18      0x2b8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.prop       0x0000000000008cd0      0x33c zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x360 (size before relaxing)
 .xt.prop       0x000000000000900c        0x0 zephyr/drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000900c      0x120 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x000000000000912c       0x54 zephyr/kernel/libkernel.a(device.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000009180        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x0000000000009180       0x60 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x00000000000091e0      0x21c zephyr/kernel/libkernel.a(init.c.obj)
                                        0x300 (size before relaxing)
 .xt.prop       0x00000000000093fc       0x24 zephyr/kernel/libkernel.a(idle.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000009420      0x114 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                        0x318 (size before relaxing)
 .xt.prop       0x0000000000009534        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                        0x1d4 (size before relaxing)
 .xt.prop       0x0000000000009534        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x0000000000009534       0x48 zephyr/kernel/libkernel.a(thread.c.obj)
                                        0x2dc (size before relaxing)
 .xt.prop       0x000000000000957c      0x708 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0xdb0 (size before relaxing)
 .xt.prop       0x0000000000009c84       0xf0 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000009d74      0x390 zephyr/kernel/libkernel.a(timeout.c.obj)
                                        0x5b8 (size before relaxing)
 .xt.prop       0x000000000000a104       0xe4 zephyr/kernel/libkernel.a(mempool.c.obj)
                                        0x2b8 (size before relaxing)
 .xt.prop       0x000000000000a1e8       0x30 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x000000000000a218       0xcc zephyr/kernel/libkernel.a(kheap.c.obj)
                                        0x210 (size before relaxing)
 .xt.prop       0x000000000000a2e4        0xc zephyr/arch/common/libisr_tables.a(isr_tables.c.obj)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                        0x420 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                        0x228 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                        0x264 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                                         0x9c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                         0xb4 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                                        0x198 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                                        0x180 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                                        0x138 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                                        0x15c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                                         0xd8 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                        0x120 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                         0xc0 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                                         0x60 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
                                         0x78 (size before relaxing)
 .xt.prop       0x000000000000a2f0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000a2f0      0x7e0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                        0x7ec (size before relaxing)
 .xt.prop       0x000000000000aad0        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                        0x588 (size before relaxing)
 .xt.prop       0x000000000000aad0       0x30 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xt.prop       0x000000000000ab00        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000ab00        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                         0x84 (size before relaxing)
 .xt.prop       0x000000000000ab00        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000ab00        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                         0x6c (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.prop.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.prop.*))

.xt.lit         0x0000000000000000      0x718
 *(SORT_BY_ALIGNMENT(.xt.lit))
 .xt.lit        0x0000000000000000       0x18 app/libapp.a(main.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000018       0x10 zephyr/libzephyr.a(heap.c.obj)
                                         0xb8 (size before relaxing)
 .xt.lit        0x0000000000000028        0x0 zephyr/libzephyr.a(cbprintf_packaged.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000028       0x18 zephyr/libzephyr.a(printk.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 zephyr/libzephyr.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000040        0x8 zephyr/libzephyr.a(thread_entry.c.obj)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(cbprintf_complete.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(assert.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(dec.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(hex.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(rb.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(timeutil.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(bitarray.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000048        0x0 zephyr/libzephyr.a(ring_buffer.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000048       0x10 zephyr/libzephyr.a(soc.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000058       0x10 zephyr/libzephyr.a(soc_cache.c.obj)
 .xt.lit        0x0000000000000068       0x10 zephyr/libzephyr.a(loader.c.obj)
 .xt.lit        0x0000000000000078        0x8 zephyr/libzephyr.a(hw_init.c.obj)
 .xt.lit        0x0000000000000080        0x0 zephyr/libzephyr.a(flash_encrypt.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000080        0x8 zephyr/libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000088       0x20 zephyr/libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000a8       0x10 zephyr/libzephyr.a(spi_flash_hal.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000000b8       0x18 zephyr/libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x00000000000000d0       0x18 zephyr/libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000e8       0x20 zephyr/libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000108       0x28 zephyr/libzephyr.a(esp_flash_api.c.obj)
                                         0xe0 (size before relaxing)
 .xt.lit        0x0000000000000130       0x10 zephyr/libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000140        0x0 zephyr/libzephyr.a(flash_mmap.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000140       0x18 zephyr/libzephyr.a(flash_ops.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000158       0x10 zephyr/libzephyr.a(memspi_host_driver.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000168       0x10 zephyr/libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000178       0x30 zephyr/libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0xa8 (size before relaxing)
 .xt.lit        0x00000000000001a8        0x8 zephyr/libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000001b0        0x0 zephyr/libzephyr.a(spi_flash_chip_mxic.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000001b0       0x40 zephyr/libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x00000000000001f0        0x8 zephyr/libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000001f8        0x0 zephyr/libzephyr.a(spi_flash_hpm_enable.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000001f8        0x8 zephyr/libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000200       0x18 zephyr/libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000218        0x0 zephyr/libzephyr.a(spi_flash_wrap.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000218       0x28 zephyr/libzephyr.a(uart_hal.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000240       0x10 zephyr/libzephyr.a(uart_hal_iram.c.obj)
 .xt.lit        0x0000000000000250        0x8 zephyr/libzephyr.a(bootloader_clock_init.c.obj)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(flash_qio_mode.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000258        0x0 zephyr/libzephyr.a(console_init.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000258       0x20 zephyr/libzephyr.a(soc_init.c.obj)
 .xt.lit        0x0000000000000278        0x0 zephyr/libzephyr.a(cpu.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000278        0x0 zephyr/libzephyr.a(clk_ctrl_os.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000278       0x10 zephyr/libzephyr.a(esp_clk.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000288       0x18 zephyr/libzephyr.a(regi2c_ctrl.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x00000000000002a0        0x0 zephyr/libzephyr.a(mac_addr.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x00000000000002a0       0x10 zephyr/libzephyr.a(periph_ctrl.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x00000000000002b0       0x10 zephyr/libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002c0        0x8 zephyr/libzephyr.a(rtc_module.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002c8        0x0 zephyr/libzephyr.a(hw_random.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000002c8        0x0 zephyr/libzephyr.a(sleep_modes.c.obj)
                                        0x160 (size before relaxing)
 .xt.lit        0x00000000000002c8       0x18 zephyr/libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000002e0        0x8 zephyr/libzephyr.a(cpu_region_protect.c.obj)
 .xt.lit        0x00000000000002e8        0x8 zephyr/libzephyr.a(esp_cpu_intr.c.obj)
 .xt.lit        0x00000000000002f0        0x8 zephyr/libzephyr.a(esp_clk_tree.c.obj)
 .xt.lit        0x00000000000002f8       0x58 zephyr/libzephyr.a(rtc_clk.c.obj)
                                         0xf8 (size before relaxing)
 .xt.lit        0x0000000000000350       0x10 zephyr/libzephyr.a(rtc_init.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000360        0x8 zephyr/libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000368       0x10 zephyr/libzephyr.a(rtc_time.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000378        0x8 zephyr/libzephyr.a(rtc_sleep.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000380        0x8 zephyr/libzephyr.a(sar_periph_ctrl.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000388        0x8 zephyr/libzephyr.a(mspi_timing_config.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000390       0x10 zephyr/libzephyr.a(esp_mmu_map.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x8 zephyr/libzephyr.a(esp_rom_sys.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003a8        0x8 zephyr/libzephyr.a(esp_rom_uart.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003b0        0x8 zephyr/libzephyr.a(esp_rom_spiflash.c.obj)
 .xt.lit        0x00000000000003b8        0x8 zephyr/libzephyr.a(esp_rom_efuse.c.obj)
 .xt.lit        0x00000000000003c0       0x20 zephyr/libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x00000000000003e0        0x0 zephyr/libzephyr.a(esp_err.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003e0        0x0 zephyr/libzephyr.a(clk.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000003e0        0x0 zephyr/libzephyr.a(system_internal.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000003e0       0x10 zephyr/libzephyr.a(reset_reason.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000003f0        0x0 zephyr/libzephyr.a(ets_timer_legacy.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000003f0        0x0 zephyr/libzephyr.a(esp_timer.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x00000000000003f0        0x0 zephyr/libzephyr.a(esp_timer_impl_common.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000003f0        0x8 zephyr/libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x00000000000003f8        0x0 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000003f8       0x18 zephyr/libzephyr.a(cache_hal.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000410       0x20 zephyr/libzephyr.a(mmu_hal.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000430        0x8 zephyr/libzephyr.a(systimer_hal.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000438       0x10 zephyr/libzephyr.a(wdt_hal_iram.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000448       0x18 zephyr/libzephyr.a(clk_tree_hal.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000460        0x8 zephyr/libzephyr.a(efuse_hal.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000468        0x0 zephyr/libzephyr.a(xt_wdt_hal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000468        0x8 zephyr/libzephyr.a(log_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000470       0x20 zephyr/libzephyr.a(log.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000490        0x8 zephyr/libzephyr.a(cache_utils.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000498        0x0 zephyr/libzephyr.a(heap_caps_zephyr.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x0000000000000498       0x20 zephyr/libzephyr.a(bootloader_flash.c.obj)
                                         0xc0 (size before relaxing)
 .xt.lit        0x00000000000004b8        0x8 zephyr/libzephyr.a(flash_init.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000004c0        0x0 zephyr/libzephyr.a(esp_restart.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000004c0       0x10 zephyr/libzephyr.a(soc_random.c.obj)
 .xt.lit        0x00000000000004d0       0x38 zephyr/libzephyr.a(soc_init.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000508       0x20 zephyr/libzephyr.a(soc_flash_init.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000528        0x8 zephyr/arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000530        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000538        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000538        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.lit        0x0000000000000540        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000540        0x8 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.lit        0x0000000000000548       0x28 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(assert.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(cbprintf.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(chk_fail.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(errno_wrap.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(exit.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000570        0x0 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(locks.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000570       0x10 zephyr/lib/libc/picolibc/liblib__libc__picolibc.a(stdio.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000580        0x8 zephyr/lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.lit        0x0000000000000588        0x8 zephyr/lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000590        0x8 zephyr/subsys/random/libsubsys__random.a(random_timer.c.obj)
 .xt.lit        0x0000000000000598        0x0 zephyr/subsys/random/libsubsys__random.a(random_test_csprng.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000598       0x38 zephyr/drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x80 (size before relaxing)
 .xt.lit        0x00000000000005d0       0x28 zephyr/drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000005f8       0x10 zephyr/drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x0000000000000608       0x30 zephyr/drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000638        0x8 zephyr/drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.lit        0x0000000000000640       0x10 zephyr/drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000650       0x10 zephyr/drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000660        0x0 zephyr/kernel/libkernel.a(device.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000660        0x0 zephyr/kernel/libkernel.a(errno.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000660        0x0 zephyr/kernel/libkernel.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000660       0x28 zephyr/kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000688        0x0 zephyr/kernel/libkernel.a(idle.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000688        0x8 zephyr/kernel/libkernel.a(msg_q.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000690        0x0 zephyr/kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000690        0x0 zephyr/kernel/libkernel.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000690        0x0 zephyr/kernel/libkernel.a(thread.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000690       0x18 zephyr/kernel/libkernel.a(sched.c.obj)
                                        0x158 (size before relaxing)
 .xt.lit        0x00000000000006a8       0x18 zephyr/kernel/libkernel.a(timeslicing.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000006c0       0x20 zephyr/kernel/libkernel.a(timeout.c.obj)
                                         0x80 (size before relaxing)
 .xt.lit        0x00000000000006e0        0x8 zephyr/kernel/libkernel.a(mempool.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x00000000000006e8        0x8 zephyr/kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x00000000000006f0       0x18 zephyr/kernel/libkernel.a(kheap.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_puts.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000708        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xt.lit        0x0000000000000710        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000710        0x8 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xt.lit        0x0000000000000718        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000718        0x0 /home/jonathan/zephyr-sdk-0.17.0/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                          0x8 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.lit.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.p.*))

.xt.profile_range
 *(SORT_BY_ALIGNMENT(.xt.profile_range))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.profile_range.*))

.xt.profile_ranges
 *(SORT_BY_ALIGNMENT(.xt.profile_ranges))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_ranges.*))

.xt.profile_files
 *(SORT_BY_ALIGNMENT(.xt.profile_files))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_files.*))
                0x0000000000000001                ASSERT (((_iram_end - ORIGIN (iram0_0_seg)) <= LENGTH (iram0_0_seg)), IRAM0 segment data does not fit.)
                0x0000000000000001                ASSERT (((_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040001a94                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040001aa0                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                [!provide]                        PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_ICache = Cache_Disable_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_DCache = Cache_Disable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Allocate_SRAM = Cache_Allocate_SRAM)
                [!provide]                        PROVIDE (esp_rom_Cache_Suspend_ICache = Cache_Suspend_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Dbus_MMU_Set = Cache_Dbus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Ibus_MMU_Set = Cache_Ibus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_ICache_Mode = Cache_Set_ICache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_ICache_All = Cache_Invalidate_ICache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Resume_ICache = Cache_Resume_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_Addr = Cache_Invalidate_Addr)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_DCache_All = Cache_Invalidate_DCache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Enable_DCache = Cache_Enable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                0x000000004000057c                rtc_get_reset_reason = 0x4000057c
                0x0000000040000588                analog_super_wdt_reset_happened = 0x40000588
                0x0000000040000594                jtag_cpu_reset_happened = 0x40000594
                0x00000000400005a0                rtc_get_wakeup_cause = 0x400005a0
                0x00000000400005ac                rtc_select_apb_bridge = 0x400005ac
                0x00000000400005b8                rtc_unhold_all_pads = 0x400005b8
                0x00000000400005c4                ets_is_print_boot = 0x400005c4
                0x00000000400005d0                ets_printf = 0x400005d0
                0x00000000400005dc                ets_install_putc1 = 0x400005dc
                0x00000000400005e8                ets_install_uart_printf = 0x400005e8
                0x00000000400005f4                ets_install_putc2 = 0x400005f4
                0x0000000040000600                PROVIDE (ets_delay_us = 0x40000600)
                0x000000004000060c                ets_get_stack_info = 0x4000060c
                0x0000000040000618                ets_install_lock = 0x40000618
                0x0000000040000624                ets_backup_dma_copy = 0x40000624
                0x0000000040000630                ets_apb_backup_init_lock_func = 0x40000630
                0x000000004000063c                UartRxString = 0x4000063c
                0x0000000040000648                uart_tx_one_char = 0x40000648
                0x0000000040000654                uart_tx_one_char2 = 0x40000654
                0x0000000040000660                uart_rx_one_char = 0x40000660
                0x000000004000066c                uart_rx_one_char_block = 0x4000066c
                0x0000000040000678                uart_rx_readbuff = 0x40000678
                0x0000000040000684                uartAttach = 0x40000684
                0x0000000040000690                uart_tx_flush = 0x40000690
                0x000000004000069c                uart_tx_wait_idle = 0x4000069c
                0x00000000400006a8                uart_div_modify = 0x400006a8
                0x00000000400006b4                ets_write_char_uart = 0x400006b4
                0x00000000400006c0                uart_tx_switch = 0x400006c0
                0x00000000400006cc                multofup = 0x400006cc
                0x00000000400006d8                software_reset = 0x400006d8
                0x00000000400006e4                software_reset_cpu = 0x400006e4
                0x00000000400006f0                assist_debug_clock_enable = 0x400006f0
                0x00000000400006fc                assist_debug_record_enable = 0x400006fc
                0x0000000040000708                clear_super_wdt_reset_flag = 0x40000708
                0x0000000040000714                disable_default_watchdog = 0x40000714
                0x0000000040000720                ets_set_appcpu_boot_addr = 0x40000720
                0x000000004000072c                esp_rom_set_rtc_wake_addr = 0x4000072c
                0x0000000040000738                esp_rom_get_rtc_wake_addr = 0x40000738
                0x0000000040000744                send_packet = 0x40000744
                0x0000000040000750                recv_packet = 0x40000750
                0x000000004000075c                GetUartDevice = 0x4000075c
                0x0000000040000768                UartDwnLdProc = 0x40000768
                0x0000000040000774                Uart_Init = 0x40000774
                0x0000000040000780                ets_set_user_start = 0x40000780
                0x000000003ff1fffc                ets_rom_layout_p = 0x3ff1fffc
                0x000000003fcefffc                ets_ops_table_ptr = 0x3fcefffc
                0x000000004000078c                mz_adler32 = 0x4000078c
                0x0000000040000798                mz_crc32 = 0x40000798
                0x00000000400007a4                mz_free = 0x400007a4
                0x00000000400007b0                tdefl_compress = 0x400007b0
                0x00000000400007bc                tdefl_compress_buffer = 0x400007bc
                0x00000000400007c8                tdefl_compress_mem_to_heap = 0x400007c8
                0x00000000400007d4                tdefl_compress_mem_to_mem = 0x400007d4
                0x00000000400007e0                tdefl_compress_mem_to_output = 0x400007e0
                0x00000000400007ec                tdefl_get_adler32 = 0x400007ec
                0x00000000400007f8                tdefl_get_prev_return_status = 0x400007f8
                0x0000000040000804                tdefl_init = 0x40000804
                0x0000000040000810                tdefl_write_image_to_png_file_in_memory = 0x40000810
                0x000000004000081c                tdefl_write_image_to_png_file_in_memory_ex = 0x4000081c
                0x0000000040000828                tinfl_decompress = 0x40000828
                0x0000000040000834                tinfl_decompress_mem_to_callback = 0x40000834
                0x0000000040000840                tinfl_decompress_mem_to_heap = 0x40000840
                0x000000004000084c                tinfl_decompress_mem_to_mem = 0x4000084c
                [!provide]                        PROVIDE (jd_prepare = 0x40000858)
                [!provide]                        PROVIDE (jd_decomp = 0x40000864)
                0x000000003fcefff8                dsps_fft2r_w_table_fc32_1024 = 0x3fcefff8
                [!provide]                        PROVIDE (opi_flash_set_lock_func = 0x40000870)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_config = 0x4000087c)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_start = 0x40000888)
                0x0000000040000894                PROVIDE (esp_rom_opiflash_pin_config = 0x40000894)
                0x00000000400008a0                PROVIDE (esp_rom_spi_set_op_mode = 0x400008a0)
                [!provide]                        PROVIDE (esp_rom_opiflash_mode_reset = 0x400008ac)
                0x00000000400008b8                PROVIDE (esp_rom_opiflash_exec_cmd = 0x400008b8)
                [!provide]                        PROVIDE (esp_rom_opiflash_soft_reset = 0x400008c4)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_id = 0x400008d0)
                [!provide]                        PROVIDE (esp_rom_opiflash_rdsr = 0x400008dc)
                0x00000000400008e8                PROVIDE (esp_rom_opiflash_wait_idle = 0x400008e8)
                0x00000000400008f4                PROVIDE (esp_rom_opiflash_wren = 0x400008f4)
                0x0000000040000900                PROVIDE (esp_rom_opiflash_erase_sector = 0x40000900)
                0x000000004000090c                PROVIDE (esp_rom_opiflash_erase_block_64k = 0x4000090c)
                0x0000000040000918                PROVIDE (esp_rom_opiflash_erase_area = 0x40000918)
                0x0000000040000924                PROVIDE (esp_rom_opiflash_read = 0x40000924)
                0x0000000040000930                PROVIDE (esp_rom_opiflash_write = 0x40000930)
                0x000000004000093c                PROVIDE (esp_rom_spi_set_dtr_swap_mode = 0x4000093c)
                [!provide]                        PROVIDE (esp_rom_opiflash_exit_continuous_read_mode = 0x40000948)
                0x0000000040000954                PROVIDE (esp_rom_opiflash_legacy_driver_init = 0x40000954)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_raw = 0x4004d9d4)
                0x000000003fcefff4                PROVIDE (rom_opiflash_cmd_def = 0x3fcefff4)
                [!provide]                        PROVIDE (rom_spi_usr_cmd_legacy_funcs = 0x3fcefff0)
                0x0000000040000960                PROVIDE (esp_rom_spiflash_wait_idle = 0x40000960)
                0x000000004000096c                PROVIDE (esp_rom_spiflash_write_encrypted = 0x4000096c)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_dest = 0x40000978)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40000984)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40000990)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_chip = 0x4000099c)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_sector = 0x400009a8)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_block = 0x400009b4)
                [!provide]                        PROVIDE (_esp_rom_spiflash_write = 0x400009c0)
                [!provide]                        PROVIDE (_esp_rom_spiflash_read = 0x400009cc)
                [!provide]                        PROVIDE (_esp_rom_spiflash_unlock = 0x400009d8)
                [!provide]                        PROVIDE (_SPIEraseArea = 0x400009e4)
                [!provide]                        PROVIDE (_SPI_write_enable = 0x400009f0)
                0x00000000400009fc                PROVIDE (esp_rom_spiflash_erase_sector = 0x400009fc)
                0x0000000040000a08                PROVIDE (esp_rom_spiflash_erase_block = 0x40000a08)
                0x0000000040000a14                PROVIDE (esp_rom_spiflash_write = 0x40000a14)
                0x0000000040000a20                PROVIDE (esp_rom_spiflash_read = 0x40000a20)
                [!provide]                        PROVIDE (esp_rom_spiflash_unlock = 0x40000a2c)
                [!provide]                        PROVIDE (SPIEraseArea = 0x40000a38)
                0x0000000040000a44                PROVIDE (SPI_write_enable = 0x40000a44)
                0x0000000040000a50                PROVIDE (esp_rom_spiflash_config_param = 0x40000a50)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_user_cmd = 0x40000a5c)
                0x0000000040000a68                PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40000a68)
                [!provide]                        PROVIDE (esp_rom_spi_flash_auto_sus_res = 0x40000a74)
                [!provide]                        PROVIDE (esp_rom_spi_flash_send_resume = 0x40000a80)
                [!provide]                        PROVIDE (esp_rom_spi_flash_update_id = 0x40000a8c)
                0x0000000040000a98                PROVIDE (esp_rom_spiflash_config_clk = 0x40000a98)
                0x0000000040000aa4                PROVIDE (esp_rom_spiflash_config_readmode = 0x40000aa4)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_status = 0x40000ab0)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_statushigh = 0x40000abc)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_status = 0x40000ac8)
                [!provide]                        PROVIDE (esp_rom_opiflash_cache_mode_config = 0x40000ad4)
                [!provide]                        PROVIDE (esp_rom_spiflash_auto_wait_idle = 0x40000ae0)
                [!provide]                        PROVIDE (spi_flash_attach = 0x40000aec)
                [!provide]                        PROVIDE (spi_flash_get_chip_size = 0x40000af8)
                [!provide]                        PROVIDE (spi_flash_guard_set = 0x40000b04)
                [!provide]                        PROVIDE (spi_flash_guard_get = 0x40000b10)
                [!provide]                        PROVIDE (spi_flash_write_config_set = 0x40000b1c)
                [!provide]                        PROVIDE (spi_flash_write_config_get = 0x40000b28)
                [!provide]                        PROVIDE (spi_flash_safe_write_address_func_set = 0x40000b34)
                [!provide]                        PROVIDE (spi_flash_unlock = 0x40000b40)
                [!provide]                        PROVIDE (spi_flash_erase_range = 0x40000b4c)
                [!provide]                        PROVIDE (spi_flash_erase_sector = 0x40000b58)
                [!provide]                        PROVIDE (spi_flash_write = 0x40000b64)
                [!provide]                        PROVIDE (spi_flash_read = 0x40000b70)
                [!provide]                        PROVIDE (spi_flash_write_encrypted = 0x40000b7c)
                [!provide]                        PROVIDE (spi_flash_read_encrypted = 0x40000b88)
                [!provide]                        PROVIDE (spi_flash_mmap_os_func_set = 0x40000b94)
                [!provide]                        PROVIDE (spi_flash_mmap_page_num_init = 0x40000ba0)
                [!provide]                        PROVIDE (spi_flash_mmap = 0x40000bac)
                [!provide]                        PROVIDE (spi_flash_mmap_pages = 0x40000bb8)
                [!provide]                        PROVIDE (spi_flash_munmap = 0x40000bc4)
                [!provide]                        PROVIDE (spi_flash_mmap_dump = 0x40000bd0)
                [!provide]                        PROVIDE (spi_flash_check_and_flush_cache = 0x40000bdc)
                [!provide]                        PROVIDE (spi_flash_mmap_get_free_pages = 0x40000be8)
                [!provide]                        PROVIDE (spi_flash_cache2phys = 0x40000bf4)
                [!provide]                        PROVIDE (spi_flash_phys2cache = 0x40000c00)
                [!provide]                        PROVIDE (spi_flash_disable_cache = 0x40000c0c)
                [!provide]                        PROVIDE (spi_flash_restore_cache = 0x40000c18)
                [!provide]                        PROVIDE (spi_flash_cache_enabled = 0x40000c24)
                [!provide]                        PROVIDE (spi_flash_enable_cache = 0x40000c30)
                [!provide]                        PROVIDE (spi_cache_mode_switch = 0x40000c3c)
                [!provide]                        PROVIDE (spi_common_set_dummy_output = 0x40000c48)
                [!provide]                        PROVIDE (spi_common_set_flash_cs_timing = 0x40000c54)
                0x0000000040000c60                PROVIDE (esp_rom_spi_set_address_bit_len = 0x40000c60)
                [!provide]                        PROVIDE (esp_enable_cache_flash_wrap = 0x40000c6c)
                [!provide]                        PROVIDE (SPILock = 0x40000c78)
                [!provide]                        PROVIDE (SPIMasterReadModeCnfig = 0x40000c84)
                [!provide]                        PROVIDE (SPI_Common_Command = 0x40000c90)
                [!provide]                        PROVIDE (SPI_WakeUp = 0x40000c9c)
                [!provide]                        PROVIDE (SPI_block_erase = 0x40000ca8)
                [!provide]                        PROVIDE (SPI_chip_erase = 0x40000cb4)
                [!provide]                        PROVIDE (SPI_init = 0x40000cc0)
                [!provide]                        PROVIDE (SPI_page_program = 0x40000ccc)
                [!provide]                        PROVIDE (SPI_read_data = 0x40000cd8)
                [!provide]                        PROVIDE (SPI_sector_erase = 0x40000ce4)
                [!provide]                        PROVIDE (SelectSpiFunction = 0x40000cf0)
                [!provide]                        PROVIDE (SetSpiDrvs = 0x40000cfc)
                [!provide]                        PROVIDE (Wait_SPI_Idle = 0x40000d08)
                [!provide]                        PROVIDE (spi_dummy_len_fix = 0x40000d14)
                [!provide]                        PROVIDE (Disable_QMode = 0x40000d20)
                [!provide]                        PROVIDE (Enable_QMode = 0x40000d2c)
                0x000000003fceffe8                PROVIDE (rom_spiflash_legacy_funcs = 0x3fceffe8)
                0x000000003fceffe4                PROVIDE (rom_spiflash_legacy_data = 0x3fceffe4)
                [!provide]                        PROVIDE (g_flash_guard_ops = 0x3fceffec)
                [!provide]                        PROVIDE (spi_flash_hal_poll_cmd_done = 0x40000d38)
                [!provide]                        PROVIDE (spi_flash_hal_device_config = 0x40000d44)
                [!provide]                        PROVIDE (spi_flash_hal_configure_host_io_mode = 0x40000d50)
                [!provide]                        PROVIDE (spi_flash_hal_common_command = 0x40000d5c)
                [!provide]                        PROVIDE (spi_flash_hal_read = 0x40000d68)
                [!provide]                        PROVIDE (spi_flash_hal_erase_chip = 0x40000d74)
                [!provide]                        PROVIDE (spi_flash_hal_erase_sector = 0x40000d80)
                [!provide]                        PROVIDE (spi_flash_hal_erase_block = 0x40000d8c)
                [!provide]                        PROVIDE (spi_flash_hal_program_page = 0x40000d98)
                [!provide]                        PROVIDE (spi_flash_hal_set_write_protect = 0x40000da4)
                [!provide]                        PROVIDE (spi_flash_hal_host_idle = 0x40000db0)
                [!provide]                        PROVIDE (wdt_hal_init = 0x40000dbc)
                [!provide]                        PROVIDE (wdt_hal_deinit = 0x40000dc8)
                [!provide]                        PROVIDE (wdt_hal_config_stage = 0x40000dd4)
                [!provide]                        PROVIDE (wdt_hal_write_protect_disable = 0x40000de0)
                [!provide]                        PROVIDE (wdt_hal_write_protect_enable = 0x40000dec)
                [!provide]                        PROVIDE (wdt_hal_enable = 0x40000df8)
                [!provide]                        PROVIDE (wdt_hal_disable = 0x40000e04)
                [!provide]                        PROVIDE (wdt_hal_handle_intr = 0x40000e10)
                [!provide]                        PROVIDE (wdt_hal_feed = 0x40000e1c)
                [!provide]                        PROVIDE (wdt_hal_set_flashboot_en = 0x40000e28)
                [!provide]                        PROVIDE (wdt_hal_is_enabled = 0x40000e34)
                [!provide]                        PROVIDE (systimer_hal_get_counter_value = 0x40000e40)
                [!provide]                        PROVIDE (systimer_hal_get_time = 0x40000e4c)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_target = 0x40000e58)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_period = 0x40000e64)
                [!provide]                        PROVIDE (systimer_hal_get_alarm_value = 0x40000e70)
                [!provide]                        PROVIDE (systimer_hal_enable_alarm_int = 0x40000e7c)
                [!provide]                        PROVIDE (systimer_hal_on_apb_freq_update = 0x40000e88)
                [!provide]                        PROVIDE (systimer_hal_counter_value_advance = 0x40000e94)
                [!provide]                        PROVIDE (systimer_hal_enable_counter = 0x40000ea0)
                [!provide]                        PROVIDE (systimer_hal_init = 0x40000eac)
                [!provide]                        PROVIDE (systimer_hal_select_alarm_mode = 0x40000eb8)
                [!provide]                        PROVIDE (systimer_hal_connect_alarm_counter = 0x40000ec4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_probe = 0x40000ed0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_detect_size = 0x40000edc)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write = 0x40000ee8)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write_encrypted = 0x40000ef4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_write_protect = 0x40000f00)
                [!provide]                        PROVIDE (spi_flash_common_write_status_16b_wrsr = 0x40000f0c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_reset = 0x40000f18)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_chip = 0x40000f24)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_sector = 0x40000f30)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_block = 0x40000f3c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_page_program = 0x40000f48)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_write_protect = 0x40000f54)
                [!provide]                        PROVIDE (spi_flash_common_read_status_16b_rdsr_rdsr2 = 0x40000f60)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read_reg = 0x40000f6c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_yield = 0x40000f78)
                [!provide]                        PROVIDE (spi_flash_generic_wait_host_idle = 0x40000f84)
                [!provide]                        PROVIDE (spi_flash_chip_generic_wait_idle = 0x40000f90)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_host_io_mode = 0x40000f9c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read = 0x40000fa8)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr2 = 0x40000fb4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_io_mode = 0x40000fc0)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr = 0x40000fcc)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr = 0x40000fd8)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr2 = 0x40000fe4)
                [!provide]                        PROVIDE (spi_flash_common_set_io_mode = 0x40000ff0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_io_mode = 0x40000ffc)
                [!provide]                        PROVIDE (spi_flash_chip_gd_get_io_mode = 0x40001008)
                [!provide]                        PROVIDE (spi_flash_chip_gd_probe = 0x40001014)
                [!provide]                        PROVIDE (spi_flash_chip_gd_set_io_mode = 0x40001020)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_data = 0x3fceffe0)
                [!provide]                        PROVIDE (memspi_host_read_id_hs = 0x4000102c)
                [!provide]                        PROVIDE (memspi_host_read_status_hs = 0x40001038)
                [!provide]                        PROVIDE (memspi_host_flush_cache = 0x40001044)
                [!provide]                        PROVIDE (memspi_host_erase_chip = 0x40001050)
                [!provide]                        PROVIDE (memspi_host_erase_sector = 0x4000105c)
                [!provide]                        PROVIDE (memspi_host_erase_block = 0x40001068)
                [!provide]                        PROVIDE (memspi_host_program_page = 0x40001074)
                [!provide]                        PROVIDE (memspi_host_read = 0x40001080)
                [!provide]                        PROVIDE (memspi_host_set_write_protect = 0x4000108c)
                [!provide]                        PROVIDE (memspi_host_set_max_read_len = 0x40001098)
                [!provide]                        PROVIDE (memspi_host_read_data_slicer = 0x400010a4)
                [!provide]                        PROVIDE (memspi_host_write_data_slicer = 0x400010b0)
                [!provide]                        PROVIDE (esp_flash_chip_driver_initialized = 0x400010bc)
                [!provide]                        PROVIDE (esp_flash_read_id = 0x400010c8)
                [!provide]                        PROVIDE (esp_flash_get_size = 0x400010d4)
                [!provide]                        PROVIDE (esp_flash_erase_chip = 0x400010e0)
                [!provide]                        PROVIDE (rom_esp_flash_erase_region = 0x400010ec)
                [!provide]                        PROVIDE (esp_flash_get_chip_write_protect = 0x400010f8)
                [!provide]                        PROVIDE (esp_flash_set_chip_write_protect = 0x40001104)
                [!provide]                        PROVIDE (esp_flash_get_protectable_regions = 0x40001110)
                [!provide]                        PROVIDE (esp_flash_get_protected_region = 0x4000111c)
                [!provide]                        PROVIDE (esp_flash_set_protected_region = 0x40001128)
                [!provide]                        PROVIDE (esp_flash_read = 0x40001134)
                [!provide]                        PROVIDE (esp_flash_write = 0x40001140)
                [!provide]                        PROVIDE (esp_flash_write_encrypted = 0x4000114c)
                [!provide]                        PROVIDE (esp_flash_read_encrypted = 0x40001158)
                [!provide]                        PROVIDE (esp_flash_get_io_mode = 0x40001164)
                [!provide]                        PROVIDE (esp_flash_set_io_mode = 0x40001170)
                [!provide]                        PROVIDE (spi_flash_boot_attach = 0x4000117c)
                [!provide]                        PROVIDE (spi_flash_dump_counters = 0x40001188)
                [!provide]                        PROVIDE (spi_flash_get_counters = 0x40001194)
                [!provide]                        PROVIDE (spi_flash_op_counters_config = 0x400011a0)
                [!provide]                        PROVIDE (spi_flash_reset_counters = 0x400011ac)
                [!provide]                        PROVIDE (esp_flash_read_chip_id = 0x400011b8)
                [!provide]                        PROVIDE (detect_spi_flash_chip = 0x400011c4)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_disable = 0x400011d0)
                [!provide]                        PROVIDE (esp_flash_default_chip = 0x3fceffdc)
                [!provide]                        PROVIDE (esp_flash_api_funcs = 0x3fceffd8)
                0x00000000400015fc                PROVIDE (Cache_Get_ICache_Line_Size = 0x400015fc)
                0x0000000040001608                PROVIDE (Cache_Get_DCache_Line_Size = 0x40001608)
                [!provide]                        PROVIDE (Cache_Get_Mode = 0x40001614)
                [!provide]                        PROVIDE (Cache_Set_ICache_Mode = 0x40001620)
                [!provide]                        PROVIDE (Cache_Set_DCache_Mode = 0x4000162c)
                [!provide]                        PROVIDE (Cache_Address_Through_ICache = 0x40001638)
                [!provide]                        PROVIDE (Cache_Address_Through_DCache = 0x40001644)
                [!provide]                        PROVIDE (Cache_Set_Default_Mode = 0x40001650)
                [!provide]                        PROVIDE (Cache_Enable_Defalut_ICache_Mode = 0x4000165c)
                0x0000000040001668                PROVIDE (ROM_Boot_Cache_Init = 0x40001668)
                [!provide]                        PROVIDE (Cache_Invalidate_ICache_Items = 0x40001674)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_Items = 0x40001680)
                [!provide]                        PROVIDE (Cache_Clean_Items = 0x4000168c)
                [!provide]                        PROVIDE (Cache_WriteBack_Items = 0x40001698)
                [!provide]                        PROVIDE (Cache_Op_Addr = 0x400016a4)
                0x00000000400016b0                PROVIDE (Cache_Invalidate_Addr = 0x400016b0)
                [!provide]                        PROVIDE (Cache_Clean_Addr = 0x400016bc)
                0x00000000400016c8                PROVIDE (rom_Cache_WriteBack_Addr = 0x400016c8)
                [!provide]                        PROVIDE (Cache_Invalidate_ICache_All = 0x400016d4)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_All = 0x400016e0)
                [!provide]                        PROVIDE (Cache_Clean_All = 0x400016ec)
                [!provide]                        PROVIDE (Cache_WriteBack_All = 0x400016f8)
                [!provide]                        PROVIDE (Cache_Mask_All = 0x40001704)
                [!provide]                        PROVIDE (Cache_UnMask_Dram0 = 0x40001710)
                [!provide]                        PROVIDE (Cache_Suspend_ICache_Autoload = 0x4000171c)
                [!provide]                        PROVIDE (Cache_Resume_ICache_Autoload = 0x40001728)
                0x0000000040001734                PROVIDE (Cache_Suspend_DCache_Autoload = 0x40001734)
                0x0000000040001740                PROVIDE (Cache_Resume_DCache_Autoload = 0x40001740)
                [!provide]                        PROVIDE (Cache_Start_ICache_Preload = 0x4000174c)
                [!provide]                        PROVIDE (Cache_ICache_Preload_Done = 0x40001758)
                [!provide]                        PROVIDE (Cache_End_ICache_Preload = 0x40001764)
                [!provide]                        PROVIDE (Cache_Start_DCache_Preload = 0x40001770)
                [!provide]                        PROVIDE (Cache_DCache_Preload_Done = 0x4000177c)
                [!provide]                        PROVIDE (Cache_End_DCache_Preload = 0x40001788)
                [!provide]                        PROVIDE (Cache_Config_ICache_Autoload = 0x40001794)
                [!provide]                        PROVIDE (Cache_Config_ICache_Region_Autoload = 0x400017a0)
                [!provide]                        PROVIDE (Cache_Enable_ICache_Autoload = 0x400017ac)
                [!provide]                        PROVIDE (Cache_Disable_ICache_Autoload = 0x400017b8)
                [!provide]                        PROVIDE (Cache_Config_DCache_Autoload = 0x400017c4)
                [!provide]                        PROVIDE (Cache_Config_DCache_Region_Autoload = 0x400017d0)
                [!provide]                        PROVIDE (Cache_Enable_DCache_Autoload = 0x400017dc)
                [!provide]                        PROVIDE (Cache_Disable_DCache_Autoload = 0x400017e8)
                [!provide]                        PROVIDE (Cache_Enable_ICache_PreLock = 0x400017f4)
                [!provide]                        PROVIDE (Cache_Disable_ICache_PreLock = 0x40001800)
                [!provide]                        PROVIDE (Cache_Lock_ICache_Items = 0x4000180c)
                [!provide]                        PROVIDE (Cache_Unlock_ICache_Items = 0x40001818)
                [!provide]                        PROVIDE (Cache_Enable_DCache_PreLock = 0x40001824)
                [!provide]                        PROVIDE (Cache_Disable_DCache_PreLock = 0x40001830)
                [!provide]                        PROVIDE (Cache_Lock_DCache_Items = 0x4000183c)
                [!provide]                        PROVIDE (Cache_Unlock_DCache_Items = 0x40001848)
                [!provide]                        PROVIDE (Cache_Lock_Addr = 0x40001854)
                [!provide]                        PROVIDE (Cache_Unlock_Addr = 0x40001860)
                0x000000004000186c                PROVIDE (Cache_Disable_ICache = 0x4000186c)
                0x0000000040001878                PROVIDE (Cache_Enable_ICache = 0x40001878)
                0x0000000040001884                PROVIDE (Cache_Disable_DCache = 0x40001884)
                0x0000000040001890                PROVIDE (Cache_Enable_DCache = 0x40001890)
                0x000000004000189c                PROVIDE (rom_Cache_Suspend_ICache = 0x4000189c)
                0x00000000400018a8                PROVIDE (Cache_Resume_ICache = 0x400018a8)
                0x00000000400018b4                PROVIDE (rom_Cache_Suspend_DCache = 0x400018b4)
                0x00000000400018c0                PROVIDE (Cache_Resume_DCache = 0x400018c0)
                [!provide]                        PROVIDE (Cache_Occupy_Items = 0x400018cc)
                [!provide]                        PROVIDE (Cache_Occupy_Addr = 0x400018d8)
                0x00000000400018e4                PROVIDE (rom_Cache_Freeze_ICache_Enable = 0x400018e4)
                0x00000000400018f0                PROVIDE (Cache_Freeze_ICache_Disable = 0x400018f0)
                0x00000000400018fc                PROVIDE (rom_Cache_Freeze_DCache_Enable = 0x400018fc)
                0x0000000040001908                PROVIDE (Cache_Freeze_DCache_Disable = 0x40001908)
                0x0000000040001914                PROVIDE (Cache_Set_IDROM_MMU_Size = 0x40001914)
                [!provide]                        PROVIDE (flash2spiram_instruction_offset = 0x40001920)
                [!provide]                        PROVIDE (flash2spiram_rodata_offset = 0x4000192c)
                [!provide]                        PROVIDE (flash_instr_rodata_start_page = 0x40001938)
                [!provide]                        PROVIDE (flash_instr_rodata_end_page = 0x40001944)
                0x0000000040001950                PROVIDE (Cache_Set_IDROM_MMU_Info = 0x40001950)
                [!provide]                        PROVIDE (Cache_Get_IROM_MMU_End = 0x4000195c)
                [!provide]                        PROVIDE (Cache_Get_DROM_MMU_End = 0x40001968)
                [!provide]                        PROVIDE (Cache_Owner_Init = 0x40001974)
                [!provide]                        PROVIDE (Cache_Occupy_ICache_MEMORY = 0x40001980)
                [!provide]                        PROVIDE (Cache_Occupy_DCache_MEMORY = 0x4000198c)
                [!provide]                        PROVIDE (Cache_MMU_Init = 0x40001998)
                [!provide]                        PROVIDE (Cache_Ibus_MMU_Set = 0x400019a4)
                [!provide]                        PROVIDE (Cache_Dbus_MMU_Set = 0x400019b0)
                0x00000000400019bc                PROVIDE (rom_Cache_Count_Flash_Pages = 0x400019bc)
                [!provide]                        PROVIDE (Cache_Flash_To_SPIRAM_Copy = 0x400019c8)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory = 0x400019d4)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory2 = 0x400019e0)
                [!provide]                        PROVIDE (Cache_Get_Virtual_Addr = 0x400019ec)
                [!provide]                        PROVIDE (Cache_Get_Memory_BaseAddr = 0x400019f8)
                [!provide]                        PROVIDE (Cache_Get_Memory_Addr = 0x40001a04)
                [!provide]                        PROVIDE (Cache_Get_Memory_value = 0x40001a10)
                0x0000000040001a1c                PROVIDE (rom_config_instruction_cache_mode = 0x40001a1c)
                0x0000000040001a28                PROVIDE (rom_config_data_cache_mode = 0x40001a28)
                [!provide]                        PROVIDE (rom_cache_op_cb = 0x3fceffc8)
                [!provide]                        PROVIDE (rom_cache_internal_table_ptr = 0x3fceffc4)
                0x0000000040001a34                ets_get_apb_freq = 0x40001a34
                0x0000000040001a40                ets_get_cpu_frequency = 0x40001a40
                0x0000000040001a4c                ets_update_cpu_frequency = 0x40001a4c
                0x0000000040001a58                ets_get_printf_channel = 0x40001a58
                0x0000000040001a64                ets_get_xtal_div = 0x40001a64
                0x0000000040001a70                ets_set_xtal_div = 0x40001a70
                0x0000000040001a7c                ets_get_xtal_freq = 0x40001a7c
                0x0000000040001a88                gpio_input_get = 0x40001a88
                0x0000000040001a94                gpio_matrix_in = 0x40001a94
                0x0000000040001aa0                gpio_matrix_out = 0x40001aa0
                0x0000000040001aac                gpio_output_disable = 0x40001aac
                0x0000000040001ab8                gpio_output_enable = 0x40001ab8
                0x0000000040001ac4                gpio_output_set = 0x40001ac4
                0x0000000040001ad0                gpio_pad_hold = 0x40001ad0
                0x0000000040001adc                gpio_pad_input_disable = 0x40001adc
                0x0000000040001ae8                gpio_pad_input_enable = 0x40001ae8
                0x0000000040001af4                gpio_pad_pulldown = 0x40001af4
                0x0000000040001b00                gpio_pad_pullup = 0x40001b00
                0x0000000040001b0c                gpio_pad_select_gpio = 0x40001b0c
                0x0000000040001b18                gpio_pad_set_drv = 0x40001b18
                0x0000000040001b24                gpio_pad_unhold = 0x40001b24
                0x0000000040001b30                gpio_pin_wakeup_disable = 0x40001b30
                0x0000000040001b3c                gpio_pin_wakeup_enable = 0x40001b3c
                0x0000000040001b48                gpio_bypass_matrix_in = 0x40001b48
                0x0000000040001b54                intr_matrix_set = 0x40001b54
                0x0000000040001b60                ets_intr_lock = 0x40001b60
                0x0000000040001b6c                ets_intr_unlock = 0x40001b6c
                0x0000000040001b78                ets_isr_attach = 0x40001b78
                0x0000000040001b84                ets_isr_mask = 0x40001b84
                0x0000000040001b90                ets_isr_unmask = 0x40001b90
                0x0000000040001b9c                xthal_bcopy = 0x40001b9c
                0x0000000040001ba8                xthal_memcpy = 0x40001ba8
                0x0000000040001bb4                xthal_get_ccompare = 0x40001bb4
                0x0000000040001bc0                xthal_set_ccompare = 0x40001bc0
                0x0000000040001bcc                xthal_get_ccount = 0x40001bcc
                0x0000000040001bd8                xthal_get_interrupt = 0x40001bd8
                0x0000000040001be4                xthal_set_intclear = 0x40001be4
                0x0000000040001bf0                _xtos_ints_off = 0x40001bf0
                0x0000000040001bfc                _xtos_ints_on = 0x40001bfc
                0x0000000040001c08                _xtos_restore_intlevel = 0x40001c08
                0x0000000040001c14                _xtos_set_exception_handler = 0x40001c14
                0x0000000040001c20                _xtos_set_interrupt_handler = 0x40001c20
                0x0000000040001c2c                _xtos_set_interrupt_handler_arg = 0x40001c2c
                0x0000000040001c38                _xtos_set_intlevel = 0x40001c38
                0x0000000040001c44                _xtos_set_vpri = 0x40001c44
                0x0000000040001c50                md5_vector = 0x40001c50
                0x0000000040001c5c                MD5Init = 0x40001c5c
                0x0000000040001c68                MD5Update = 0x40001c68
                0x0000000040001c74                MD5Final = 0x40001c74
                0x0000000040001c80                hmac_md5_vector = 0x40001c80
                0x0000000040001c8c                hmac_md5 = 0x40001c8c
                0x0000000040001c98                crc32_le = 0x40001c98
                0x0000000040001ca4                crc32_be = 0x40001ca4
                0x0000000040001cb0                crc16_le = 0x40001cb0
                0x0000000040001cbc                crc16_be = 0x40001cbc
                0x0000000040001cc8                crc8_le = 0x40001cc8
                0x0000000040001cd4                crc8_be = 0x40001cd4
                0x0000000040001ce0                esp_crc8 = 0x40001ce0
                0x0000000040001cec                ets_sha_enable = 0x40001cec
                0x0000000040001cf8                ets_sha_disable = 0x40001cf8
                0x0000000040001d04                ets_sha_get_state = 0x40001d04
                0x0000000040001d10                ets_sha_init = 0x40001d10
                0x0000000040001d1c                ets_sha_process = 0x40001d1c
                0x0000000040001d28                ets_sha_starts = 0x40001d28
                0x0000000040001d34                ets_sha_update = 0x40001d34
                0x0000000040001d40                ets_sha_finish = 0x40001d40
                0x0000000040001d4c                ets_sha_clone = 0x40001d4c
                0x0000000040001d58                ets_hmac_enable = 0x40001d58
                0x0000000040001d64                ets_hmac_disable = 0x40001d64
                0x0000000040001d70                ets_hmac_calculate_message = 0x40001d70
                0x0000000040001d7c                ets_hmac_calculate_downstream = 0x40001d7c
                0x0000000040001d88                ets_hmac_invalidate_downstream = 0x40001d88
                0x0000000040001d94                ets_jtag_enable_temporarily = 0x40001d94
                0x0000000040001da0                ets_aes_enable = 0x40001da0
                0x0000000040001dac                ets_aes_disable = 0x40001dac
                0x0000000040001db8                ets_aes_setkey = 0x40001db8
                0x0000000040001dc4                ets_aes_block = 0x40001dc4
                0x0000000040001dd0                ets_bigint_enable = 0x40001dd0
                0x0000000040001ddc                ets_bigint_disable = 0x40001ddc
                0x0000000040001de8                ets_bigint_multiply = 0x40001de8
                0x0000000040001df4                ets_bigint_modmult = 0x40001df4
                0x0000000040001e00                ets_bigint_modexp = 0x40001e00
                0x0000000040001e0c                ets_bigint_wait_finish = 0x40001e0c
                0x0000000040001e18                ets_bigint_getz = 0x40001e18
                0x0000000040001e24                ets_ds_enable = 0x40001e24
                0x0000000040001e30                ets_ds_disable = 0x40001e30
                0x0000000040001e3c                ets_ds_start_sign = 0x40001e3c
                0x0000000040001e48                ets_ds_is_busy = 0x40001e48
                0x0000000040001e54                ets_ds_finish_sign = 0x40001e54
                0x0000000040001e60                ets_ds_encrypt_params = 0x40001e60
                0x0000000040001e6c                ets_aes_setkey_dec = 0x40001e6c
                0x0000000040001e78                ets_aes_setkey_enc = 0x40001e78
                0x0000000040001e84                ets_mgf1_sha256 = 0x40001e84
                0x0000000040001e90                ets_efuse_read = 0x40001e90
                0x0000000040001e9c                ets_efuse_program = 0x40001e9c
                0x0000000040001ea8                ets_efuse_clear_program_registers = 0x40001ea8
                0x0000000040001eb4                ets_efuse_write_key = 0x40001eb4
                0x0000000040001ec0                ets_efuse_get_read_register_address = 0x40001ec0
                0x0000000040001ecc                ets_efuse_get_key_purpose = 0x40001ecc
                0x0000000040001ed8                ets_efuse_key_block_unused = 0x40001ed8
                0x0000000040001ee4                ets_efuse_find_unused_key_block = 0x40001ee4
                0x0000000040001ef0                ets_efuse_rs_calculate = 0x40001ef0
                0x0000000040001efc                ets_efuse_count_unused_key_blocks = 0x40001efc
                0x0000000040001f08                ets_efuse_secure_boot_enabled = 0x40001f08
                0x0000000040001f14                ets_efuse_secure_boot_aggressive_revoke_enabled = 0x40001f14
                0x0000000040001f20                ets_efuse_cache_encryption_enabled = 0x40001f20
                0x0000000040001f2c                ets_efuse_download_modes_disabled = 0x40001f2c
                0x0000000040001f38                ets_efuse_find_purpose = 0x40001f38
                0x0000000040001f44                ets_efuse_flash_opi_5pads_power_sel_vddspi = 0x40001f44
                0x0000000040001f50                ets_efuse_force_send_resume = 0x40001f50
                0x0000000040001f5c                ets_efuse_get_flash_delay_us = 0x40001f5c
                0x0000000040001f68                ets_efuse_get_mac = 0x40001f68
                0x0000000040001f74                ets_efuse_get_spiconfig = 0x40001f74
                0x0000000040001f80                ets_efuse_usb_print_is_disabled = 0x40001f80
                0x0000000040001f8c                ets_efuse_usb_serial_jtag_print_is_disabled = 0x40001f8c
                0x0000000040001f98                ets_efuse_get_uart_print_control = 0x40001f98
                0x0000000040001fa4                ets_efuse_get_wp_pad = 0x40001fa4
                0x0000000040001fb0                ets_efuse_legacy_spi_boot_mode_disabled = 0x40001fb0
                0x0000000040001fbc                ets_efuse_security_download_modes_enabled = 0x40001fbc
                0x0000000040001fc8                ets_efuse_set_timing = 0x40001fc8
                0x0000000040001fd4                ets_efuse_jtag_disabled = 0x40001fd4
                0x0000000040001fe0                ets_efuse_usb_download_mode_disabled = 0x40001fe0
                0x0000000040001fec                ets_efuse_usb_module_disabled = 0x40001fec
                0x0000000040001ff8                ets_efuse_usb_device_disabled = 0x40001ff8
                0x0000000040002004                ets_efuse_flash_octal_mode = 0x40002004
                0x0000000040002010                ets_efuse_ecc_en = 0x40002010
                0x000000004000201c                ets_efuse_ecc_flash_page_size = 0x4000201c
                0x0000000040002028                ets_efuse_ecc_16to17_mode = 0x40002028
                0x0000000040002034                ets_ecc_flash_enable = 0x40002034
                0x0000000040002040                ets_ecc_flash_enable_all = 0x40002040
                0x000000004000204c                ets_ecc_flash_disable = 0x4000204c
                0x0000000040002058                ets_ecc_flash_disable_all = 0x40002058
                0x0000000040002064                ets_ecc_get_flash_page_size = 0x40002064
                0x0000000040002070                ets_ecc_set_flash_page_size = 0x40002070
                0x000000004000207c                ets_ecc_set_flash_byte_mode = 0x4000207c
                0x0000000040002088                ets_ecc_get_flash_byte_mode = 0x40002088
                0x0000000040002094                ets_ecc_set_flash_range = 0x40002094
                0x00000000400020a0                ets_ecc_get_flash_range = 0x400020a0
                0x00000000400020ac                ets_ecc_sram_enable = 0x400020ac
                0x00000000400020b8                ets_ecc_sram_disable = 0x400020b8
                0x00000000400020c4                ets_ecc_sram_enable_all = 0x400020c4
                0x00000000400020d0                ets_ecc_sram_disable_all = 0x400020d0
                0x00000000400020dc                ets_ecc_get_sram_page_size = 0x400020dc
                0x00000000400020e8                ets_ecc_set_sram_page_size = 0x400020e8
                0x00000000400020f4                ets_ecc_get_sram_byte_mode = 0x400020f4
                0x0000000040002100                ets_ecc_set_sram_byte_mode = 0x40002100
                0x000000004000210c                ets_ecc_set_sram_range = 0x4000210c
                0x0000000040002118                ets_ecc_get_sram_range = 0x40002118
                0x000000003fceffc0                ets_ecc_table_ptr = 0x3fceffc0
                0x0000000040002124                ets_emsa_pss_verify = 0x40002124
                0x0000000040002130                ets_rsa_pss_verify = 0x40002130
                0x000000004000213c                ets_secure_boot_verify_bootloader_with_keys = 0x4000213c
                0x0000000040002148                ets_secure_boot_verify_signature = 0x40002148
                0x0000000040002154                ets_secure_boot_read_key_digests = 0x40002154
                0x0000000040002160                ets_secure_boot_revoke_public_key_digest = 0x40002160
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char = 0x400025a4)
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char_block = 0x400025b0)
                [!provide]                        PROVIDE (usb_uart_otg_tx_flush = 0x400025bc)
                [!provide]                        PROVIDE (usb_uart_otg_tx_one_char = 0x400025c8)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char = 0x400025d4)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char_block = 0x400025e0)
                [!provide]                        PROVIDE (usb_uart_device_tx_flush = 0x400025ec)
                [!provide]                        PROVIDE (usb_uart_device_tx_one_char = 0x400025f8)
                [!provide]                        PROVIDE (Uart_Init_USB = 0x40002604)
                [!provide]                        PROVIDE (uart_acm_dev = 0x3fceffbc)
                0x000000003fceffb9                PROVIDE (g_uart_print = 0x3fceffb9)
                0x000000003fceffb8                PROVIDE (g_usb_print = 0x3fceffb8)
                0x0000000040002610                cdc_acm_class_handle_req = 0x40002610
                0x000000004000261c                cdc_acm_init = 0x4000261c
                0x0000000040002628                cdc_acm_fifo_fill = 0x40002628
                0x0000000040002634                cdc_acm_rx_fifo_cnt = 0x40002634
                0x0000000040002640                cdc_acm_fifo_read = 0x40002640
                0x000000004000264c                cdc_acm_irq_tx_enable = 0x4000264c
                0x0000000040002658                cdc_acm_irq_tx_disable = 0x40002658
                0x0000000040002664                cdc_acm_irq_state_enable = 0x40002664
                0x0000000040002670                cdc_acm_irq_state_disable = 0x40002670
                0x000000004000267c                cdc_acm_irq_tx_ready = 0x4000267c
                0x0000000040002688                cdc_acm_irq_rx_enable = 0x40002688
                0x0000000040002694                cdc_acm_irq_rx_disable = 0x40002694
                0x00000000400026a0                cdc_acm_irq_rx_ready = 0x400026a0
                0x00000000400026ac                cdc_acm_irq_is_pending = 0x400026ac
                0x00000000400026b8                cdc_acm_irq_callback_set = 0x400026b8
                0x00000000400026c4                cdc_acm_line_ctrl_set = 0x400026c4
                0x00000000400026d0                cdc_acm_line_ctrl_get = 0x400026d0
                0x00000000400026dc                cdc_acm_poll_out = 0x400026dc
                0x00000000400026e8                chip_usb_dw_did_persist = 0x400026e8
                0x00000000400026f4                chip_usb_dw_init = 0x400026f4
                0x0000000040002700                chip_usb_detach = 0x40002700
                0x000000004000270c                chip_usb_dw_prepare_persist = 0x4000270c
                0x0000000040002718                chip_usb_get_persist_flags = 0x40002718
                0x0000000040002724                chip_usb_set_persist_flags = 0x40002724
                0x0000000040002730                cpio_start = 0x40002730
                0x000000004000273c                cpio_feed = 0x4000273c
                0x0000000040002748                cpio_done = 0x40002748
                0x0000000040002754                cpio_destroy = 0x40002754
                0x0000000040002760                dfu_flash_init = 0x40002760
                0x000000004000276c                dfu_flash_erase = 0x4000276c
                0x0000000040002778                dfu_flash_program = 0x40002778
                0x0000000040002784                dfu_flash_read = 0x40002784
                0x0000000040002790                dfu_flash_attach = 0x40002790
                0x000000004000279c                dfu_cpio_callback = 0x4000279c
                0x00000000400027a8                dfu_updater_get_err = 0x400027a8
                0x00000000400027b4                dfu_updater_clear_err = 0x400027b4
                0x00000000400027c0                dfu_updater_enable = 0x400027c0
                0x00000000400027cc                dfu_updater_begin = 0x400027cc
                0x00000000400027d8                dfu_updater_feed = 0x400027d8
                0x00000000400027e4                dfu_updater_end = 0x400027e4
                0x00000000400027f0                dfu_updater_set_raw_addr = 0x400027f0
                0x00000000400027fc                dfu_updater_flash_read = 0x400027fc
                0x0000000040002808                usb_dc_prepare_persist = 0x40002808
                0x0000000040002814                usb_dw_isr_handler = 0x40002814
                0x0000000040002820                usb_dc_attach = 0x40002820
                0x000000004000282c                usb_dc_detach = 0x4000282c
                0x0000000040002838                usb_dc_reset = 0x40002838
                0x0000000040002844                usb_dc_set_address = 0x40002844
                0x0000000040002850                usb_dc_ep_check_cap = 0x40002850
                0x000000004000285c                usb_dc_ep_configure = 0x4000285c
                0x0000000040002868                usb_dc_ep_set_stall = 0x40002868
                0x0000000040002874                usb_dc_ep_clear_stall = 0x40002874
                0x0000000040002880                usb_dc_ep_halt = 0x40002880
                0x000000004000288c                usb_dc_ep_is_stalled = 0x4000288c
                0x0000000040002898                usb_dc_ep_enable = 0x40002898
                0x00000000400028a4                usb_dc_ep_disable = 0x400028a4
                0x00000000400028b0                usb_dc_ep_flush = 0x400028b0
                0x00000000400028bc                usb_dc_ep_write_would_block = 0x400028bc
                0x00000000400028c8                usb_dc_ep_write = 0x400028c8
                0x00000000400028d4                usb_dc_ep_read_wait = 0x400028d4
                0x00000000400028e0                usb_dc_ep_read_continue = 0x400028e0
                0x00000000400028ec                usb_dc_ep_read = 0x400028ec
                0x00000000400028f8                usb_dc_ep_set_callback = 0x400028f8
                0x0000000040002904                usb_dc_set_status_callback = 0x40002904
                0x0000000040002910                usb_dc_ep_mps = 0x40002910
                0x000000004000291c                usb_dc_check_poll_for_interrupts = 0x4000291c
                0x0000000040002928                mac_addr_to_serial_str_desc = 0x40002928
                0x0000000040002934                usb_set_current_descriptor = 0x40002934
                0x0000000040002940                usb_get_descriptor = 0x40002940
                0x000000004000294c                usb_dev_resume = 0x4000294c
                0x0000000040002958                usb_dev_get_configuration = 0x40002958
                0x0000000040002964                usb_set_config = 0x40002964
                0x0000000040002970                usb_deconfig = 0x40002970
                0x000000004000297c                usb_enable = 0x4000297c
                0x0000000040002988                usb_disable = 0x40002988
                0x0000000040002994                usb_write_would_block = 0x40002994
                0x00000000400029a0                usb_write = 0x400029a0
                0x00000000400029ac                usb_read = 0x400029ac
                0x00000000400029b8                usb_ep_set_stall = 0x400029b8
                0x00000000400029c4                usb_ep_clear_stall = 0x400029c4
                0x00000000400029d0                usb_ep_read_wait = 0x400029d0
                0x00000000400029dc                usb_ep_read_continue = 0x400029dc
                0x00000000400029e8                usb_transfer_ep_callback = 0x400029e8
                0x00000000400029f4                usb_transfer = 0x400029f4
                0x0000000040002a00                usb_cancel_transfer = 0x40002a00
                0x0000000040002a0c                usb_transfer_sync = 0x40002a0c
                0x0000000040002a18                usb_dfu_set_detach_cb = 0x40002a18
                0x0000000040002a24                dfu_class_handle_req = 0x40002a24
                0x0000000040002a30                dfu_status_cb = 0x40002a30
                0x0000000040002a3c                dfu_custom_handle_req = 0x40002a3c
                0x0000000040002a48                usb_dfu_init = 0x40002a48
                0x0000000040002a54                usb_dfu_force_detach = 0x40002a54
                0x0000000040002a60                usb_dev_deinit = 0x40002a60
                0x0000000040002a6c                usb_dw_ctrl_deinit = 0x40002a6c
                0x000000003fceffac                rom_usb_osglue = 0x3fceffac
                0x000000003fceffa8                bt_rf_coex_cfg_p = 0x3fceffa8
                0x000000003fceffa4                bt_rf_coex_hooks_p = 0x3fceffa4
                0x000000003fceffa0                btdm_env_p = 0x3fceffa0
                0x000000003fceff9c                g_rw_controller_task_handle = 0x3fceff9c
                0x000000003fceff98                g_rw_init_sem = 0x3fceff98
                0x000000003fceff94                g_rw_schd_queue = 0x3fceff94
                0x000000003fceff90                lld_init_env = 0x3fceff90
                0x000000003fceff8c                lld_rpa_renew_env = 0x3fceff8c
                0x000000003fceff88                lld_scan_env = 0x3fceff88
                0x000000003fceff84                lld_scan_sync_env = 0x3fceff84
                0x000000003fceff80                lld_test_env = 0x3fceff80
                0x000000003fceff7c                p_ble_util_buf_env = 0x3fceff7c
                0x000000003fceff78                p_lld_env = 0x3fceff78
                0x000000003fceff74                p_llm_env = 0x3fceff74
                0x000000003fceff70                r_h4tl_eif_p = 0x3fceff70
                0x000000003fceff6c                r_hli_funcs_p = 0x3fceff6c
                0x000000003fceff68                r_ip_funcs_p = 0x3fceff68
                0x000000003fceff64                r_modules_funcs_p = 0x3fceff64
                0x000000003fceff60                r_osi_funcs_p = 0x3fceff60
                0x000000003fceff5c                r_plf_funcs_p = 0x3fceff5c
                0x000000003fceff58                vhci_env_p = 0x3fceff58
                0x000000003fceff54                aa_gen = 0x3fceff54
                0x000000003fceff48                aes_env = 0x3fceff48
                0x000000003fcefef8                bt_rf_coex_cfg_cb = 0x3fcefef8
                0x000000003fcefef4                btdm_pwr_state = 0x3fcefef4
                0x000000003fcefef0                btdm_slp_err = 0x3fcefef0
                0x000000003fcefee8                ecc_env = 0x3fcefee8
                0x000000003fcefee0                esp_handler = 0x3fcefee0
                0x000000003fcefed8                esp_vendor_cmd = 0x3fcefed8
                0x000000003fcefed4                g_adv_delay_dis = 0x3fcefed4
                0x000000003fcefed0                g_conflict_elt = 0x3fcefed0
                0x000000003fcefec0                g_eif_api = 0x3fcefec0
                0x000000003fcefeb4                g_event_empty = 0x3fcefeb4
                0x000000003fcefeaa                g_llc_state = 0x3fcefeaa
                0x000000003fcefea9                g_llm_state = 0x3fcefea9
                0x000000003fcefea7                g_max_evt_env = 0x3fcefea7
                0x000000003fcefea6                g_misc_state = 0x3fcefea6
                0x000000003fcefe8a                g_rma_rule_db = 0x3fcefe8a
                0x000000003fcefe6e                g_rtp_rule_db = 0x3fcefe6e
                0x000000003fcefe6d                g_scan_forever = 0x3fcefe6d
                0x000000003fcefe6c                g_time_msb = 0x3fcefe6c
                0x000000003fcefe44                h4tl_env = 0x3fcefe44
                0x000000003fcefe21                hci_env = 0x3fcefe21
                0x000000003fcefe20                hci_ext_host = 0x3fcefe20
                0x000000003fcefe18                hci_fc_env = 0x3fcefe18
                0x000000003fcefdec                hci_tl_env = 0x3fcefdec
                0x000000003fcefdbc                ke_env = 0x3fcefdbc
                0x000000003fcefd7c                ke_event_env = 0x3fcefd7c
                0x000000003fcefd00                ke_task_env = 0x3fcefd00
                0x000000003fcefcd8                llc_env = 0x3fcefcd8
                0x000000003fcefcb0                lld_adv_env = 0x3fcefcb0
                0x000000003fcefc88                lld_con_env = 0x3fcefc88
                0x000000003fcefc80                lld_exp_sync_pos_tab = 0x3fcefc80
                0x000000003fcefc58                lld_per_adv_env = 0x3fcefc58
                0x000000003fcefc30                lld_sync_env = 0x3fcefc30
                0x000000003fcefc24                llm_le_adv_flow_env = 0x3fcefc24
                0x000000003fcefc20                rw_sleep_enable = 0x3fcefc20
                0x000000003fcefc18                rwble_env = 0x3fcefc18
                0x000000003fcefbfc                rwip_env = 0x3fcefbfc
                0x000000003fcefbf0                rwip_param = 0x3fcefbf0
                0x000000003fcefbec                rwip_prog_delay = 0x3fcefbec
                0x000000003fcefbb4                rwip_rf = 0x3fcefbb4
                0x000000003fcefbac                sch_alarm_env = 0x3fcefbac
                0x000000003fcefb98                sch_arb_env = 0x3fcefb98
                0x000000003fcefb90                sch_plan_env = 0x3fcefb90
                0x000000003fcefa8c                sch_prog_env = 0x3fcefa8c
                0x000000003fcefa2c                sch_slice_env = 0x3fcefa2c
                0x000000003fcefa24                sch_slice_params = 0x3fcefa24
                0x000000003fcefa1c                timer_env = 0x3fcefa1c
                0x000000003fcefa18                unloaded_area = 0x3fcefa18
                0x000000003fcefa14                vshci_state = 0x3fcefa14
                0x000000003fcefa08                TASK_DESC_LLC = 0x3fcefa08
                0x000000003fcef9fc                TASK_DESC_LLM = 0x3fcef9fc
                0x000000003fcef9f0                TASK_DESC_VSHCI = 0x3fcef9f0
                0x000000003fcef9e8                co_default_bdaddr = 0x3fcef9e8
                0x000000003fcef9e4                dbg_assert_block = 0x3fcef9e4
                0x000000003fcef9e0                g_bt_plf_log_level = 0x3fcef9e0
                0x000000003fcef9bc                hci_cmd_desc_tab_vs_esp = 0x3fcef9bc
                0x000000003fcef9a4                hci_command_handler_tab_esp = 0x3fcef9a4
                0x000000003fcef9a0                privacy_en = 0x3fcef9a0
                0x000000003fcef958                sdk_cfg_priv_opts = 0x3fcef958
                0x000000003ff1ffdc                BasePoint_x_256 = 0x3ff1ffdc
                0x000000003ff1ffbc                BasePoint_y_256 = 0x3ff1ffbc
                0x000000003ff1ff9c                DebugE256PublicKey_x = 0x3ff1ff9c
                0x000000003ff1ff7c                DebugE256PublicKey_y = 0x3ff1ff7c
                0x000000003ff1ff5c                DebugE256SecretKey = 0x3ff1ff5c
                0x000000003ff1f7a0                ECC_4Win_Look_up_table = 0x3ff1f7a0
                0x000000003ff1f79a                LLM_AA_CT1 = 0x3ff1f79a
                0x000000003ff1f798                LLM_AA_CT2 = 0x3ff1f798
                0x000000003ff1f790                RF_TX_PW_CONV_TBL = 0x3ff1f790
                0x000000003ff1f784                TASK_DESC_MISC = 0x3ff1f784
                0x000000003ff1f766                adv_evt_prop2type = 0x3ff1f766
                0x000000003ff1f761                adv_evt_type2prop = 0x3ff1f761
                0x000000003ff1f751                aes_cmac_zero = 0x3ff1f751
                0x000000003ff1f741                aes_k2_salt = 0x3ff1f741
                0x000000003ff1f73c                aes_k3_id64 = 0x3ff1f73c
                0x000000003ff1f72c                aes_k3_salt = 0x3ff1f72c
                0x000000003ff1f728                aes_k4_id6 = 0x3ff1f728
                0x000000003ff1f718                aes_k4_salt = 0x3ff1f718
                0x000000003ff1f6ec                bigHexP256 = 0x3ff1f6ec
                0x000000003ff1f6e2                byte_tx_time = 0x3ff1f6e2
                0x000000003ff1f6dc                co_null_bdaddr = 0x3ff1f6dc
                0x000000003ff1f6d7                co_phy_mask_to_rate = 0x3ff1f6d7
                0x000000003ff1f6d2                co_phy_mask_to_value = 0x3ff1f6d2
                0x000000003ff1f6ce                co_phy_to_rate = 0x3ff1f6ce
                0x000000003ff1f6ca                co_phy_value_to_mask = 0x3ff1f6ca
                0x000000003ff1f6c5                co_rate_to_byte_dur_us = 0x3ff1f6c5
                0x000000003ff1f6c0                co_rate_to_phy = 0x3ff1f6c0
                0x000000003ff1f6bc                co_rate_to_phy_mask = 0x3ff1f6bc
                0x000000003ff1f6ac                co_sca2ppm = 0x3ff1f6ac
                0x000000003ff1f680                coef_B = 0x3ff1f680
                0x000000003ff1f678                connect_req_dur_tab = 0x3ff1f678
                0x000000003ff1f5f4                ecc_Jacobian_InfinityPoint256 = 0x3ff1f5f4
                0x000000003ff1f526                em_base_reg_lut = 0x3ff1f526
                0x000000003ff1f51e                fixed_tx_time = 0x3ff1f51e
                0x000000003ff1f518                h4tl_msgtype2hdrlen = 0x3ff1f518
                0x000000003ff1f4e8                hci_cmd_desc_root_tab = 0x3ff1f4e8
                0x000000003ff1f47c                hci_cmd_desc_tab_ctrl_bb = 0x3ff1f47c
                0x000000003ff1f44c                hci_cmd_desc_tab_info_par = 0x3ff1f44c
                0x000000003ff1f0b0                hci_cmd_desc_tab_le = 0x3ff1f0b0
                0x000000003ff1f098                hci_cmd_desc_tab_lk_ctrl = 0x3ff1f098
                0x000000003ff1f08c                hci_cmd_desc_tab_stat_par = 0x3ff1f08c
                0x000000003ff1f050                hci_cmd_desc_tab_vs = 0x3ff1f050
                0x000000003ff1f008                hci_evt_desc_tab = 0x3ff1f008
                0x000000003ff1ef68                hci_evt_le_desc_tab = 0x3ff1ef68
                0x000000003ff1ef60                hci_evt_le_desc_tab_esp = 0x3ff1ef60
                0x000000003ff1ef57                hci_rsvd_evt_msk = 0x3ff1ef57
                0x000000003ff1ef54                lld_aux_phy_to_rate = 0x3ff1ef54
                0x000000003ff1ef4c                lld_init_max_aux_dur_tab = 0x3ff1ef4c
                0x000000003ff1ef44                lld_scan_map_legacy_pdu_to_evt_type = 0x3ff1ef44
                0x000000003ff1ef3c                lld_scan_max_aux_dur_tab = 0x3ff1ef3c
                0x000000003ff1ef34                lld_sync_max_aux_dur_tab = 0x3ff1ef34
                0x000000003ff1ef2c                llm_local_le_feats = 0x3ff1ef2c
                0x000000003ff1ef24                llm_local_le_states = 0x3ff1ef24
                0x000000003ff1eefc                llm_local_supp_cmds = 0x3ff1eefc
                0x000000003ff1eedc                maxSecretKey_256 = 0x3ff1eedc
                0x000000003ff1eed4                max_data_tx_time = 0x3ff1eed4
                0x000000003ff1eec3                one_bits = 0x3ff1eec3
                0x000000003ff1eebe                rwip_coex_cfg = 0x3ff1eebe
                0x000000003ff1eea8                rwip_priority = 0x3ff1eea8
                0x000000003ff1ee5c                veryBigHexP256 = 0x3ff1ee5c
                0x0000000040005250                esp_pp_rom_version_get = 0x40005250
                0x000000004000525c                RC_GetBlockAckTime = 0x4000525c
                0x0000000040005268                ebuf_list_remove = 0x40005268
                0x0000000040005298                GetAccess = 0x40005298
                0x00000000400052a4                hal_mac_is_low_rate_enabled = 0x400052a4
                0x00000000400052b0                hal_mac_tx_get_blockack = 0x400052b0
                0x00000000400052c8                ic_get_trc = 0x400052c8
                0x00000000400052e0                ic_mac_init = 0x400052e0
                0x00000000400052ec                ic_interface_enabled = 0x400052ec
                0x00000000400052f8                is_lmac_idle = 0x400052f8
                0x0000000040005310                lmacDiscardAgedMSDU = 0x40005310
                0x0000000040005334                lmacIsIdle = 0x40005334
                0x0000000040005340                lmacIsLongFrame = 0x40005340
                0x0000000040005358                lmacPostTxComplete = 0x40005358
                0x0000000040005364                lmacProcessAllTxTimeout = 0x40005364
                0x0000000040005370                lmacProcessCollisions = 0x40005370
                0x000000004000537c                lmacProcessRxSucData = 0x4000537c
                0x0000000040005388                lmacReachLongLimit = 0x40005388
                0x0000000040005394                lmacReachShortLimit = 0x40005394
                0x00000000400053a0                lmacRecycleMPDU = 0x400053a0
                0x00000000400053ac                lmacRxDone = 0x400053ac
                0x00000000400053c4                lmacTxDone = 0x400053c4
                0x00000000400053dc                mac_tx_set_duration = 0x400053dc
                0x00000000400053f4                mac_tx_set_plcp0 = 0x400053f4
                0x000000004000540c                mac_tx_set_plcp2 = 0x4000540c
                0x0000000040005424                pm_disable_dream_timer = 0x40005424
                0x0000000040005430                pm_disable_sleep_delay_timer = 0x40005430
                0x0000000040005448                pm_mac_wakeup = 0x40005448
                0x0000000040005454                pm_mac_sleep = 0x40005454
                0x0000000040005460                pm_enable_active_timer = 0x40005460
                0x000000004000546c                pm_enable_sleep_delay_timer = 0x4000546c
                0x0000000040005478                pm_local_tsf_process = 0x40005478
                0x0000000040005484                pm_set_beacon_filter = 0x40005484
                0x0000000040005490                pm_is_in_wifi_slice_threshold = 0x40005490
                0x000000004000549c                pm_is_waked = 0x4000549c
                0x00000000400054c0                pm_on_data_rx = 0x400054c0
                0x00000000400054cc                pm_on_tbtt = 0x400054cc
                0x0000000040005514                pm_sleep_for = 0x40005514
                0x000000004000552c                ppAMPDU2Normal = 0x4000552c
                0x0000000040005544                ppCalFrameTimes = 0x40005544
                0x0000000040005550                ppCalSubFrameLength = 0x40005550
                0x0000000040005568                ppCheckTxAMPDUlength = 0x40005568
                0x0000000040005574                ppDequeueRxq_Locked = 0x40005574
                0x0000000040005580                ppDequeueTxQ = 0x40005580
                0x000000004000558c                ppEmptyDelimiterLength = 0x4000558c
                0x0000000040005598                ppEnqueueRxq = 0x40005598
                0x00000000400055a4                ppEnqueueTxDone = 0x400055a4
                0x00000000400055b0                ppGetTxQFirstAvail_Locked = 0x400055b0
                0x00000000400055bc                ppGetTxframe = 0x400055bc
                0x00000000400055e0                ppProcessRxPktHdr = 0x400055e0
                0x00000000400055f8                ppRecordBarRRC = 0x400055f8
                0x0000000040005604                lmacRequestTxopQueue = 0x40005604
                0x0000000040005610                lmacReleaseTxopQueue = 0x40005610
                0x000000004000561c                ppRecycleAmpdu = 0x4000561c
                0x0000000040005628                ppRecycleRxPkt = 0x40005628
                0x0000000040005634                ppResortTxAMPDU = 0x40005634
                0x0000000040005640                ppResumeTxAMPDU = 0x40005640
                0x0000000040005664                ppRxProtoProc = 0x40005664
                0x0000000040005670                ppSearchTxQueue = 0x40005670
                0x000000004000567c                ppSearchTxframe = 0x4000567c
                0x0000000040005688                ppSelectNextQueue = 0x40005688
                0x0000000040005694                ppSubFromAMPDU = 0x40005694
                0x00000000400056ac                ppTxPkt = 0x400056ac
                0x00000000400056b8                ppTxProtoProc = 0x400056b8
                0x00000000400056c4                ppTxqUpdateBitmap = 0x400056c4
                0x00000000400056dc                pp_hdrsize = 0x400056dc
                0x00000000400056e8                pp_post = 0x400056e8
                0x00000000400056f4                pp_process_hmac_waiting_txq = 0x400056f4
                0x0000000040005700                rcGetAmpduSched = 0x40005700
                0x000000004000570c                rcUpdateRxDone = 0x4000570c
                0x0000000040005718                rc_get_trc = 0x40005718
                0x0000000040005724                rc_get_trc_by_index = 0x40005724
                0x0000000040005730                rcAmpduLowerRate = 0x40005730
                0x000000004000573c                rcampduuprate = 0x4000573c
                0x0000000040005748                rcClearCurAMPDUSched = 0x40005748
                0x0000000040005754                rcClearCurSched = 0x40005754
                0x0000000040005760                rcClearCurStat = 0x40005760
                0x0000000040005778                rcLowerSched = 0x40005778
                0x0000000040005784                rcSetTxAmpduLimit = 0x40005784
                0x000000004000579c                rcUpdateAckSnr = 0x4000579c
                0x00000000400057cc                rcUpSched = 0x400057cc
                0x00000000400057d8                rssi_margin = 0x400057d8
                0x00000000400057e4                rx11NRate2AMPDULimit = 0x400057e4
                0x00000000400057f0                TRC_AMPDU_PER_DOWN_THRESHOLD = 0x400057f0
                0x00000000400057fc                TRC_AMPDU_PER_UP_THRESHOLD = 0x400057fc
                0x0000000040005808                trc_calc_duration = 0x40005808
                0x0000000040005814                trc_isTxAmpduOperational = 0x40005814
                0x0000000040005820                trc_onAmpduOp = 0x40005820
                0x000000004000582c                TRC_PER_IS_GOOD = 0x4000582c
                0x0000000040005838                trc_SetTxAmpduState = 0x40005838
                0x0000000040005844                trc_tid_isTxAmpduOperational = 0x40005844
                0x0000000040005850                trcAmpduSetState = 0x40005850
                0x000000004000585c                wDevCheckBlockError = 0x4000585c
                0x0000000040005874                wDev_DiscardFrame = 0x40005874
                0x0000000040005880                wDev_GetNoiseFloor = 0x40005880
                0x000000004000588c                wDev_IndicateAmpdu = 0x4000588c
                0x00000000400058a4                wdev_bank_store = 0x400058a4
                0x00000000400058b0                wdev_bank_load = 0x400058b0
                0x00000000400058bc                wdev_mac_reg_load = 0x400058bc
                0x00000000400058c8                wdev_mac_reg_store = 0x400058c8
                0x00000000400058d4                wdev_mac_special_reg_load = 0x400058d4
                0x00000000400058e0                wdev_mac_special_reg_store = 0x400058e0
                0x00000000400058ec                wdev_mac_wakeup = 0x400058ec
                0x00000000400058f8                wdev_mac_sleep = 0x400058f8
                0x0000000040005904                hal_mac_is_dma_enable = 0x40005904
                0x0000000040005928                wdevProcessRxSucDataAll = 0x40005928
                0x0000000040005934                wdev_csi_len_align = 0x40005934
                0x0000000040005940                ppDequeueTxDone_Locked = 0x40005940
                0x0000000040005964                config_is_cache_tx_buf_enabled = 0x40005964
                0x0000000040005970                //ppMapWaitTxq = 0x40005970
                0x000000004000597c                ppProcessWaitingQueue = 0x4000597c
                0x0000000040005988                ppDisableQueue = 0x40005988
                0x0000000040005994                pm_allow_tx = 0x40005994
                0x00000000400059a0                wdev_is_data_in_rxlist = 0x400059a0
                0x00000000400059ac                ppProcTxCallback = 0x400059ac
                0x000000003ff1ee58                our_instances_ptr = 0x3ff1ee58
                0x000000003fcef954                pTxRx = 0x3fcef954
                0x000000003fcef950                lmacConfMib_ptr = 0x3fcef950
                0x000000003fcef94c                our_wait_eb = 0x3fcef94c
                0x000000003fcef948                our_tx_eb = 0x3fcef948
                0x000000003fcef944                pp_wdev_funcs = 0x3fcef944
                0x000000003fcef940                g_osi_funcs_p = 0x3fcef940
                0x000000003fcef93c                wDevCtrl_ptr = 0x3fcef93c
                0x000000003ff1ee54                g_wdev_last_desc_reset_ptr = 0x3ff1ee54
                0x000000003fcef938                wDevMacSleep_ptr = 0x3fcef938
                0x000000003fcef934                g_lmac_cnt_ptr = 0x3fcef934
                0x000000003ff1ee50                our_controls_ptr = 0x3ff1ee50
                0x000000003fcef930                pp_sig_cnt_ptr = 0x3fcef930
                0x000000003fcef92c                g_eb_list_desc_ptr = 0x3fcef92c
                0x000000003fcef928                s_fragment_ptr = 0x3fcef928
                0x000000003fcef924                if_ctrl_ptr = 0x3fcef924
                0x000000003fcef920                g_intr_lock_mux = 0x3fcef920
                0x000000003fcef91c                g_wifi_global_lock = 0x3fcef91c
                0x000000003fcef918                s_wifi_queue = 0x3fcef918
                0x000000003fcef914                pp_task_hdl = 0x3fcef914
                0x000000003fcef910                s_pp_task_create_sem = 0x3fcef910
                0x000000003fcef90c                s_pp_task_del_sem = 0x3fcef90c
                0x000000003fcef908                g_wifi_menuconfig_ptr = 0x3fcef908
                0x000000003fcef904                xphyQueue = 0x3fcef904
                0x000000003fcef900                ap_no_lr_ptr = 0x3fcef900
                0x000000003fcef8fc                rc11BSchedTbl_ptr = 0x3fcef8fc
                0x000000003fcef8f8                rc11NSchedTbl_ptr = 0x3fcef8f8
                0x000000003fcef8f4                rcLoRaSchedTbl_ptr = 0x3fcef8f4
                0x000000003fcef8f0                BasicOFDMSched_ptr = 0x3fcef8f0
                0x000000003fcef8ec                trc_ctl_ptr = 0x3fcef8ec
                0x000000003fcef8e8                g_pm_cnt_ptr = 0x3fcef8e8
                0x000000003fcef8e4                g_pm_ptr = 0x3fcef8e4
                0x000000003fcef8e0                g_pm_cfg_ptr = 0x3fcef8e0
                0x000000003fcef8dc                g_esp_mesh_quick_funcs_ptr = 0x3fcef8dc
                0x000000003fcef8d8                g_txop_queue_status_ptr = 0x3fcef8d8
                0x000000003fcef8d4                g_mac_sleep_en_ptr = 0x3fcef8d4
                0x000000003fcef8d0                g_mesh_is_root_ptr = 0x3fcef8d0
                0x000000003fcef8cc                g_mesh_topology_ptr = 0x3fcef8cc
                0x000000003fcef8c8                g_mesh_init_ps_type_ptr = 0x3fcef8c8
                0x000000003fcef8c4                g_mesh_is_started_ptr = 0x3fcef8c4
                0x000000003fcef8c0                g_config_func = 0x3fcef8c0
                0x000000003fcef8bc                g_net80211_tx_func = 0x3fcef8bc
                0x000000003fcef8b8                g_timer_func = 0x3fcef8b8
                0x000000003fcef8b4                s_michael_mic_failure_cb = 0x3fcef8b4
                0x000000003fcef8b0                wifi_sta_rx_probe_req = 0x3fcef8b0
                0x000000003fcef8ac                g_tx_done_cb_func = 0x3fcef8ac
                0x000000003fcef860                g_per_conn_trc = 0x3fcef860
                0x000000003fcef85c                s_encap_amsdu_func = 0x3fcef85c
                0x00000000400059b8                esp_net80211_rom_version_get = 0x400059b8
                0x00000000400059c4                ampdu_dispatch = 0x400059c4
                0x00000000400059d0                ampdu_dispatch_all = 0x400059d0
                0x00000000400059dc                ampdu_dispatch_as_many_as_possible = 0x400059dc
                0x00000000400059e8                ampdu_dispatch_movement = 0x400059e8
                0x00000000400059f4                ampdu_dispatch_upto = 0x400059f4
                0x0000000040005a00                chm_is_at_home_channel = 0x40005a00
                0x0000000040005a0c                cnx_node_is_existing = 0x40005a0c
                0x0000000040005a18                cnx_node_search = 0x40005a18
                0x0000000040005a24                ic_ebuf_recycle_rx = 0x40005a24
                0x0000000040005a30                ic_ebuf_recycle_tx = 0x40005a30
                0x0000000040005a3c                ic_reset_rx_ba = 0x40005a3c
                0x0000000040005a48                ieee80211_align_eb = 0x40005a48
                0x0000000040005a60                ieee80211_ampdu_start_age_timer = 0x40005a60
                0x0000000040005a78                ieee80211_is_tx_allowed = 0x40005a78
                0x0000000040005a84                ieee80211_output_pending_eb = 0x40005a84
                0x0000000040005a9c                ieee80211_set_tx_desc = 0x40005a9c
                0x0000000040005ab4                wifi_get_macaddr = 0x40005ab4
                0x0000000040005ac0                wifi_rf_phy_disable = 0x40005ac0
                0x0000000040005acc                wifi_rf_phy_enable = 0x40005acc
                0x0000000040005ad8                ic_ebuf_alloc = 0x40005ad8
                0x0000000040005af0                ieee80211_copy_eb_header = 0x40005af0
                0x0000000040005afc                ieee80211_recycle_cache_eb = 0x40005afc
                0x0000000040005b08                ieee80211_search_node = 0x40005b08
                0x0000000040005b14                roundup2 = 0x40005b14
                0x0000000040005b20                ieee80211_crypto_encap = 0x40005b20
                0x0000000040005b44                ieee80211_set_tx_pti = 0x40005b44
                0x0000000040005b50                wifi_is_started = 0x40005b50
                0x0000000040005b5c                ieee80211_gettid = 0x40005b5c
                0x000000003fcef858                net80211_funcs = 0x3fcef858
                0x000000003fcef854                g_scan = 0x3fcef854
                0x000000003fcef850                g_chm = 0x3fcef850
                0x000000003fcef84c                g_ic_ptr = 0x3fcef84c
                0x000000003fcef848                g_hmac_cnt_ptr = 0x3fcef848
                0x000000003fcef844                g_tx_cacheq_ptr = 0x3fcef844
                0x000000003fcef840                s_netstack_free = 0x3fcef840
                0x000000003fcef83c                mesh_rxcb = 0x3fcef83c
                0x000000003fcef838                sta_rxcb = 0x3fcef838
                0x0000000040005b68                esp_coex_rom_version_get = 0x40005b68
                0x0000000040005b74                coex_bt_release = 0x40005b74
                0x0000000040005b80                coex_bt_request = 0x40005b80
                0x0000000040005b8c                coex_core_ble_conn_dyn_prio_get = 0x40005b8c
                0x0000000040005ba4                coex_core_pti_get = 0x40005ba4
                0x0000000040005bb0                coex_core_release = 0x40005bb0
                0x0000000040005bbc                coex_core_request = 0x40005bbc
                0x0000000040005bc8                coex_core_status_get = 0x40005bc8
                0x0000000040005be0                coex_event_duration_get = 0x40005be0
                0x0000000040005bec                coex_hw_timer_disable = 0x40005bec
                0x0000000040005bf8                coex_hw_timer_enable = 0x40005bf8
                0x0000000040005c04                coex_hw_timer_set = 0x40005c04
                0x0000000040005c10                coex_schm_interval_set = 0x40005c10
                0x0000000040005c1c                coex_schm_lock = 0x40005c1c
                0x0000000040005c28                coex_schm_unlock = 0x40005c28
                0x0000000040005c40                coex_wifi_release = 0x40005c40
                0x0000000040005c4c                esp_coex_ble_conn_dynamic_prio_get = 0x40005c4c
                0x000000003fcef834                coex_env_ptr = 0x3fcef834
                0x000000003fcef830                coex_pti_tab_ptr = 0x3fcef830
                0x000000003fcef82c                coex_schm_env_ptr = 0x3fcef82c
                0x000000003fcef828                coexist_funcs = 0x3fcef828
                0x000000003fcef824                g_coa_funcs_p = 0x3fcef824
                0x000000003fcef820                g_coex_param_ptr = 0x3fcef820
                0x0000000040005c58                phy_get_romfuncs = 0x40005c58
                0x0000000040005c64                rom_abs_temp = 0x40005c64
                0x0000000040005c70                rom_bb_bss_cbw40_dig = 0x40005c70
                0x0000000040005c7c                rom_bb_wdg_test_en = 0x40005c7c
                0x0000000040005c88                rom_bb_wdt_get_status = 0x40005c88
                0x0000000040005c94                rom_bb_wdt_int_enable = 0x40005c94
                0x0000000040005ca0                rom_bb_wdt_rst_enable = 0x40005ca0
                0x0000000040005cac                rom_bb_wdt_timeout_clear = 0x40005cac
                0x0000000040005cb8                rom_cbw2040_cfg = 0x40005cb8
                0x0000000040005cc4                rom_check_noise_floor = 0x40005cc4
                0x0000000040005cd0                rom_chip_i2c_readReg = 0x40005cd0
                0x0000000040005cdc                rom_chip_i2c_writeReg = 0x40005cdc
                0x0000000040005ce8                rom_dc_iq_est = 0x40005ce8
                0x0000000040005cf4                rom_disable_agc = 0x40005cf4
                0x0000000040005d00                rom_en_pwdet = 0x40005d00
                0x0000000040005d0c                rom_enable_agc = 0x40005d0c
                0x0000000040005d18                rom_get_bbgain_db = 0x40005d18
                0x0000000040005d24                rom_get_data_sat = 0x40005d24
                0x0000000040005d30                rom_get_i2c_read_mask = 0x40005d30
                0x0000000040005d3c                rom_get_pwctrl_correct = 0x40005d3c
                0x0000000040005d48                rom_i2c_readReg = 0x40005d48
                0x0000000040005d54                rom_i2c_readReg_Mask = 0x40005d54
                0x0000000040005d60                rom_i2c_writeReg = 0x40005d60
                0x0000000040005d6c                rom_i2c_writeReg_Mask = 0x40005d6c
                0x0000000040005d78                rom_index_to_txbbgain = 0x40005d78
                0x0000000040005d84                rom_iq_est_disable = 0x40005d84
                0x0000000040005d90                rom_iq_est_enable = 0x40005d90
                0x0000000040005d9c                rom_linear_to_db = 0x40005d9c
                0x0000000040005da8                rom_loopback_mode_en = 0x40005da8
                0x0000000040005db4                rom_mhz2ieee = 0x40005db4
                0x0000000040005dc0                rom_noise_floor_auto_set = 0x40005dc0
                0x0000000040005dcc                rom_pbus_debugmode = 0x40005dcc
                0x0000000040005dd8                rom_pbus_force_mode = 0x40005dd8
                0x0000000040005de4                rom_pbus_force_test = 0x40005de4
                0x0000000040005df0                rom_pbus_rd = 0x40005df0
                0x0000000040005dfc                rom_pbus_rd_addr = 0x40005dfc
                0x0000000040005e08                rom_pbus_rd_shift = 0x40005e08
                0x0000000040005e14                rom_pbus_set_dco = 0x40005e14
                0x0000000040005e20                rom_pbus_set_rxgain = 0x40005e20
                0x0000000040005e2c                rom_pbus_workmode = 0x40005e2c
                0x0000000040005e38                rom_pbus_xpd_rx_off = 0x40005e38
                0x0000000040005e44                rom_pbus_xpd_rx_on = 0x40005e44
                0x0000000040005e50                rom_pbus_xpd_tx_off = 0x40005e50
                0x0000000040005e5c                rom_pbus_xpd_tx_on = 0x40005e5c
                0x0000000040005e68                rom_phy_byte_to_word = 0x40005e68
                0x0000000040005e74                rom_phy_disable_cca = 0x40005e74
                0x0000000040005e80                rom_phy_enable_cca = 0x40005e80
                0x0000000040005e8c                rom_phy_get_noisefloor = 0x40005e8c
                0x0000000040005e98                rom_phy_get_rx_freq = 0x40005e98
                0x0000000040005ea4                rom_phy_set_bbfreq_init = 0x40005ea4
                0x0000000040005eb0                rom_pow_usr = 0x40005eb0
                0x0000000040005ebc                rom_pwdet_sar2_init = 0x40005ebc
                0x0000000040005ec8                rom_read_hw_noisefloor = 0x40005ec8
                0x0000000040005ed4                rom_read_sar_dout = 0x40005ed4
                0x0000000040005ee0                rom_set_cal_rxdc = 0x40005ee0
                0x0000000040005eec                rom_set_chan_cal_interp = 0x40005eec
                0x0000000040005ef8                rom_set_loopback_gain = 0x40005ef8
                0x0000000040005f04                rom_set_noise_floor = 0x40005f04
                0x0000000040005f10                rom_set_rxclk_en = 0x40005f10
                0x0000000040005f1c                rom_set_tx_dig_gain = 0x40005f1c
                0x0000000040005f28                rom_set_txcap_reg = 0x40005f28
                0x0000000040005f34                rom_set_txclk_en = 0x40005f34
                0x0000000040005f40                rom_spur_cal = 0x40005f40
                0x0000000040005f4c                rom_spur_reg_write_one_tone = 0x40005f4c
                0x0000000040005f58                rom_target_power_add_backoff = 0x40005f58
                0x0000000040005f64                rom_tx_pwctrl_bg_init = 0x40005f64
                0x0000000040005f70                rom_txbbgain_to_index = 0x40005f70
                0x0000000040005f7c                rom_wifi_11g_rate_chg = 0x40005f7c
                0x0000000040005f88                rom_write_gain_mem = 0x40005f88
                0x0000000040005f94                chip728_phyrom_version = 0x40005f94
                0x0000000040005fa0                rom_disable_wifi_agc = 0x40005fa0
                0x0000000040005fac                rom_enable_wifi_agc = 0x40005fac
                0x0000000040005fb8                rom_bt_index_to_bb = 0x40005fb8
                0x0000000040005fc4                rom_bt_bb_to_index = 0x40005fc4
                0x0000000040005fd0                rom_spur_coef_cfg = 0x40005fd0
                0x0000000040005fdc                rom_bb_bss_cbw40 = 0x40005fdc
                0x0000000040005fe8                rom_set_cca = 0x40005fe8
                0x0000000040005ff4                rom_tx_paon_set = 0x40005ff4
                0x0000000040006000                rom_i2cmst_reg_init = 0x40006000
                0x000000004000600c                rom_iq_corr_enable = 0x4000600c
                0x0000000040006018                rom_fe_reg_init = 0x40006018
                0x0000000040006024                rom_agc_reg_init = 0x40006024
                0x0000000040006030                rom_bb_reg_init = 0x40006030
                0x000000004000603c                rom_mac_enable_bb = 0x4000603c
                0x0000000040006048                rom_bb_wdg_cfg = 0x40006048
                0x0000000040006054                rom_force_txon = 0x40006054
                0x0000000040006060                rom_fe_txrx_reset = 0x40006060
                0x000000004000606c                rom_set_rx_comp = 0x4000606c
                0x0000000040006078                rom_set_pbus_reg = 0x40006078
                0x0000000040006084                rom_write_chan_freq = 0x40006084
                0x0000000040006090                rom_phy_xpd_rf = 0x40006090
                0x000000004000609c                rom_set_xpd_sar = 0x4000609c
                0x00000000400060a8                rom_get_target_power_offset = 0x400060a8
                0x00000000400060b4                rom_write_txrate_power_offset = 0x400060b4
                0x00000000400060c0                rom_get_rate_fcc_index = 0x400060c0
                0x00000000400060cc                rom_get_rate_target_power = 0x400060cc
                0x00000000400060d8                rom_pkdet_vol_start = 0x400060d8
                0x00000000400060e4                rom_read_sar2_code = 0x400060e4
                0x00000000400060f0                rom_get_sar2_vol = 0x400060f0
                0x00000000400060fc                rom_get_pll_vol = 0x400060fc
                0x0000000040006108                rom_get_phy_target_power = 0x40006108
                0x0000000040006114                rom_temp_to_power = 0x40006114
                0x0000000040006120                rom_phy_track_pll_cap = 0x40006120
                0x000000004000612c                rom_phy_pwdet_always_en = 0x4000612c
                0x0000000040006138                rom_phy_pwdet_onetime_en = 0x40006138
                0x0000000040006144                rom_get_i2c_mst0_mask = 0x40006144
                0x0000000040006150                rom_get_i2c_hostid = 0x40006150
                0x000000004000615c                rom_enter_critical_phy = 0x4000615c
                0x0000000040006168                rom_exit_critical_phy = 0x40006168
                0x0000000040006174                rom_chip_i2c_readReg_org = 0x40006174
                0x0000000040006180                rom_i2c_paral_set_mst0 = 0x40006180
                0x000000004000618c                rom_i2c_paral_set_read = 0x4000618c
                0x0000000040006198                rom_i2c_paral_read = 0x40006198
                0x00000000400061a4                rom_i2c_paral_write = 0x400061a4
                0x00000000400061b0                rom_i2c_paral_write_num = 0x400061b0
                0x00000000400061bc                rom_i2c_paral_write_mask = 0x400061bc
                0x00000000400061c8                rom_bb_bss_cbw40_ana = 0x400061c8
                0x00000000400061d4                rom_chan_to_freq = 0x400061d4
                0x00000000400061e0                rom_open_i2c_xpd = 0x400061e0
                0x00000000400061ec                rom_dac_rate_set = 0x400061ec
                0x00000000400061f8                rom_tsens_read_init = 0x400061f8
                0x0000000040006204                rom_tsens_code_read = 0x40006204
                0x0000000040006210                rom_tsens_index_to_dac = 0x40006210
                0x000000004000621c                rom_tsens_index_to_offset = 0x4000621c
                0x0000000040006228                rom_tsens_dac_cal = 0x40006228
                0x0000000040006234                rom_code_to_temp = 0x40006234
                0x0000000040006240                rom_write_pll_cap_mem = 0x40006240
                0x000000004000624c                rom_pll_correct_dcap = 0x4000624c
                0x0000000040006258                rom_phy_en_hw_set_freq = 0x40006258
                0x0000000040006264                rom_phy_dis_hw_set_freq = 0x40006264
                0x0000000040006270                rom_pll_vol_cal = 0x40006270
                0x000000004000627c                rom_wrtie_pll_cap = 0x4000627c
                0x0000000040006288                rom_set_tx_gain_mem = 0x40006288
                0x0000000040006294                rom_bt_tx_dig_gain = 0x40006294
                0x00000000400062a0                rom_bt_get_tx_gain = 0x400062a0
                0x00000000400062ac                rom_get_chan_target_power = 0x400062ac
                0x00000000400062b8                rom_get_tx_gain_value = 0x400062b8
                0x00000000400062c4                rom_wifi_tx_dig_gain = 0x400062c4
                0x00000000400062d0                rom_wifi_get_tx_gain = 0x400062d0
                0x00000000400062dc                rom_fe_i2c_reg_renew = 0x400062dc
                0x00000000400062e8                rom_wifi_agc_sat_gain = 0x400062e8
                0x00000000400062f4                rom_i2c_master_reset = 0x400062f4
                0x0000000040006300                rom_bt_filter_reg = 0x40006300
                0x000000004000630c                rom_phy_bbpll_cal = 0x4000630c
                0x0000000040006318                rom_i2c_sar2_init_code = 0x40006318
                0x0000000040006324                rom_phy_param_addr = 0x40006324
                0x0000000040006330                rom_phy_reg_init = 0x40006330
                0x000000004000633c                rom_set_chan_reg = 0x4000633c
                0x0000000040006348                rom_phy_wakeup_init = 0x40006348
                0x0000000040006354                rom_phy_i2c_init1 = 0x40006354
                0x0000000040006360                rom_tsens_temp_read = 0x40006360
                0x000000004000636c                rom_bt_track_pll_cap = 0x4000636c
                0x0000000040006378                rom_wifi_track_pll_cap = 0x40006378
                0x0000000040006384                rom_wifi_set_tx_gain = 0x40006384
                0x0000000040006390                rom_txpwr_cal_track = 0x40006390
                0x000000004000639c                rom_tx_pwctrl_background = 0x4000639c
                0x00000000400063a8                rom_bt_set_tx_gain = 0x400063a8
                0x00000000400063b4                rom_noise_check_loop = 0x400063b4
                0x00000000400063c0                rom_phy_close_rf = 0x400063c0
                0x00000000400063cc                rom_phy_xpd_tsens = 0x400063cc
                0x00000000400063d8                rom_phy_freq_mem_backup = 0x400063d8
                0x00000000400063e4                rom_phy_ant_init = 0x400063e4
                0x00000000400063f0                rom_bt_track_tx_power = 0x400063f0
                0x00000000400063fc                rom_wifi_track_tx_power = 0x400063fc
                0x0000000040006408                rom_phy_dig_reg_backup = 0x40006408
                0x0000000040006414                chip728_phyrom_version_num = 0x40006414
                0x0000000040006420                rom_mac_tx_chan_offset = 0x40006420
                0x000000004000642c                rom_rx_gain_force = 0x4000642c
                0x000000003fcef81c                phy_param_rom = 0x3fcef81c
                [!provide]                        PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                0x0000000040001b18                PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                0x0000000040001a94                PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                0x0000000040001aa0                PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                [!provide]                        PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                0x0000000040001f74                PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                0x0000000040001fa4                PROVIDE (esp_rom_efuse_get_flash_wp_gpio = ets_efuse_get_wp_pad)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                0x0000000040000690                PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_usb_acm_init = Uart_Init_USB)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_md5_init = MD5Init)
                [!provide]                        PROVIDE (esp_rom_md5_update = MD5Update)
                [!provide]                        PROVIDE (esp_rom_md5_final = MD5Final)
                0x00000000400006d8                PROVIDE (esp_rom_software_reset_system = software_reset)
                0x00000000400006e4                PROVIDE (esp_rom_software_reset_cpu = software_reset_cpu)
                0x00000000400005d0                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040000600                PROVIDE (esp_rom_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x000000004000057c                PROVIDE (esp_rom_get_reset_reason = rtc_get_reset_reason)
                0x0000000040001b54                PROVIDE (esp_rom_route_intr_matrix = intr_matrix_set)
                0x0000000040001a40                PROVIDE (esp_rom_get_cpu_ticks_per_us = ets_get_cpu_frequency)
                0x0000000040001a4c                PROVIDE (esp_rom_set_cpu_ticks_per_us = ets_update_cpu_frequency)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = spi_flash_attach)
                [!provide]                        PROVIDE (esp_rom_spiflash_clear_bp = esp_rom_spiflash_unlock)
                0x0000000040000a44                PROVIDE (esp_rom_spiflash_write_enable = SPI_write_enable)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_area = SPIEraseArea)
                [!provide]                        PROVIDE (esp_rom_spiflash_fix_dummylen = spi_dummy_len_fix)
                [!provide]                        PROVIDE (esp_rom_spiflash_set_drvs = SetSpiDrvs)
                [!provide]                        PROVIDE (esp_rom_spiflash_select_padsfunc = SelectSpiFunction)
                [!provide]                        PROVIDE (esp_rom_spiflash_common_cmd = SPI_Common_Command)
                0x0000000040005d48                PROVIDE (esp_rom_regi2c_read = rom_i2c_readReg)
                0x0000000040005d54                PROVIDE (esp_rom_regi2c_read_mask = rom_i2c_readReg_Mask)
                0x0000000040005d60                PROVIDE (esp_rom_regi2c_write = rom_i2c_writeReg)
                0x0000000040005d6c                PROVIDE (esp_rom_regi2c_write_mask = rom_i2c_writeReg_Mask)
                0x000000004000216c                __absvdi2 = 0x4000216c
                0x0000000040002178                __absvsi2 = 0x40002178
                0x0000000040002184                __adddf3 = 0x40002184
                0x0000000040002190                __addsf3 = 0x40002190
                0x000000004000219c                __addvdi3 = 0x4000219c
                0x00000000400021a8                __addvsi3 = 0x400021a8
                0x00000000400021b4                __ashldi3 = 0x400021b4
                0x00000000400021c0                __ashrdi3 = 0x400021c0
                0x00000000400021cc                __bswapdi2 = 0x400021cc
                0x00000000400021d8                __bswapsi2 = 0x400021d8
                0x00000000400021e4                __clear_cache = 0x400021e4
                0x00000000400021f0                __clrsbdi2 = 0x400021f0
                0x00000000400021fc                __clrsbsi2 = 0x400021fc
                0x0000000040002208                __clzdi2 = 0x40002208
                0x0000000040002214                __clzsi2 = 0x40002214
                0x0000000040002220                __cmpdi2 = 0x40002220
                0x000000004000222c                __ctzdi2 = 0x4000222c
                0x0000000040002238                __ctzsi2 = 0x40002238
                0x0000000040002244                __divdc3 = 0x40002244
                0x0000000040002250                __divdf3 = 0x40002250
                0x000000004000225c                __divdi3 = 0x4000225c
                0x0000000040002268                __divsc3 = 0x40002268
                0x0000000040002274                __divsf3 = 0x40002274
                0x0000000040002280                __divsi3 = 0x40002280
                0x000000004000228c                __eqdf2 = 0x4000228c
                0x0000000040002298                __eqsf2 = 0x40002298
                0x00000000400022a4                __extendsfdf2 = 0x400022a4
                0x00000000400022b0                __ffsdi2 = 0x400022b0
                0x00000000400022bc                __ffssi2 = 0x400022bc
                0x00000000400022c8                __fixdfdi = 0x400022c8
                0x00000000400022d4                __fixdfsi = 0x400022d4
                0x00000000400022e0                __fixsfdi = 0x400022e0
                0x00000000400022ec                __fixsfsi = 0x400022ec
                0x00000000400022f8                __fixunsdfsi = 0x400022f8
                0x0000000040002304                __fixunssfdi = 0x40002304
                0x0000000040002310                __fixunssfsi = 0x40002310
                0x000000004000231c                __floatdidf = 0x4000231c
                0x0000000040002328                __floatdisf = 0x40002328
                0x0000000040002334                __floatsidf = 0x40002334
                0x0000000040002340                __floatsisf = 0x40002340
                0x000000004000234c                __floatundidf = 0x4000234c
                0x0000000040002358                __floatundisf = 0x40002358
                0x0000000040002364                __floatunsidf = 0x40002364
                0x0000000040002370                __floatunsisf = 0x40002370
                0x000000004000237c                __gcc_bcmp = 0x4000237c
                0x0000000040002388                __gedf2 = 0x40002388
                0x0000000040002394                __gesf2 = 0x40002394
                0x00000000400023a0                __gtdf2 = 0x400023a0
                0x00000000400023ac                __gtsf2 = 0x400023ac
                0x00000000400023b8                __ledf2 = 0x400023b8
                0x00000000400023c4                __lesf2 = 0x400023c4
                0x00000000400023d0                __lshrdi3 = 0x400023d0
                0x00000000400023dc                __ltdf2 = 0x400023dc
                0x00000000400023e8                __ltsf2 = 0x400023e8
                0x00000000400023f4                __moddi3 = 0x400023f4
                0x0000000040002400                __modsi3 = 0x40002400
                0x000000004000240c                __muldc3 = 0x4000240c
                0x0000000040002418                __muldf3 = 0x40002418
                0x0000000040002424                __muldi3 = 0x40002424
                0x0000000040002430                __mulsc3 = 0x40002430
                0x000000004000243c                __mulsf3 = 0x4000243c
                0x0000000040002448                __mulsi3 = 0x40002448
                0x0000000040002454                __mulvdi3 = 0x40002454
                0x0000000040002460                __mulvsi3 = 0x40002460
                0x000000004000246c                __nedf2 = 0x4000246c
                0x0000000040002478                __negdf2 = 0x40002478
                0x0000000040002484                __negdi2 = 0x40002484
                0x0000000040002490                __negsf2 = 0x40002490
                0x000000004000249c                __negvdi2 = 0x4000249c
                0x00000000400024a8                __negvsi2 = 0x400024a8
                0x00000000400024b4                __nesf2 = 0x400024b4
                0x00000000400024c0                __paritysi2 = 0x400024c0
                0x00000000400024cc                __popcountdi2 = 0x400024cc
                0x00000000400024d8                __popcountsi2 = 0x400024d8
                0x00000000400024e4                __powidf2 = 0x400024e4
                0x00000000400024f0                __powisf2 = 0x400024f0
                0x00000000400024fc                __subdf3 = 0x400024fc
                0x0000000040002508                __subsf3 = 0x40002508
                0x0000000040002514                __subvdi3 = 0x40002514
                0x0000000040002520                __subvsi3 = 0x40002520
                0x000000004000252c                __truncdfsf2 = 0x4000252c
                0x0000000040002538                __ucmpdi2 = 0x40002538
                0x0000000040002544                __udivdi3 = 0x40002544
                0x0000000040002550                __udivmoddi4 = 0x40002550
                0x000000004000255c                __udivsi3 = 0x4000255c
                0x0000000040002568                __udiv_w_sdiv = 0x40002568
                0x0000000040002574                __umoddi3 = 0x40002574
                0x0000000040002580                __umodsi3 = 0x40002580
                0x000000004000258c                __unorddf2 = 0x4000258c
                0x0000000040002598                __unordsf2 = 0x40002598
                0x00000000400011dc                esp_rom_newlib_init_common_mutexes = 0x400011dc
                0x00000000400011e8                memset = 0x400011e8
                0x00000000400011f4                memcpy = 0x400011f4
                0x0000000040001200                memmove = 0x40001200
                0x000000004000120c                memcmp = 0x4000120c
                0x0000000040001218                strcpy = 0x40001218
                0x0000000040001224                strncpy = 0x40001224
                0x0000000040001230                strcmp = 0x40001230
                0x000000004000123c                strncmp = 0x4000123c
                0x0000000040001248                strlen = 0x40001248
                0x0000000040001254                strstr = 0x40001254
                0x0000000040001260                bzero = 0x40001260
                0x0000000040001278                sbrk = 0x40001278
                0x0000000040001284                isalnum = 0x40001284
                0x0000000040001290                isalpha = 0x40001290
                0x000000004000129c                isascii = 0x4000129c
                0x00000000400012a8                isblank = 0x400012a8
                0x00000000400012b4                iscntrl = 0x400012b4
                0x00000000400012c0                isdigit = 0x400012c0
                0x00000000400012cc                islower = 0x400012cc
                0x00000000400012d8                isgraph = 0x400012d8
                0x00000000400012e4                isprint = 0x400012e4
                0x00000000400012f0                ispunct = 0x400012f0
                0x00000000400012fc                isspace = 0x400012fc
                0x0000000040001308                isupper = 0x40001308
                0x0000000040001314                toupper = 0x40001314
                0x0000000040001320                tolower = 0x40001320
                0x000000004000132c                toascii = 0x4000132c
                0x0000000040001338                memccpy = 0x40001338
                0x0000000040001344                memchr = 0x40001344
                0x0000000040001350                memrchr = 0x40001350
                0x000000004000135c                strcasecmp = 0x4000135c
                0x0000000040001368                strcasestr = 0x40001368
                0x0000000040001374                strcat = 0x40001374
                0x000000004000138c                strchr = 0x4000138c
                0x0000000040001398                strcspn = 0x40001398
                0x00000000400013a4                strcoll = 0x400013a4
                0x00000000400013b0                strlcat = 0x400013b0
                0x00000000400013bc                strlcpy = 0x400013bc
                0x00000000400013c8                strlwr = 0x400013c8
                0x00000000400013d4                strncasecmp = 0x400013d4
                0x00000000400013e0                strncat = 0x400013e0
                0x00000000400013f8                strnlen = 0x400013f8
                0x0000000040001404                strrchr = 0x40001404
                0x0000000040001410                strsep = 0x40001410
                0x000000004000141c                strspn = 0x4000141c
                0x0000000040001428                strtok_r = 0x40001428
                0x0000000040001434                strupr = 0x40001434
                0x0000000040001440                longjmp = 0x40001440
                0x000000004000144c                setjmp = 0x4000144c
                0x0000000040001458                abs = 0x40001458
                0x0000000040001464                div = 0x40001464
                0x0000000040001470                labs = 0x40001470
                0x000000004000147c                ldiv = 0x4000147c
                0x0000000040001488                qsort = 0x40001488
                0x00000000400014b8                utoa = 0x400014b8
                0x00000000400014c4                itoa = 0x400014c4
                [!provide]                        PROVIDE (atoi = 0x400014d0)
                [!provide]                        PROVIDE (atol = 0x400014dc)
                [!provide]                        PROVIDE (strdup = 0x40001380)
                [!provide]                        PROVIDE (strndup = 0x400013ec)
                [!provide]                        PROVIDE (rand_r = 0x40001494)
                [!provide]                        PROVIDE (rand = 0x400014a0)
                [!provide]                        PROVIDE (srand = 0x400014ac)
                [!provide]                        PROVIDE (strtol = 0x400014e8)
                [!provide]                        PROVIDE (strtoul = 0x400014f4)
                [!provide]                        PROVIDE (fflush = 0x40001500)
                [!provide]                        PROVIDE (_fflush_r = 0x4000150c)
                [!provide]                        PROVIDE (_fwalk = 0x40001518)
                [!provide]                        PROVIDE (_fwalk_reent = 0x40001524)
                [!provide]                        PROVIDE (__swbuf_r = 0x40001548)
                0x0000000040001554                __swbuf = 0x40001554
                0x000000003fceffd4                syscall_table_ptr = 0x3fceffd4
                0x000000003fceffd0                _global_impure_ptr = 0x3fceffd0
                0x0000000040000570                _rom_chip_id = 0x40000570
                0x0000000040000574                _rom_eco_version = 0x40000574
                0x0000000060000000                PROVIDE (UART0 = 0x60000000)
                0x0000000060002000                PROVIDE (SPIMEM1 = 0x60002000)
                0x0000000060003000                PROVIDE (SPIMEM0 = 0x60003000)
                0x0000000060004000                PROVIDE (GPIO = 0x60004000)
                [!provide]                        PROVIDE (SDM = 0x60004f00)
                0x0000000060007000                PROVIDE (EFUSE = 0x60007000)
                0x0000000060008000                PROVIDE (RTCCNTL = 0x60008000)
                [!provide]                        PROVIDE (RTCIO = 0x60008400)
                0x0000000060008800                PROVIDE (SENS = 0x60008800)
                [!provide]                        PROVIDE (RTC_I2C = 0x60008c00)
                [!provide]                        PROVIDE (HINF = 0x6000b000)
                [!provide]                        PROVIDE (I2S0 = 0x6000f000)
                [!provide]                        PROVIDE (I2S1 = 0x6002d000)
                0x0000000060010000                PROVIDE (UART1 = 0x60010000)
                [!provide]                        PROVIDE (I2C0 = 0x60013000)
                [!provide]                        PROVIDE (UHCI0 = 0x60014000)
                [!provide]                        PROVIDE (UHCI1 = 0x60014000)
                [!provide]                        PROVIDE (HOST = 0x60015000)
                [!provide]                        PROVIDE (RMT = 0x60016000)
                [!provide]                        PROVIDE (RMTMEM = 0x60016800)
                [!provide]                        PROVIDE (PCNT = 0x60017000)
                [!provide]                        PROVIDE (SLC = 0x60018000)
                [!provide]                        PROVIDE (LEDC = 0x60019000)
                [!provide]                        PROVIDE (MCPWM0 = 0x6001e000)
                [!provide]                        PROVIDE (MCPWM1 = 0x6002c000)
                [!provide]                        PROVIDE (MCP = 0x600c3000)
                0x000000006001f000                PROVIDE (TIMERG0 = 0x6001f000)
                0x0000000060020000                PROVIDE (TIMERG1 = 0x60020000)
                0x0000000060023000                PROVIDE (SYSTIMER = 0x60023000)
                0x0000000060024000                PROVIDE (GPSPI2 = 0x60024000)
                0x0000000060025000                PROVIDE (GPSPI3 = 0x60025000)
                [!provide]                        PROVIDE (SYSCON = 0x60026000)
                [!provide]                        PROVIDE (I2C1 = 0x60027000)
                [!provide]                        PROVIDE (SDMMC = 0x60028000)
                [!provide]                        PROVIDE (TWAI = 0x6002b000)
                [!provide]                        PROVIDE (GDMA = 0x6003f000)
                0x000000006002e000                PROVIDE (UART2 = 0x6002e000)
                [!provide]                        PROVIDE (DMA = 0x6003f000)
                [!provide]                        PROVIDE (APB_SARADC = 0x60040000)
                [!provide]                        PROVIDE (LCD_CAM = 0x60041000)
                0x0000000060038000                PROVIDE (USB_SERIAL_JTAG = 0x60038000)
                [!provide]                        PROVIDE (USB0 = 0x60080000)
                [!provide]                        PROVIDE (USB_DWC = 0x60080000)
                [!provide]                        PROVIDE (USB_WRAP = 0x60039000)
                [!provide]                        PROVIDE (WORLD_CONTROLLER = 0x600d0000)
                [!provide]                        PROVIDE (SYSTEM = 0x600c0000)
OUTPUT(zephyr/zephyr_pre0.elf elf32-xtensa-le)
